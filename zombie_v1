/*
Latest Version of Zombie GameMode is created by Fahadking07
For help contact me at: fahad.king.xo9@gmail.com
Feel free to edit The GameMode.
~Hopefully you wont remove the CREDIT.

Credits:
Fahadking07
Kitten
Hossa
*/


native WP_Hash(buffer[], len, const str[]);

#include <a_samp>
#include <zcmd>
#include <sscanf2>
#include <foreach>
#include <YSI\y_ini>
#include <KickBan>


/*Clans For server
To Change Clan Name Just replace [MN] With [Anyname] or (Anyname) ,etc
*/
#define DIALOGCLAN 1000
#define TAGCLAN "[MN]"
#define PASSWORDCLAN "mn01"

// Defines
#define function%0(%1) forward%0(%1);public%0(%1)
#define NON_IMMUNE 69,14,261,2,107,11,125,6,299,43,124,12,13,280,230,274,27,25,95,260,149,29,161,76,23,115,287,67,200
#define MAX_MAPTIME 250
#define MAX_RESTART_TIME 10000
#define MAX_MAPUPDATE_TIME 1450
#define MAX_SHOW_CP_TIME 1000
#define MAX_END_TIME 60000
#define MAX_BALANCERUPDATE_TIME 6000
#define MAX_MAP_FILES 45
#define SCM SendClientMessage
#define SCMTA SendClientMessageToAll


#define Grey 0xC0C0C0FF // Defining the color 'Grey'
// Reaction Test Script
#define Loop(%0,%1) for(new %0 = 0; %0 != %1; %0++)
#define PURPLE 0xAFAFAFAA // Don't care this is Grey
#define GREEN 0x33CCFFAA // Don't care this is Light Blue
#define TIME 180000 //180000
// Reaction Test Script

new String[128], Float:SpecX[MAX_PLAYERS], Float:SpecY[MAX_PLAYERS], Float:SpecZ[MAX_PLAYERS], vWorld[MAX_PLAYERS], Inter[MAX_PLAYERS];
new IsSpecing[MAX_PLAYERS], Name[MAX_PLAYER_NAME], IsBeingSpeced[MAX_PLAYERS],spectatorid[MAX_PLAYERS];

#define PRESSED(%0) (((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))

#define PATH "/ZMA/Users/%s.ini"
#define NAME ".:|| ZOMBIE APOCALYPSE ||:. New Classes!"
#define SCRIPT "v0.3"
#define SCRIPTER "Fahad"
#define SITE "Www.Freesa-mp.com"
#define chat "{FFFFFF}Â»"
#define PLAYER_MUTE_TIME_MINUTES (2)

#define DIALOG_REGISTER 0
#define DIALOG_LOGIN 1
#define DIALOG_RADIO 2
#define DIALOG_KICK 3
#define DIALOG_TOP 4
#define DIALOG_WARN 5
#define DIALOG_BANNED 6
#define DIALOG_CMDS 7
#define DIALOG_HELP 8
#define DIALOG_HOWTOXP 9
#define DIALOG_ACMDS 10
#define DIALOG_RULES 11
#define DIALOG_CLASS 12
#define DIALOG_CLASS2 13
#define DIALOG_CLASS_2 14
#define DIALOG_CLASS_2_2 15
#define DIALOG_CLASS_3 16
#define DIALOG_CLASS_3_3 17
#define DIALOG_ADMINS 18
#define DIALOG_VIPS 19
#define DIALOG_REPORT 20
#define DIALOG_REPORT_2 21
#define DIALOG_SHOUT 22
#define DIALOG_VIPINFO 23
#define DIALOG_VIP 24
#define DIALOG_VIP_CLASS 25
#define DIALOG_COINS 26
#define DIALOG_BUY_WEAPONS 27
#define DIALOG_BUY_CLASSES 28
#define DIALOG_XP 30
#define DIALOG_RADIO_1 31

#define TEAM_ZOMBIE 0
#define TEAM_HUMAN 1

#define ENDCHAT_01 0

#define COLOR_HUMAN 0x33CCFFAA
#define COLOR_ZOMBIE 0x9ACD3244
#define COLOR_ADUTY 0xFF0000AA

#define COLOR_GREY 0xAFAFAFAA
#define ROSA                 0xFF66FFAA
#define BLU_CHIARO           0x00BFFFAA
#define COLOR_GREY 0xAFAFAFAA
#define COLOR_GREEN 0x33AA33AA
#define COLOR_RED 0xFF0000AA
#define COLOR_YELLOW 0xFFFF00AA
#define COLOR_WHITE 0xFFFFFFAA
#define COLOR_BLUE 0x0000BBAA
#define COLOR_LIGHTBLUE 0x33CCFFAA
#define COLOR_ORANGE 0xFF9900AA
#define COLOR_LIME 0x10F441AA
#define COLOR_MAGENTA 0xFF00FFFF
#define COLOR_NAVY 0x000080AA
#define COLOR_AQUA 0xFF000000
#define COLOR_CRIMSON 0xDC143CAA
#define COLOR_FLBLUE 0x6495EDAA
#define COLOR_BISQUE 0xFFE4C4AA
#define COLOR_BLACK 0x000000AA
#define COLOR_CHARTREUSE 0x7FFF00AA
#define COLOR_BROWN 0xA52A2AAA
#define COLOR_CORAL 0xFF7F50AA
#define COLOR_GOLD 0xB8860BAA
#define COLOR_GREENYELLOW 0xADFF2FAA
#define COLOR_INDIGO 0x4B00B0AA
#define COLOR_IVORY 0xFFFF82AA
#define COLOR_LAWNGREEN 0x7CFC00AA
#define COLOR_SEAGREEN 0x20B2AAAA
#define COLOR_LIMEGREEN 0x32CD32AA //<--- Dark lime
#define COLOR_MIDNIGHTBLUE 0X191970AA
#define COLOR_MAROON 0x800000AA
#define COLOR_OLIVE 0x808000AA
#define COLOR_ORANGERED 0xFF4500AA
#define COLOR_PINK 0xFFC0CBAA // - Light light pink
#define COLOR_SPRINGGREEN 0x00FF7FAA
#define COLOR_TOMATO 0xFF6347AA // - Tomato >:/ sounds wrong lol... well... :P
#define COLOR_YELLOWGREEN 0x9ACD32AA //- like military green
#define COLOR_MEDIUMAQUA 0x83BFBFAA
#define COLOR_MEDIUMMAGENTA 0x8B008BAA // dark magenta ^^

// Human Classes (New Classes were ADDED)
#define CIVILIAN 1501
#define POLICEMAN 1502
#define MEDIC 1503
#define SCOUT 1504
#define HEAVYMEDIC 1505
#define FARMER 1506
#define ENGINEER 1507
#define SWAT 1508
#define HEAVYSHOTGUN 1509
#define ADVANCEDMEDIC 1510
#define ADVANCEDENGINEER 1511
#define FEDERALAGENT 1512
#define KICKBACK 1513
#define ADVANCEDSCOUT 1514
#define COWBOY 1515
#define ASSASSIN 1516
#define TRAPMASTER 1517
#define VIPENGINEER 1518
#define VIPMEDIC 1519
#define VIPSCOUT 1520
#define E_ENGINEER 1521
#define SOLDIER 1522
#define DOCTOR 1523
#define FBI 1524
#define SCIENTIST 1525
#define EXPERIENCEDSCOUT 1526
#define PIMP 1527
#define WEAPONSDEALER 1528
#define SMOKEUP 1529
#define SHOTGUNSPECIAL 1530
#define BOXER 1231
#define BOMBER 1232
#define MASTER 1233
#define GHOST 1234
#define BUDDY 1235
#define AKICK 1236
#define TECG 1237
#define BULL 1238
#define HITMAN 1239


// Zombie Classes (New classes)
#define STANDARDZOMBIE 2501
#define MUTATEDZOMBIE 2502
#define FASTZOMBIE 2503
#define REAPERZOMBIE 2504
#define WITCHZOMBIE 2505
#define BOOMERZOMBIE 2506
#define STOMPERZOMBIE 2507
#define SCREAMERZOMBIE 2508
#define FIREBREATHER 2509
#define ADVANCEDMUTATED 2510
#define HEAVYSCREAMER 2511
#define FLESHEATER 2512
#define ADVANCEDWITCH 2513
#define ADVANCEDBOOMER 2514
#define NEMESIS 2515
#define ADVSTOMPER 2516
#define ADVSCREAMER 2517
#define HZOMBIE 2518
#define SLENDER 2519
#define KZOM 2520
#define GZOM 2521
#define DSNIPE 2522

#define COL_WHITE          "{FFFFFF}"
#define COL_GREY           "{C3C3C3}"
#define COL_GREEN          "{37DB45}"
#define COL_RED            "{FF3333}"
#define COL_YELLOW         "{F3FF02}"
#define COL_ORANGE         "{F9B857}"
#define COL_BLUE           "{0049FF}"
#define COL_PINK           "{FF00EA}"
#define COL_LIGHTBLUE      "{00C0FF}"
#define COL_LGREEN         "{C9FFAB}"


forward NoSpawnKill(playerid);

// Variables
new time;
new mapvar;
new balvar;
new mapid;
new gateobj;
new playerOnline;
new playersAliveCount;
new DocShield;
new Trap;
new meatDrops[MAX_PLAYERS];
new ammoDrops[MAX_PLAYERS];
new LastMapStarted = -1;
new PlayerPressedJump[MAX_PLAYERS];

new playedtimer[MAX_PLAYERS];
new team[MAX_PLAYERS];
new c4Obj[MAX_PLAYERS];
new smokemachine[MAX_PLAYERS];
new PlayerShotPlayer[MAX_PLAYERS][MAX_PLAYERS];

new Text:EventText;
new Text:CurrentMap;
new Text:remadeText;
new Text:remadeText2;
new Text:AliveInfo;
new Text:ChatMsg;
new Text:TimeLeft;
new Text:UntilRescue;
new Text:XP;
new Text:Infected[MAX_PLAYERS];
new Text:iKilled[MAX_PLAYERS];
new Text:myXP[MAX_PLAYERS];
new Text:ServerIntroOne[MAX_PLAYERS];
new Text:ServerIntroTwo[MAX_PLAYERS];
new shoutstring[256];

enum mapinfo
{
	MapName[128],
	FSMapName[128],
	Float:HumanSpawnX,
	Float:HumanSpawnY,
	Float:HumanSpawnZ,
	Float:HumanSpawn2X,
	Float:HumanSpawn2Y,
	Float:HumanSpawn2Z,
	Float:ZombieSpawnX,
	Float:ZombieSpawnY,
	Float:ZombieSpawnZ,
	Float:GateX,
	Float:GateY,
	Float:GateZ,
	Float:GaterX,
	Float:GaterY,
	Float:GaterZ,
	Float:CPx,
	Float:CPy,
	Float:CPz,
	GateID,
	MoveGate,
	AllowWater,
	Interior,
	Weather,
	Time,
	EvacType,
	IsStarted,
	XPType,
};
new Map[mapinfo];

enum playerinfo
{
	pPassword[129],
	pXP,
	ReadCmds,
	pKills,
	pDeaths,
	pRank,
	pEvac,
	pAdminLevel,
	pAdminDuty,
	pBanned,
	gLeader,
	gMember,
	pVipLevel,
	pHour,
	pMin,
	pSec,
	pMapsPlayed,
	pCoins,
	pLogged,
	pWarnings,
    FirstPS,
	pPM,
	IsPlayerMuted,
	Killstreak,
	pHumanClass,
	pZombieClass,
	IsPlayerInfected,
	IsPlayerInfectedTimer,
	Boxes,
	BoxesAdvanced,
	SkinChanges,
	ArmourChanges,
	C4,
	traps,
	pVipKickBack,
	pVipFlash,
	pVipBoxes,
	pLadders,
	pFakeKills,
	pAmmoBoxes,
	pKickBackCoin,
	pDamageShotgunCoin,
	pDamageDeagleCoin,
	pDamageMP5Coin,
	pDoctorShield,
	pRenamed,
	pTrapMasterTrap,
	pScientistCure,
	Frozen
};
new pInfo[MAX_PLAYERS][playerinfo];

enum aname
{
	HighJumpScout,
	HighJumpZombie,
	StomperPushing,
	WitchAttack,
	ScreamerZombieAb,
	ScreamerZombieAb2,
	InfectionNormal,
	InfectionMutated,
	ShoutCooldown,
	HealCoolDown,
	FireBreatherCooldown,
	NemesisCooldown,
	AdvancedMutatedCooldown,
	WitchAttack2,
	InfectionFleshEater
}
new Abilitys[MAX_PLAYERS][aname];

new randomMessages[][] =
{
  	""chat""COL_BLUE" [Info] "COL_WHITE"Earn XP by killing the enemy team or using your ability and donating for double XP!",
  	""chat""COL_BLUE" [Help] "COL_WHITE"Are you lost are you new? try out the command '/help' and /vinfo",
  	""chat""COL_BLUE" [Help] "COL_WHITE"Got bugged? Cant move a single cm? try out /rbug",
  	""chat""COL_BLUE" [Wass up] "COL_WHITE"Good news We are offering free vip level 1 now!! For more info type /vhelp and /vinfo",
  	""chat""COL_RED" [Note] "COL_WHITE"Remember to report hackers and rule breakers with /report <id> <reason>",
  	""chat""COL_BLUE" [Help] "COL_WHITE"Remember to read the rules to prevent you from getting banned /rules",
	""chat""COL_BLUE" [Info] "COL_WHITE"Remember to use /ss command to save your stats to avoid losing XP",
	""chat""COL_BLUE" [Help] "COL_WHITE"Got bugged? Cant move a single cm? try out /rbug",
	""chat""COL_BLUE" [Wass up] "COL_WHITE"Good news We are offering free vip level 1 now!! For more info type /vhelp and /vinfo",
	""chat""COL_BLUE" [Help] "COL_WHITE"Having problem with objects ? Try out /robj to remove them (only for humans)",
	""chat""COL_RED" [Note] "COL_WHITE"Do NOT attack your team mates or you will be punished!",
	""chat""COL_RED" [Note] "COL_WHITE"Report hackers and rule breakers with /report <id> <reason> , DO NOT SAY IT IN MAIN CHAT",
	""chat""COL_BLUE" [Wass up] "COL_WHITE"Good news We are offering free vip level 1 now!! For more info type /vhelp",
	""chat""COL_LGREEN" [Updates] "COL_WHITE"Wanna know whats new? Why not? Try out /updates",
	""chat""COL_BLUE" [Info] "COL_WHITE"Always respect other players if you want to be hero in front of them",
	""chat""COL_BLUE" [Help] "COL_WHITE"Need help? Try out /help",
	""chat""COL_BLUE" [Help] "COL_WHITE"Having problem with objects ? Try out /robj to remove them (only for humans)",
	""chat""COL_BLUE" [Wass up] "COL_WHITE"Good news We are offering free vip level 1 now!! For more info type /vhelp and /vinfo",
	""chat""COL_ORANGE" [Help Us] "COL_WHITE"If you find a bug please report it on our forum "COL_ORANGE" Www.Freesa-mp.com",
	""chat""COL_LGREEN" [BUY] "COL_WHITE"You can buy weapons, classes, objects,etc "COL_WHITE" ' /buy ' command",
	""chat""COL_BLUE" [Help] "COL_WHITE"Got bugged? Cant move a single cm? try out /rbug",
	""chat""COL_YELLOW" [Whats New] "COL_WHITE"We did an aditional class menu "COL_WHITE" ' /class2 ' "COL_WHITE" make sure you check it out!",
	""chat""COL_BLUE" [Help] "COL_WHITE"Having problem with objects ? Try out /robj to remove them (only for humans)",
	""chat""COL_BLUE" [Whats up] "COL_WHITE"Good news We are offering free vip level 1 now!! For more info type /vhelp",
	""chat""COL_RED" [Note] "COL_WHITE"Do NOT spawn kill zombies, else you will be punished and even banned if you keep doing it!",
	""chat""COL_BLUE" [Info] "COL_WHITE"Earn xp and unlock new classes. Try out /class2!!",
	""chat""COL_BLUE" [Help] "COL_WHITE"Got bugged? Cant move a single cm? try out /rbug",
	""chat""COL_ORANGE" [Help Us] "COL_WHITE"We are looking for scripters and mappers! Please Apply in our forum: Www.Freesa-mp.com",
	""chat""COL_BLUE" [Help] "COL_WHITE"Need help? try out /help or ask any online admin",
	""chat""COL_BLUE" [Wass up] "COL_WHITE"Good news We are offering free vip level 1 now!! For more info type /vhelp and /vinfo",
	""chat""COL_YELLOW" [Note] "COL_WHITE"Remember to use /ss command to save your stats to avoid losing XP"
};

forward load_Map_basic(Mapid, name[], value[]);
forward LoadUser_data(playerid,name[],value[]);
forward TimeOnServer(playerid);
forward Float:GetDistanceBetweenPlayers(p1,p2);
forward GetClosestPlayer(p1);
forward RandomZombie();

main()
{
	print("\n----------------------------------");
	print(""NAME" Loaded with version of "SCRIPT"");
	print("----------------------------------\n");
}

function StartMap()
{
    ClearChat();
    foreach(Player,i)
	{
	    SetCameraBehindPlayer(i);
	    ClearAnimations(i);
		HumanSetup(i);
		SpawnPlayer(i);
		CurePlayer(i);
		SetPlayerDrunkLevel(i,0);
		DisablePlayerCheckpoint(i);
		pInfo[i][Boxes] = 2;
		pInfo[i][BoxesAdvanced] = 10;
		pInfo[i][SkinChanges] = 2;
		pInfo[i][ArmourChanges] = 2;
		pInfo[i][pVipBoxes] = 35;
		pInfo[i][pLadders] = 2;
		pInfo[i][pFakeKills] = 0;
		pInfo[i][pAmmoBoxes] = 10;
		pInfo[i][C4] = 4;
		pInfo[i][pTrapMasterTrap] = 1;
		pInfo[i][pScientistCure] = 1;
		pInfo[i][pDoctorShield] = 1;
		pInfo[i][pMapsPlayed]++;
		TextDrawHideForPlayer(i, ServerIntroOne[i]);
		TextDrawHideForPlayer(i, ServerIntroTwo[i]);
		DestroyPickup(meatDrops[i]);
		DestroyPickup(ammoDrops[i]);
		DestroyObject(DocShield);
		DestroyObject(Trap);
		TogglePlayerControllable(i,1);
	}

	time = MAX_MAPTIME;

	SetWeather(Map[Weather]);
	SetWorldTime(Map[Time]);
	UpdateMapName();
	SendClientMessageToAll(-1,""chat""COL_LGREEN" [Clear]"COL_WHITE" Chat Cleared "COL_YELLOW"[Reason: Next Map]");
	SendClientMessageToAll(-1,""chat""COL_RED" [Info]"COL_WHITE" These maps are created by 07 Mappers");

    SetTimer("RandomZombie",1000,false);
    gateobj = CreateObject(Map[GateID],Map[GateX],Map[GateY],Map[GateZ],Map[GaterX],Map[GaterY],Map[GaterZ],500.0);
	mapvar = SetTimer("OnMapUpdate",MAX_MAPUPDATE_TIME,true);
	balvar = SetTimer("OnMapBalance",MAX_BALANCERUPDATE_TIME,true);
	return 1;
}

function EndMap()
{
    ClearObjects();
    DestroyAllVehicle();
	UnloadFilterScript(Map[FSMapName]);
    LoadMap(LoadNewMap());
	LoadFilterScript(Map[FSMapName]);
    
	SetTimer("StartMap",MAX_RESTART_TIME,false);
	GameTextForAll("~n~~n~~n~~n~~n~~g~Loading~w~ next map",3500,5);

	foreach(Player,i)
	{
	    ChangeCameraView(i);
	    TogglePlayerControllable(i,0);
    	TextDrawShowForPlayer(i, ServerIntroOne[i]);
		TextDrawShowForPlayer(i, ServerIntroTwo[i]);

		if(pInfo[i][pAdminDuty] == 1)
		{
			pInfo[i][pAdminDuty] = 0;
		}
	}
	SendClientMessageToAll(-1,""chat""COL_YELLOW" Creating Map Objects. Plz wait...");
	return 1;
}

function OnMapUpdate()
{
	time -= 1;

	new str[64];
	format(str,sizeof(str),"~p~%d",time);
	TextDrawSetString(TimeLeft,str);

	if(time <= 0) TextDrawSetString(TimeLeft,"~y~EVAC!!"),KillTimer(mapvar),KillTimer(balvar),SetTimer("ShowCheckpoint",MAX_SHOW_CP_TIME,false);
    return 1;
}

function ShowCheckpoint()
{
    CreateEvacMaps();
	MoveObject(gateobj,Map[GateX],Map[GateY],Map[MoveGate],3.0);
	foreach(Player,i) SetPlayerCheckpoint(i,Map[CPx],Map[CPy],Map[CPz],6.0);
	SetTimer("EndMap",MAX_END_TIME,false);
	return 1;
}

function OnMapBalance()
{
	if(playerOnline >= 2)
	{
		if(GetTeamPlayersAlive(TEAM_HUMAN) == 0)
		{
			KillTimer(balvar);
			KillTimer(mapvar);
			TextDrawSetString(TimeLeft,"~r~Zombies Rocked!!!");
			SetTimer("EndMap",4000,false); // Cannot use MAX_END_TIME Because of MAX_END_TIME is set to 1 minute not 4 seconds *NOTE TO ME*
			foreach(Player,i)
			{
				if(team[i] == TEAM_ZOMBIE)
				{
					pInfo[i][pXP] += 30;
					GivePlayerXP(i,30);
				}
			}
		}
	}
	return 1;
}

public OnPlayerEnterCheckpoint(playerid)
{
	if(team[playerid] == TEAM_HUMAN)
	{
	    new string[256];
	    if(Map[EvacType] == 1)
	    {
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid,-1408.2051,-970.8841,198.9738);
			format(string,sizeof(string), ""chat""COL_LIGHTBLUE" %s made it to evacuation point and has received 1 coin!",PlayerName(playerid));
			SendClientMessageToAll(-1,string);
			DisablePlayerCheckpoint(playerid);
			CurePlayer(playerid);
			GivePlayerXP(playerid,50);
			pInfo[playerid][pEvac]++;
			pInfo[playerid][pCoins]++;
			SetPlayerColor(playerid,COLOR_YELLOW);
		}

	    if(Map[EvacType] == 2)
	    {
			SetPlayerPos(playerid,3024.4983,447.9744,14.7813);
			SetPlayerInterior(playerid,0);
			format(string,sizeof(string), ""chat""COL_LIGHTBLUE" %s made it to the water evacuation point and has received 1 coin!",PlayerName(playerid));
			SendClientMessageToAll(-1,string);
			DisablePlayerCheckpoint(playerid);
			CurePlayer(playerid);
			GivePlayerXP(playerid,50);
			pInfo[playerid][pEvac]++;
			pInfo[playerid][pCoins]++;
			SetPlayerColor(playerid,COLOR_YELLOW);
		}

  		if(Map[EvacType] == 3)
	    {
	        SetPlayerPos(playerid,285.5,2510.30004882817,121.5);
	        SetPlayerInterior(playerid,0);
			format(string,sizeof(string), ""chat""COL_LIGHTBLUE" %s made it to the helicopter evacuation point and has received 1 coin!",PlayerName(playerid));
			SendClientMessageToAll(-1,string);
			DisablePlayerCheckpoint(playerid);
			CurePlayer(playerid);
			GivePlayerXP(playerid,50);
			pInfo[playerid][pEvac]++;
			pInfo[playerid][pCoins]++;
			SetPlayerColor(playerid,COLOR_YELLOW);
		}

		if(Map[EvacType] == 4)
	    {
	        SetPlayerPos(playerid,1456.3000488281,-1126,427.10000610352);///By Fahad
	        SetPlayerInterior(playerid,0);
			format(string,sizeof(string), ""chat""COL_LIGHTBLUE" %s made it to the Parachute evacuation point and has received 1 coin!",PlayerName(playerid));
			SendClientMessageToAll(-1,string);
			DisablePlayerCheckpoint(playerid);
			CurePlayer(playerid);
			GivePlayerXP(playerid,50);
			pInfo[playerid][pEvac]++;
			pInfo[playerid][pCoins]++;
			GivePlayerWeapon(playerid,46,1);
			SetPlayerColor(playerid,COLOR_YELLOW);

		}
	}
	return 1;
}

public OnPlayerPickUpPickup(playerid, pickupid)
{
	new string[256];
	DestroyPickup(meatDrops[playerid]);
	if(team[playerid] == TEAM_ZOMBIE)
	{
		if(pInfo[playerid][pZombieClass] == BOOMERZOMBIE) { SetPlayerHealth(playerid,50); }
		else { SetPlayerHealth(playerid,100.0); }
	}

	if(team[playerid] == TEAM_HUMAN)
	{
		if(pInfo[playerid][pHumanClass] == ENGINEER || pInfo[playerid][pHumanClass] == ADVANCEDENGINEER || pInfo[playerid][pHumanClass] == VIPENGINEER || pInfo[playerid][pHumanClass] == E_ENGINEER || pInfo[playerid][pHumanClass] == TRAPMASTER || pInfo[playerid][pHumanClass] == BOMBER)
		{
			switch(pInfo[playerid][pHumanClass])
			{
				case ENGINEER: pInfo[playerid][Boxes]++,GameTextForPlayer(playerid,"~g~Found~w~: 1 Box",4000,5),DestroyPickup(meatDrops[playerid]);
				case ADVANCEDENGINEER: pInfo[playerid][BoxesAdvanced] += 2,GameTextForPlayer(playerid,"~g~Found~w~: 2 Boxes",4000,5),DestroyPickup(meatDrops[playerid]);
				case VIPENGINEER: pInfo[playerid][pVipBoxes] += 3,GameTextForPlayer(playerid,"~g~Found~w~: 3 Boxes",4000,5),DestroyPickup(meatDrops[playerid]);
				case E_ENGINEER: pInfo[playerid][pLadders] += 1,GameTextForPlayer(playerid,"~g~Found~w~: 1 Ladders",4000,5),DestroyPickup(meatDrops[playerid]);
				case TRAPMASTER: pInfo[playerid][pTrapMasterTrap] += 1,GameTextForPlayer(playerid,"~g~Found~w~: 1 trap",4000,5),DestroyPickup(meatDrops[playerid]);
				case BOMBER: pInfo[playerid][pXP] += 10,GameTextForPlayer(playerid,"~g~Found~w~: 10 xp",4000,5),DestroyPickup(meatDrops[playerid]);
			}
		}
		else
		{
			if(pInfo[playerid][IsPlayerInfected] == 0)
			{
				new slot, weap, ammo;
				for ( slot = 0; slot < 14; slot++ )
				{
					GetPlayerWeaponData(playerid,slot,weap,ammo);
					if(IsValidWeapon(weap))
					{
						new randomselect = random(2);
						switch(randomselect)
						{
							case 0:
							{
								new randomammo = random(50);
								GivePlayerWeapon(playerid,weap,randomammo);
								format(string,sizeof(string),"~g~Found~w~: %d ammo",randomammo);
								GameTextForPlayer(playerid,string,4000,5);
								DestroyPickup(meatDrops[playerid]);
							}
							case 1:
							{
								new randomxp = random(35);
								format(string,sizeof(string),"~g~Found~w~: %d XP",randomxp);
								GameTextForPlayer(playerid,string,4000,5);
								pInfo[playerid][pXP] += randomxp;
								DestroyPickup(meatDrops[playerid]);
							}
						}
					}
				}
			}
		}
	}

    return 1;
}

public OnGameModeInit()
{
	UsePlayerPedAnims();
	SetGameModeText("Zombie Survival "SCRIPT"");
	SendRconCommand("weburl "SITE"");
	SetTimer("PayDay", 1200000, true);

	AddPlayerClass(181, 1958.3783, 1343.1572, 15.3746, 269.1425, 0, 0, 0, 0, 0, 0);
	AllowInteriorWeapons(1);
    DisableInteriorEnterExits();
    SetTimer("RandomMessages",50000,true);
    SetTimer("OnServerUpdate", 1000, true);

    SetTeamCount(2);

	Map[IsStarted] = 0;
	Map[XPType] = 0;
	mapid = 0;
	SetWorldTime(0);
	SetWeather(12);
	DefaultTextdraws();

	SetTimer("HG",1000,1);
	return 1;
}

function OnServerUpdate()
{
    foreach(Player, i)
    {
   		if(GetPlayerMoney(i) >= 1) return ResetPlayerMoney(i);
		SetPlayerScore(i,pInfo[i][pXP]);
		UpdateXPTextdraw(i);

		if(GetPlayerSpecialAction(i) == SPECIAL_ACTION_USEJETPACK)
		{
			new Admin[24] = "Anti-cheat";
			new reason3[128] = "Jetpack";
			BanPlayer(i,reason3,Admin);
		}

		new Float:armor;
		GetPlayerArmour(i,armor);
		if(armor >= 96)
		{
			new Admin[24] = "Anti-cheat";
			new reason3[128] = "Armour Hack (Exceeded over 96f)";
			BanPlayer(i,reason3,Admin);
		}

		if(team[i] == TEAM_ZOMBIE)
		{
	 		switch(GetPlayerWeapon(i))
			{
				case 2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,41,42,43,44,45,46:
				{
					ResetPlayerWeapons(i);
					GivePlayerWeapon(i,9,1);
				}
			}
	  	}

		if(team[i] == TEAM_ZOMBIE)
		{
		    if(armor > 0.0)
		    {
				SetPlayerArmour(i,0.0);
			}
		}

		if(IsPlayerInAnyVehicle(i))
	    {
			if(pInfo[i][pAdminLevel] == 0)
			{
				Kick(i);
			}
		}

		if(pInfo[i][pVipFlash] == 1)
  		{
    		switch(random(5))
   			{
				case 0: SetPlayerColor(i,COLOR_BLUE);
                case 1: SetPlayerColor(i,COLOR_YELLOW);
				case 2: SetPlayerColor(i,COLOR_RED);
				case 3: SetPlayerColor(i,COLOR_PINK);
				case 4: SetPlayerColor(i,COLOR_ORANGE);
			}
		}
		DoctorShield();
		TrapMasterTrap();
		UpdateAliveInfo();
	}
	return 1;
}

public OnGameModeExit()
{
	TextDrawHideForAll(TimeLeft);
	TextDrawDestroy(TimeLeft);
	TextDrawHideForAll(UntilRescue);
	TextDrawHideForAll(AliveInfo);
	TextDrawDestroy(AliveInfo);
	TextDrawHideForAll(remadeText);
	TextDrawDestroy(remadeText);
	TextDrawHideForAll(remadeText2);
	TextDrawDestroy(remadeText2);
	TextDrawHideForAll(CurrentMap);
	TextDrawHideForAll(ChatMsg);
	TextDrawDestroy(CurrentMap);
 	TextDrawHideForAll(XP);
	TextDrawDestroy(XP);
	TextDrawHideForAll(EventText);
	TextDrawDestroy(EventText);

	for(new i; i < MAX_PLAYERS; i ++)
	{
		TextDrawHideForAll(Infected[i]);
		TextDrawHideForAll(iKilled[i]);
		TextDrawDestroy(iKilled[i]);
		TextDrawHideForAll(myXP[i]);
		TextDrawDestroy(myXP[i]);
		TextDrawHideForAll(ServerIntroOne[i]);
		TextDrawDestroy(ServerIntroOne[i]);
		TextDrawHideForAll(ServerIntroTwo[i]);
		TextDrawDestroy(ServerIntroTwo[i]);
	}
	return 1;
}

public OnPlayerRequestClass(playerid, classid)
{
    SetPlayerPos(playerid, 1959.728271, -1199.584106, 20.909767);
    SetPlayerFacingAngle(playerid, 90.177986);
    SetPlayerCameraLookAt(playerid, 1959.728271, -1199.584106, 20.909767);
    SetPlayerCameraPos(playerid, 1959.728271 + (25 * floatsin(-90.177986, degrees)), -1199.584106 + (25 * floatcos(-90.177986, degrees)), 20.909767);
	CreateObject(1775,1172.0000000,-1319.0999800,15.5000000,0.0000000,0.0000000,92.0000000); //object(cj_sprunk1) (2)
    CreateObject(1337,1173.4218800,-1325.3054200,14.6984900,0.0000000,0.0000000,0.0000000); //object(binnt07_la) (2)
    CreateObject(13644,1961.4000200,-1199.4000200,18.3000000,0.0000000,0.0000000,224.7500000); //object(steps) (1)
    CreateObject(2780,1964.1999500,-1199.3000500,13.7000000,0.0000000,0.0000000,0.0000000); //object(cj_smoke_mach) (2)
    CreateObject(1215,1961.0999800,-1201.5999800,19.8000000,0.0000000,0.0000000,0.0000000); //object(bollardlight) (4)
    CreateObject(1215,1961.5000000,-1197.3000500,19.8000000,0.0000000,0.0000000,0.0000000); //object(bollardlight) (5)
    CreateObject(14467,1960.0000000,-1203.3000500,21.3000000,0.0000000,0.0000000,227.0000000); //object(carter_statue) (1)
    CreateObject(14467,1961.0000000,-1196.1999500,21.3000000,0.0000000,0.0000000,315.7500000); //object(carter_statue) (2)
    CreateObject(9101,1959.4697300,-1199.0048800,-56.0767300,0.0000000,0.0000000,0.0000000); //object(luxorlight_nt) (1)
    CreateObject(8492,1959.9000200,-1199.6999500,27.5000000,0.0000000,0.0000000,239.2500000); //object(flamingo05_lvs) (2)
	if(classid == 0)
	{
	    SetPlayerTeam(playerid,TEAM_ZOMBIE);
	    team[playerid] = TEAM_ZOMBIE;
	}
	return 1;
}

public OnPlayerRequestSpawn(playerid)
{
	if(pInfo[playerid][pLogged] == 0 && pInfo[playerid][pAdminLevel] >= 1)
	{
		SendClientMessage(playerid,COLOR_RED,"You must be logged in.");
		Kick(playerid);
	}

	if(pInfo[playerid][pLogged] == 0)
	{
	    new string[128];
	    GameTextForPlayer(playerid,"~r~YOU MUST LOGIN TO PLAY",1000,4);
	 	if(fexist(UserPath(playerid)))
	    {
	        INI_ParseFile(UserPath(playerid), "LoadUser_%s", .bExtra = true, .extra = playerid);
	  		format(string,sizeof(string),""chat" Welcome back %s",PlayerName(playerid));
			ShowPlayerDialog(playerid, DIALOG_LOGIN, DIALOG_STYLE_PASSWORD,string,""chat" Our system have detected your username registered please login","Login","Quit");
	    }
	    else
	    {
	        format(string,sizeof(string),""chat" Hello %s to "NAME"",PlayerName(playerid));
			ShowPlayerDialog(playerid, DIALOG_REGISTER, DIALOG_STYLE_PASSWORD,string,""chat" Welcome to "NAME" you'll be forced to register please click register!","Register","Quit");
	    }
	}
	return 1;
}

public OnPlayerConnect(playerid)
{
	if(pInfo[playerid][pAdminDuty] == 1)
	{
		pInfo[playerid][pAdminDuty] = 0;
	}

	PlayerPressedJump[playerid] = 0;
	playerOnline++;
	ResetVars(playerid);
	ConnectVars(playerid);
	new string[128];
	if(fexist(UserPath(playerid)))
	{
		INI_ParseFile(UserPath(playerid), "LoadUser_data", .bExtra = true, .extra = playerid);
		format(string,sizeof(string),""chat" Welcome back %s",PlayerName(playerid));
		ShowPlayerDialog(playerid, DIALOG_LOGIN, DIALOG_STYLE_PASSWORD,string,""chat" {C0C0C0}Welcome back to 07gaming server. Please login to play","Login","Quit");
	}
	else
	{
		format(string,sizeof(string),""chat" Hello %s",PlayerName(playerid));
		ShowPlayerDialog(playerid, DIALOG_REGISTER, DIALOG_STYLE_PASSWORD,string,""chat" Welcome to "NAME" you'll be forced to register. Please register now","Register","Quit");
	}

	new c2string[128], playerip[16];
    GetPlayerIp(playerid, playerip, sizeof(playerip));
    format(c2string, sizeof(c2string), ""chat" "COL_LGREEN"[Join]"COL_RED"Player "COL_PINK"%s[%d] "COL_ORANGE"has joined Zombie Server! "COL_RED"(IP: %s)", PlayerName(playerid), playerid, playerip);
    SendMessageToAllAdmins(c2string, -1);

	if(pInfo[playerid][pAdminLevel] <= 0)
	{
		new c2string2[128];
		format(c2string2, sizeof(c2string2), ""chat" "COL_GREEN"[Join]"COL_RED"Player "COL_PINK"%s[%d] "COL_ORANGE"has joined "COL_BLUE"Zombie Server!", PlayerName(playerid), playerid);
		SendClientMessageToAll(COLOR_WHITE, c2string2);
	}

	if(pInfo[playerid][pBanned] >= 1)
	{
		new constring[128];
		GetPlayerIp(playerid, playerip, sizeof(playerip));
		format(constring, sizeof(constring), ""chat" %s You are banned from the server, please make an unban appeal to Www.Freesa-mp.com", PlayerName(playerid));
		SendClientMessage(playerid,-1,constring);

		Kick(playerid);
	}

	return 1;
}

forward PressJump(playerid);
public PressJump(playerid)
{
    PlayerPressedJump[playerid] = 0; // Reset the variable
    ClearAnimations(playerid);
    return 1;
}
forward PayDay();
public PayDay()
{
	foreach(Player, i)
	{
	    GivePlayerXP(i, 1000);
		GameTextForPlayer(i, "it's ~r~PayDay!!! ~w~you received ~r~1000xp ~w~and ~r~Enjoy", 2000, 5);
	}
	return 1;
}
forward PressJumpReset(playerid);
public PressJumpReset(playerid)
{
    PlayerPressedJump[playerid] = 0; // Reset the variable
    return 1;
}

forward HG();
public HG()
{
	for(new i=0; i<MAX_PLAYERS; i++)
 	{
     	if(IsPlayerConnected(i))
		{
			if(IsPlayerInRangeOfPoint(i, 7, Map[ZombieSpawnX], Map[ZombieSpawnY], Map[ZombieSpawnZ]))
     		{
	     		if(GetPlayerTeam(i) == TEAM_ZOMBIE) return 0;
		 		else
				{
                    GameTextForPlayer(i,"~W~Be careful you are in\n~r~Zombie Spawn Area!!", 1000, 5);
	        	}
			}
		}
	}
	return 1;
}

public OnPlayerDisconnect(playerid, reason)
{
	new constring[128];
	format(constring, sizeof(constring), ""chat""COL_ORANGE"[Left] "COL_WHITE"%s has left the server :(", PlayerName(playerid));
	SendClientMessageToAll(-1,constring);
	
	if(pInfo[playerid][pLogged] == 1) { SaveStats(playerid); } else return 0;
    ResetVars(playerid);
    playersAliveCount--;
	playerOnline--;
	if(playerOnline == 0) return SendRconCommand("mapname |Loading|"),KillTimer(mapvar),KillTimer(balvar),Map[IsStarted] = 0;
	return 1;
}

public OnPlayerSpawn(playerid)
{
	if(IsSpecing[playerid] == 1)
	{
		SetPlayerPos(playerid,SpecX[playerid],SpecY[playerid],SpecZ[playerid]);// Remember earlier we stored the positions in these variables, now we're gonna get them from the variables.
		SetPlayerInterior(playerid,Inter[playerid]);//Setting the player's interior to when they typed '/spec'
		SetPlayerVirtualWorld(playerid,vWorld[playerid]);//Setting the player's virtual world to when they typed '/spec'
		IsSpecing[playerid] = 0;//Just saying you're free to use '/spec' again YAY :D
		IsBeingSpeced[spectatorid[playerid]] = 0;//Just saying that the player who was being spectated, is not free from your stalking >:D

		if(team[playerid] == TEAM_HUMAN)
		{
			HumanSetup(playerid);
			SpawnPlayer(playerid);
		}
		else if(team[playerid] == TEAM_ZOMBIE)
		{
			ZombieSetup(playerid);
			SpawnPlayer(playerid);
		}
	}

	else
	{
		playersAliveCount++;
		CheckToStartMap();
		SetPlayerInterior(playerid,Map[Interior]);

		SendClientMessage(playerid,-1,""COL_RED"[Info] "COL_WHITE"You Have 7 Seconds Spawn Protection");
		SendClientMessage(playerid,-1,""COL_RED"[News] "COL_WHITE"Use /freexp and /freevip to get Awesome features");
		SetPlayerHealth(playerid,99999);
		SetTimerEx("NoSpawnKill",7500,0,"i",playerid);

		if(team[playerid] == TEAM_ZOMBIE)
		{
			ZombieSetup(playerid);
			SetPlayerPos(playerid,Map[ZombieSpawnX],Map[ZombieSpawnY],Map[ZombieSpawnZ]);
		}

		if(pInfo[playerid][Frozen] == 1) //Get the info outta the enum and check if the player is still frozen
		{
			TogglePlayerControllable(playerid,0); //Won't let the player move
			SendClientMessage(playerid,COLOR_RED,"WARNING: You are still frozen!"); //Send him a message
		}

		if(team[playerid] == TEAM_HUMAN)
		{
			HumanSetup(playerid);
			switch(random(2))
			{
				case 0: SetPlayerPos(playerid,Map[HumanSpawnX],Map[HumanSpawnY],Map[HumanSpawnZ]);
				case 1: SetPlayerPos(playerid,Map[HumanSpawn2X],Map[HumanSpawn2Y],Map[HumanSpawn2Z]);
			}
		}
		sendClassMessage(playerid);
		setClass(playerid);
		SpawnVars(playerid);
	}

	return 1;
}

public NoSpawnKill(playerid)
{
    SendClientMessage(playerid,-1,""COL_GREEN"[Info] "COL_WHITE"Spawn Protection is Over. Best of Luck");
    SetPlayerHealth(playerid,100.0);
	if(pInfo[playerid][pZombieClass] == BOOMERZOMBIE) { SetPlayerHealth(playerid,20); }
	if(pInfo[playerid][pZombieClass] == NEMESIS) { SetPlayerHealth(playerid,200); }
    return 1;
}

public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
    switch(dialogid)
    {
  		case DIALOGCLAN:
        {
                new string[128];
                if(response)
        		{
	                if(!strlen(inputtext))
	                {
	                        new nome[24];
	                        GetPlayerName(playerid, nome, 24);
	                        format(string, sizeof string, "{FF4444}Error:{FFFFFF} Insert a password.\n\n{FFFFFF}Welcome {FF4444}%s{FFFFFF}!\nYou must confirm the clan password {FF4444}%s{FFFFFF}.\n{FFFFFF}Enter the clan password and confirm.", nome);
	                        ShowPlayerDialog(playerid, DIALOGCLAN, DIALOG_STYLE_INPUT, "{33AA33}Account:", string, "Confirm", "Exit");
	                        return 0;
	        		}
	                if(!strcmp(inputtext, PASSWORDCLAN, false))
	            	{
		                new nome[24];
		                GetPlayerName(playerid, nome, 24);
		                format(string, sizeof(string), "** {FFFFFF}%s{00BFFF} has confirmed to be part of the clan.", nome);
		                SendClientMessageToAll(BLU_CHIARO, string);
		                SendClientMessage(playerid, BLU_CHIARO, "You have confirmed to be part of the clan!");
		                PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
		                return 1;
	                }
	                else
	                {
		                new nome[24];
		                GetPlayerName(playerid, nome, 24);
		                format(string, sizeof(string), "** {FFFFFF}%s{00BFFF} has been kicked from the Server. [Reason: {FFFFFF}Failed login attempt in the clan{00BFFF}]", nome);
		                SendClientMessageToAll(BLU_CHIARO, string);
		                SendClientMessage(playerid, ROSA, "*** {FFFFFF}You have been kicked. Reason: {FF66FF}Failed login attempt in the clan{FFFFFF}.");
		                Kick(playerid);
		            }
				}
        		else if(!response)
        		{
        			new nome[24];
        			GetPlayerName(playerid, nome, 24);
        			SendClientMessage(playerid, ROSA, "*** {FFFFFF}You have been kicked. Reason: {FF66FF}Failed login attempt in the clan{FFFFFF}.");
        			format(string, sizeof(string), "**  %s  has been kicked from the Server. [Reason: {FFFFFF}Failed login attempt in the clan{00BFFF}]", nome);
        			SendClientMessageToAll(BLU_CHIARO, string);
        			Kick(playerid);
        			PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
        		}
        }
        case DIALOG_REGISTER:
        {
        	if(!response)
	        {
 				ShowPlayerDialog(playerid,DIALOG_REGISTER,DIALOG_STYLE_MSGBOX,"Kicked",""chat" You must register to play at "NAME"","Close","");
				Kick(playerid);
	        }
        	if(response)
            {
                new str[256],IP[16],buf[129];
			    GetPlayerIp(playerid, IP, sizeof(IP));
                if(!strlen(inputtext))
                {
                	format(str,sizeof(str),""chat"Welcome %s to "NAME"",PlayerName(playerid));
					ShowPlayerDialog(playerid, DIALOG_REGISTER, DIALOG_STYLE_PASSWORD,str,""chat" Welcome to "NAME" you'll be forced to register please click register!","Register","Quit");
				}
                new stringa[500];
	            new nome[24];
	            GetPlayerName(playerid, nome, 24);
	           	if(strfind(nome, TAGCLAN, true) == 0)
             	{
              		format(stringa, sizeof(stringa), "{FFFFFF}Welcome {FF4444}%s{FFFFFF}!\nYou must confirm the clan password {FF4444}%s{FFFFFF}.\n{FFFFFF}Enter the clan password and confirm.", nome);
                	ShowPlayerDialog(playerid, DIALOGCLAN, DIALOG_STYLE_INPUT, "{33AA33}Clan", stringa, "Confirm", "Exit");
				}


                new INI:File = INI_Open(UserPath(playerid));
                WP_Hash(buf, sizeof(buf), inputtext);
                INI_SetTag(File,"data");
                INI_WriteString(File, "pPassword", buf);
			    INI_WriteInt(File,"pXP",0);
			    INI_WriteInt(File,"pKills",0);
			    INI_WriteInt(File,"pDeaths",0);
			    INI_WriteInt(File,"pRank",0);
			    INI_WriteInt(File,"pEvac",0);
			    INI_WriteInt(File,"pAdminLevel",0);
				INI_WriteInt(File,"pAdminDuty",0);
			    INI_WriteInt(File,"pVipLevel",0);
			    INI_WriteInt(File,"pHour",0);
			    INI_WriteInt(File,"pMin",0);
			    INI_WriteInt(File,"pSec",0);
			    INI_WriteInt(File,"pMapsPlayed",0);
			    INI_WriteInt(File,"pCoins",0);
			    INI_WriteString(File,"pIP",IP);
				INI_WriteInt(File,"pBanned",0);
				INI_WriteInt(File,"gLeader",0);
				INI_WriteInt(File,"gMember",0);
                INI_Close(File);

				playedtimer[playerid] = SetTimerEx("TimeOnServer", 1000, 1, "i", playerid);
			    pInfo[playerid][pLogged] = 1;
            }
		}

    	case DIALOG_LOGIN:
        {
  			if(!response)
	        {
 				ShowPlayerDialog(playerid,DIALOG_REGISTER,DIALOG_STYLE_MSGBOX,"Kicked",""chat" You must login to play at "NAME"","Close","");
				Kick(playerid);
	        }
            if(response)
            {
                new buf[129];
				WP_Hash(buf, sizeof(buf), inputtext);
				if(!strcmp(buf,pInfo[playerid][pPassword]))
                {
                    new stringa[500];
	                new nome[24];
	                GetPlayerName(playerid, nome, 24);
	                if(strfind(nome, TAGCLAN, true) == 0)
	                {
	                 	format(stringa, sizeof(stringa), "{FFFFFF}Welcome {FF4444}%s{FFFFFF}!\nYou must confirm the clan password {FF4444}%s{FFFFFF}.\n{FFFFFF}Enter the clan password and confirm.", nome);
	                    ShowPlayerDialog(playerid, DIALOGCLAN, DIALOG_STYLE_INPUT, "{33AA33}Clan", stringa, "Confirm", "Exit");
	                }
                    INI_ParseFile(UserPath(playerid), "LoadUser_data", .bExtra = true, .extra = playerid);
                    pInfo[playerid][pLogged] = 1;
				    playedtimer[playerid] = SetTimerEx("TimeOnServer", 1000, 1, "i", playerid);
				    SendClientMessage(playerid,-1,""chat""COL_LGREEN" Logged in!");
				    printf("%s",pInfo[playerid][pPassword]);
                }
                else
                {
                	new string[256];
			        format(string,sizeof(string),""chat" Welcome back %s",PlayerName(playerid));
			        ShowPlayerDialog(playerid, DIALOG_LOGIN,DIALOG_STYLE_PASSWORD,string,""chat" Our system have detected your username registered please login","Login","Quit");
                }
                return 1;
            }
        }


	    case DIALOG_RADIO:
	    {
	        if(response)
	        {
	            switch(listitem)
				{
		        	case 0: PlayAudioStreamForPlayer(playerid,"https://dl.dropbox.com/u/81961893/Eric%20Prydz%20-%20Pjanoo.mp3");
		        	case 1: PlayAudioStreamForPlayer(playerid,"https://dl.dropbox.com/u/81961893/Nicki%20Minaj%20-%20Starships%20%28Lyrics%29.mp3");
		        	case 2: PlayAudioStreamForPlayer(playerid,"https://dl.dropbox.com/u/81961893/Train-%20Drive%20by%20%28with%20lyrics%29.mp3");
		        	case 3: PlayAudioStreamForPlayer(playerid,"https://dl.dropbox.com/u/81961893/Six%20days%20-%20Tokyo%20Drift.mp3");
  		        	case 4: PlayAudioStreamForPlayer(playerid,"https://dl.dropbox.com/u/81961893/Wildstylez%20Feat.%20Niels%20Geusebroek%20-%20Year%20Of%20Summer%20%28Official%20Videoclip%29.mp3");
  		        	case 5: PlayAudioStreamForPlayer(playerid,"http://www.woo55.pk/adata/5529/PSY%20-%20Gangnam%20Style%20(www.SongsLover.pk).mp3");
  		        	case 6: PlayAudioStreamForPlayer(playerid,"Radio Stoped");
				}
			}
		}

		case DIALOG_RADIO_1:
	    {
	        if(response)
	        {
	            switch(listitem)
				{
		        	case 0: PlayAudioStreamForPlayer(playerid,"http://dc493.4shared.com/img/1517496961/d886e9a0/dlink__2Fdownload_2FHmXedbA6_3Ftsid_3D20131012-53953-266e366/preview.mp3");
		        	case 1: PlayAudioStreamForPlayer(playerid,"http://www.desimusic.us/2011b/Desi%20Boyz/Subha%20Hone%20Na%20De_Desi%20Boyz(DesiSong.com).mp3");
		        	case 2: PlayAudioStreamForPlayer(playerid,"http://www.djluv.in/music/songs/01%20-%20Desi%20Boyz%20(2011)%20-%20Make%20Some%20Noise%20For%20The%20Desi%20Boyz%20%5Bwww.DJLUV.in%5D.mp3");
		        	case 3: PlayAudioStreamForPlayer(playerid,"Radio Stoped");
				}
			}
		}

		case DIALOG_CLASS:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
		                if(team[playerid] == TEAM_HUMAN)
		                {
		                	new string[2500];
		                	strcat(string,"{008080}Civilian - Silenced Pistol,Shotgun - 0 XP\n{008080}Police Man - Deagle,Shotgun - 500 XP\n{008080}Medic -Shotgun,Silenced Pistol,Armour,Cure Infected - 1000 XP\n\
		                	{008080}Scout - Sniper,Silenced Pistol - 1500 XP\n{008080}Heavy Medic - Deagle,Shotgun,Armour,Cure Infected - 5000 XP\n{008080}Farmer - Deagle,AK,County Rifle,Armour - 6000 XP\n");
		                	strcat(string,"{008080}Soldier - AK47,Deagle - 6500 XP\n{008080}Engineer - Silenced Pistol,Shotgun,Armour,Build Boxes - 7500 XP\n{008080}S.W.A.T - MP5,Deagle,Armour,Immunity - 15,000 XP\n\
							{008080}Heavy Shotgun - Shotgun,Deagle,Armour,More shotgun damage - 20,000 XP\n{008080}Advanced Medic - M4,Deagle,Shotgun,Cure all - 25,000 XP\n");
		                	strcat(string,"{008080}Advanced Engineer - Deagle,M4,Armour,Build Boxes - 30,000 XP\n{008080}Experienced Engineer -Deagle,Shotgun,Armour - Build Ladders - 35,000 XP\n\
							{008080}Federal Agent - M4,Deagle,Shotgun,Armour,Immunity - 50,000 XP\n{008080}Advanced Scout - Sniper,Deagle,High jump,Half Armour - 100,000 XP\n\
							{008080}Kick Back - Silenced Pistol,Shotgun,MP5 - 400000 XP\n{008080}Doctor - Silenced Pistol - Heal,Cure,Shield Heal,Half Immunity - Rank 22");
		                	ShowPlayerDialog(playerid,DIALOG_CLASS_2,DIALOG_STYLE_LIST,"Class Selection (Human)",string,"Select","Close");
						}
						else return SendClientMessage(playerid,-1,""chat" You must be a human to use human classes!");
					}

                    case 1:
		            {
              			if(team[playerid] == TEAM_ZOMBIE)
		                {
			                new string[1000];
		                    strcat(string,"{41A317}Standard Zombie - LALT Infect a player - 0 XP\n{41A317}Mutated Zombie - LALT Infect Drunk Vision - 500 XP\n{41A317}Fast Zombie - High Jump - 5,000 XP\n\
							{41A317}Reaper Zombie - More damage with chainsaw - 10,000 XP\n{41A317}Witch Zombie - LALT 75 Damage - 18,000 XP\n");
							strcat(string,"{41A317}Boomer Zombie - Explodes on death and infect - 20,000 XP\n\
							{41A317}Stomper Zombie - LALT Throw all around you - 25,000 XP\n{41A317}Screamer - LALT Drop everyone down - 35000 XP\n\
							{41A317}Advanced Mutated - LALT Infect all around - 65,000 XP\n{41A317}Heavy Screamer - LALT Throw all +5hp - 70,000 XP\n");
							strcat(string,"{41A317}Flesh Eater - LALT Infect a player kills faster - 100,000 XP\n{41A317}Advanced Witch - LALT 99 Damage - 150,000 XP\n{41A317}Advanced Boomer - LALT Explode - 500,000 X");

							ShowPlayerDialog(playerid,DIALOG_CLASS_3,DIALOG_STYLE_LIST,"Class Selection (Zombie)",string,"Select","Close");
						}
						else return SendClientMessage(playerid,-1,""chat" You must be a zombie to use zombie classes!");
					}

					case 2: SendClientMessage(playerid,-1,""chat""COL_LGREEN" On October 31st 2012 we are having an 24hour event these classes will be enabled around October 30th!");
				}
			}
		}

		case DIALOG_CLASS2:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
		                if(team[playerid] == TEAM_HUMAN)
		                {
		                	new string[2500];
		                	strcat(string,"{008080}Pimp - Dildo, deals 15 damage 15000 XP\n{008080}Heavy Soldier - Can Give 25 Armour Point - 150000\n");
							strcat(string,"{008080}Assassin - Katana, One Hit Kill, C4 - 300.000 XP\n{008080}Cowboy - 2 colt pistols, extra damage, armour, 250.000XP\n");
							strcat(string,"{008080}Trap Master - Combat Shotgun, AK, Can put traps - 200.000 XP\n{008080}FBI - M4, Deagle, Immunity from all, Shotgun, Mp5 - 200.000 XP\n");
							strcat(string,"{008080}Scientist - Silenced Pistol, Can cure zombies - 300.000 XP\n{008080}Shotgun Specialist - Shotgun +50 Damage - 450,000 XP.\n{008080}Experienced Scout - One shoot kill, Sniper, Silenced Pistol - 1000000xp\n");
							strcat(string,"{008080}Smoke Up - Deagle - MP5 - M4 - Flamer - Full Immunity - Rank 30 Required\n{008080}Boxer - Can Give Stomper - 31 Rank Required\n{008080}BomberMan - Having Rocket Launcher - 450000xp\n");
							strcat(string,"{008080}Mp5 Master - Extreme damage with Mp5 - 500000xp\n{008080}Ghost Rider - Can Burn Zombies - 600000xp\n{008080}Hey Buddy - Gives 70 Damage - 150000xp\n{008080}Advanced KickBack - Gives Extreme KickBack - 900000\n{008080}Tec Girl - Gives 75 damage with Tec|200hp - 900000\n{008080}Bulls Eye - Gives high damage|sawnoff - 27 rank needed\n");
							ShowPlayerDialog(playerid,DIALOG_CLASS_2_2,DIALOG_STYLE_LIST,"Class Selection (Human)",string,"Select","Close");
						}
						else return SendClientMessage(playerid,-1,""chat" You must be a human to use human classes!");
					}

     				case 1:
		            {
              			if(team[playerid] == TEAM_ZOMBIE)
		                {
			                new string[1000];
			                strcat(string,"{41A317}Advanced Stomper - 150 HP , Stomps humans away - 200.000 XP\n");
							strcat(string,"{41A317}Fire Breather - Throws out flames burning everything - 350.000 XP\n{41A317}Advanced Screamer - LALT Throw all +10hp ||-10 Hp to human - 450,000 XP\n{41A317}Advanced Boomer - LALT Explode - 500,000 XP\n");
							strcat(string,"{41A317}Nemesis - Creates some paravane, has 200 HP, custom skinned\n{41A317}Zombie Medic - /zheal to heal zombies\n{41A317}SlenderMan - HighJump MoreDamage - 700000\n{41A317}Killer Zombie - Cant be kickback - 600000\n{41A317}Ghost Zombie - Invisible | Gives 40 Damage - 170000\n{41A317}Dark Sniper - Having Sniper|Can Infect - 700000 xp");

							ShowPlayerDialog(playerid,DIALOG_CLASS_3_3,DIALOG_STYLE_LIST,"Class Selection (Zombie)",string,"Select","Close");
						}
						else return SendClientMessage(playerid,-1,""chat" You must be a zombie to use zombie classes!");
					}

				}
			}
		}

		case DIALOG_CLASS_2:
		{
		    if(response)
		    {
				if(pInfo[playerid][SkinChanges] >= 1)
				{
					switch(listitem)
					{
						case 0: if(pInfo[playerid][pXP] >= 0) pInfo[playerid][pHumanClass] = 0,pInfo[playerid][SkinChanges] -= 1,pInfo[playerid][pHumanClass] = CIVILIAN,setClass(playerid); else { SendXPError(playerid,0); }
						case 1: if(pInfo[playerid][pXP] >= 500) pInfo[playerid][pHumanClass] = 0,pInfo[playerid][SkinChanges] -= 1,pInfo[playerid][pHumanClass] = POLICEMAN,setClass(playerid); else { SendXPError(playerid,500); }
						case 2: if(pInfo[playerid][pXP] >= 1000) pInfo[playerid][pHumanClass] = 0,pInfo[playerid][SkinChanges] -= 1,pInfo[playerid][pHumanClass] = MEDIC,setClass(playerid); else { SendXPError(playerid,1000); }
						case 3: if(pInfo[playerid][pXP] >= 1500) pInfo[playerid][pHumanClass] = 0,pInfo[playerid][SkinChanges] -= 1,pInfo[playerid][pHumanClass] = SCOUT,setClass(playerid); else { SendXPError(playerid,1500); }
						case 4: if(pInfo[playerid][pXP] >= 5000) pInfo[playerid][pHumanClass] = 0,pInfo[playerid][SkinChanges] -= 1,pInfo[playerid][pHumanClass] = HEAVYMEDIC,setClass(playerid); else { SendXPError(playerid,5000); }
						case 5: if(pInfo[playerid][pXP] >= 6000) pInfo[playerid][pHumanClass] = 0,pInfo[playerid][SkinChanges] -= 1,pInfo[playerid][pHumanClass] = FARMER,setClass(playerid); else { SendXPError(playerid,6000); }
						case 6: if(pInfo[playerid][pXP] >= 6500) pInfo[playerid][pHumanClass] = 0,pInfo[playerid][SkinChanges] -= 1,pInfo[playerid][pHumanClass] = SOLDIER,setClass(playerid); else { SendXPError(playerid,6500); }
						case 7: if(pInfo[playerid][pXP] >= 7500) pInfo[playerid][pHumanClass] = 0,pInfo[playerid][SkinChanges] -= 1,pInfo[playerid][pHumanClass] = ENGINEER,setClass(playerid); else { SendXPError(playerid,7500); }
						case 8: if(pInfo[playerid][pXP] >= 15000) pInfo[playerid][pHumanClass] = 0,pInfo[playerid][SkinChanges] -= 1,pInfo[playerid][pHumanClass] = SWAT,setClass(playerid); else { SendXPError(playerid,10000); }
						case 9: if(pInfo[playerid][pXP] >= 20000) pInfo[playerid][pHumanClass] = 0,pInfo[playerid][SkinChanges] -= 1,pInfo[playerid][pHumanClass] = HEAVYSHOTGUN,setClass(playerid); else { SendXPError(playerid,20000); }
						case 10: if(pInfo[playerid][pXP] >= 25000) pInfo[playerid][pHumanClass] = 0,pInfo[playerid][SkinChanges] -= 1,pInfo[playerid][pHumanClass] = ADVANCEDMEDIC,setClass(playerid); else { SendXPError(playerid,25000); }
						case 11: if(pInfo[playerid][pXP] >= 30000) pInfo[playerid][pHumanClass] = 0,pInfo[playerid][SkinChanges] -= 1,pInfo[playerid][pHumanClass] = ADVANCEDENGINEER,setClass(playerid); else { SendXPError(playerid,30000); }
						case 12: if(pInfo[playerid][pXP] >= 35000) pInfo[playerid][pHumanClass] = 0,pInfo[playerid][SkinChanges] -= 1,pInfo[playerid][pHumanClass] = E_ENGINEER,setClass(playerid); else { SendXPError(playerid,35000); }
						case 13: if(pInfo[playerid][pXP] >= 50000) pInfo[playerid][pHumanClass] = 0,pInfo[playerid][SkinChanges] -= 1,pInfo[playerid][pHumanClass] = FEDERALAGENT,setClass(playerid); else { SendXPError(playerid,50000); }
						case 14: if(pInfo[playerid][pXP] >= 100000) pInfo[playerid][pHumanClass] = 0,pInfo[playerid][SkinChanges] -= 1,pInfo[playerid][pHumanClass] = ADVANCEDSCOUT,setClass(playerid); else { SendXPError(playerid,100000); }
						case 15: if(pInfo[playerid][pXP] >= 400000) pInfo[playerid][pHumanClass] = 0,pInfo[playerid][SkinChanges] -= 1,pInfo[playerid][pHumanClass] = KICKBACK,setClass(playerid); else { SendXPError(playerid,400000); }
						case 16: if(pInfo[playerid][pRank] >= 22) pInfo[playerid][pHumanClass] = 0,pInfo[playerid][SkinChanges] -= 1,pInfo[playerid][pHumanClass] = DOCTOR,setClass(playerid); else { SendClientMessage(playerid,-1,""chat""COL_PINK" You need to be rank 22+ to use this"); }
					}
				}
				else return SendClientMessage(playerid,-1,""chat""COL_RED" You ran out of skin changes mate! What do you think you are? Shape Shifter?");
			}
		}
		case DIALOG_CLASS_2_2:
		{
		    if(response)
		    {
				if(pInfo[playerid][SkinChanges] >= 1)
				{
					switch(listitem)
					{
						case 0: if(pInfo[playerid][pXP] >= 15000) pInfo[playerid][pHumanClass] = 0,pInfo[playerid][SkinChanges] -= 1,pInfo[playerid][pHumanClass] = PIMP,setClass(playerid); else { SendXPError(playerid,15000); }
						case 1: if(pInfo[playerid][pXP] >= 75000) pInfo[playerid][pHumanClass] = 0,pInfo[playerid][SkinChanges] -= 1,pInfo[playerid][pHumanClass] = WEAPONSDEALER,setClass(playerid); else { SendXPError(playerid,75000); }
						case 2: if(pInfo[playerid][pXP] >= 300000) pInfo[playerid][pHumanClass] = 0,pInfo[playerid][SkinChanges] -= 1,pInfo[playerid][pHumanClass] = ASSASSIN,setClass(playerid); else { SendXPError(playerid,300000); }
						case 3: if(pInfo[playerid][pXP] >= 250000) pInfo[playerid][pHumanClass] = 0,pInfo[playerid][SkinChanges] -= 1,pInfo[playerid][pHumanClass] = COWBOY,setClass(playerid); else { SendXPError(playerid,250000); }
						case 4: if(pInfo[playerid][pXP] >= 200000) pInfo[playerid][pHumanClass] = 0,pInfo[playerid][SkinChanges] -= 1,pInfo[playerid][pHumanClass] = TRAPMASTER,setClass(playerid); else { SendXPError(playerid,200000); }
						case 5: if(pInfo[playerid][pXP] >= 200000) pInfo[playerid][pHumanClass] = 0,pInfo[playerid][SkinChanges] -= 1,pInfo[playerid][pHumanClass] = FBI,setClass(playerid); else { SendXPError(playerid,200000); }
						case 6: if(pInfo[playerid][pXP] >= 300000) pInfo[playerid][pHumanClass] = 0,pInfo[playerid][SkinChanges] -= 1,pInfo[playerid][pHumanClass] = SCIENTIST,setClass(playerid); else { SendXPError(playerid,300000); }
						case 7: if(pInfo[playerid][pXP] >= 450000) pInfo[playerid][pHumanClass] = 0,pInfo[playerid][SkinChanges] -= 1,pInfo[playerid][pHumanClass] = SHOTGUNSPECIAL,setClass(playerid); else { SendXPError(playerid,450000); }
						case 8: if(pInfo[playerid][pXP] >= 1000000) pInfo[playerid][pHumanClass] = 0,pInfo[playerid][SkinChanges] -= 1,pInfo[playerid][pHumanClass] = EXPERIENCEDSCOUT,setClass(playerid); else { SendXPError(playerid,1000000); }
						case 9: if(pInfo[playerid][pRank] >= 30) pInfo[playerid][pHumanClass] = 0,pInfo[playerid][SkinChanges] -= 1,pInfo[playerid][pHumanClass] = SMOKEUP,setClass(playerid); else { SendClientMessage(playerid,-1,""chat""COL_PINK" You need to be rank 30+ to use this"); }
						case 10: if(pInfo[playerid][pRank] >= 31) pInfo[playerid][pHumanClass] = 0,pInfo[playerid][SkinChanges] -= 1,pInfo[playerid][pHumanClass] = BOXER,setClass(playerid); else { SendClientMessage(playerid,-1,""chat""COL_PINK" You need to be rank 31+ to use this"); }
						case 11: if(pInfo[playerid][pXP] >= 450000) pInfo[playerid][pHumanClass] = 0,pInfo[playerid][SkinChanges] -= 1,pInfo[playerid][pHumanClass] = BOMBER,setClass(playerid); else { SendClientMessage(playerid,-1,""chat""COL_PINK" You need 450000 xp to use this class!"); }
						case 12: if(pInfo[playerid][pXP] >= 500000) pInfo[playerid][pHumanClass] = 0,pInfo[playerid][SkinChanges] -= 1,pInfo[playerid][pHumanClass] = MASTER,setClass(playerid); else { SendClientMessage(playerid,-1,""chat""COL_PINK" You need 500000 xp to use this class!"); }
						case 13: if(pInfo[playerid][pXP] >= 600000) pInfo[playerid][pHumanClass] = 0,pInfo[playerid][SkinChanges] -= 1,pInfo[playerid][pHumanClass] = GHOST,setClass(playerid); else { SendClientMessage(playerid,-1,""chat""COL_PINK" You need 600000 xp to use this class!"); }
						case 14: if(pInfo[playerid][pXP] >= 150000) pInfo[playerid][pHumanClass] = 0,pInfo[playerid][SkinChanges] -= 1,pInfo[playerid][pHumanClass] = BUDDY,setClass(playerid); else { SendClientMessage(playerid,-1,""chat""COL_PINK" You need 150000 xp to use this class!"); }
						case 15: if(pInfo[playerid][pXP] >= 800000) pInfo[playerid][pHumanClass] = 0,pInfo[playerid][SkinChanges] -= 1,pInfo[playerid][pHumanClass] = AKICK,setClass(playerid); else { SendClientMessage(playerid,-1,""chat""COL_PINK" You need 800000 xp to use this class!"); }
						case 16: if(pInfo[playerid][pXP] >= 900000) pInfo[playerid][pHumanClass] = 0,pInfo[playerid][SkinChanges] -= 1,pInfo[playerid][pHumanClass] = TECG,setClass(playerid); else { SendClientMessage(playerid,-1,""chat""COL_PINK" You need 900000 xp to use this class!"); }
						case 17: if(pInfo[playerid][pRank] >= 27) pInfo[playerid][pHumanClass] = 0,pInfo[playerid][SkinChanges] -= 1,pInfo[playerid][pHumanClass] = BULL,setClass(playerid); else { SendClientMessage(playerid,-1,""chat""COL_PINK" You need to be rank 27+ to use this class!"); }
						}
				}
				else return SendClientMessage(playerid,-1,""chat""COL_RED" You ran out of skin changes mate!");
			}
		}

		case DIALOG_CLASS_3:
		{
		    if(response)
		    {
			    switch(listitem)
			    {
					case 0: if(pInfo[playerid][pXP] >= 0) pInfo[playerid][pZombieClass] = 0,pInfo[playerid][pZombieClass] = STANDARDZOMBIE,setClass(playerid); else { SendXPError(playerid,0); }
					case 1: if(pInfo[playerid][pXP] >= 500) pInfo[playerid][pZombieClass] = 0,pInfo[playerid][pZombieClass] = MUTATEDZOMBIE,setClass(playerid); else { SendXPError(playerid,500); }
					case 2: if(pInfo[playerid][pXP] >= 5000) pInfo[playerid][pZombieClass] = 0,pInfo[playerid][pZombieClass] = FASTZOMBIE,setClass(playerid); else { SendXPError(playerid,5000); }
					case 3: if(pInfo[playerid][pXP] >= 10000) pInfo[playerid][pZombieClass] = 0,pInfo[playerid][pZombieClass] = REAPERZOMBIE,setClass(playerid); else { SendXPError(playerid,10000); }
					case 4: if(pInfo[playerid][pXP] >= 18000) pInfo[playerid][pZombieClass] = 0,pInfo[playerid][pZombieClass] = WITCHZOMBIE,setClass(playerid); else { SendXPError(playerid,18000); }
					case 5: if(pInfo[playerid][pXP] >= 20000) pInfo[playerid][pZombieClass] = 0,pInfo[playerid][pZombieClass] = BOOMERZOMBIE,setClass(playerid); else { SendXPError(playerid,20000); }
					case 6: if(pInfo[playerid][pXP] >= 25000) pInfo[playerid][pZombieClass] = 0,pInfo[playerid][pZombieClass] = STOMPERZOMBIE,setClass(playerid); else { SendXPError(playerid,25000); }
					case 7: if(pInfo[playerid][pXP] >= 35000) pInfo[playerid][pZombieClass] = 0,pInfo[playerid][pZombieClass] = SCREAMERZOMBIE,setClass(playerid); else { SendXPError(playerid,35000); }
					case 8: if(pInfo[playerid][pXP] >= 65000) pInfo[playerid][pZombieClass] = 0,pInfo[playerid][pZombieClass] = ADVANCEDMUTATED,setClass(playerid); else { SendXPError(playerid,65000); }
					case 9: if(pInfo[playerid][pXP] >= 70000) pInfo[playerid][pZombieClass] = 0,pInfo[playerid][pZombieClass] = HEAVYSCREAMER,setClass(playerid); else { SendXPError(playerid,70000); }
					case 10: if(pInfo[playerid][pXP] >= 100000) pInfo[playerid][pZombieClass] = 0,pInfo[playerid][pZombieClass] = FLESHEATER,setClass(playerid); else { SendXPError(playerid,100000); }
					case 11: if(pInfo[playerid][pXP] >= 150000) pInfo[playerid][pZombieClass] = 0,pInfo[playerid][pZombieClass] = ADVANCEDWITCH,setClass(playerid); else { SendXPError(playerid,150000); }
					case 12: if(pInfo[playerid][pXP] >= 500000) pInfo[playerid][pZombieClass] = 0,pInfo[playerid][pZombieClass] = ADVANCEDBOOMER,setClass(playerid); else { SendXPError(playerid,500000); }
				}
			}
		}

		case DIALOG_CLASS_3_3:
		{
		    if(response)
		    {
			    switch(listitem)
			    {
					case 0: if(pInfo[playerid][pXP] >= 200000) pInfo[playerid][pZombieClass] = 0,pInfo[playerid][pZombieClass] = ADVSTOMPER,setClass(playerid); else { SendXPError(playerid,200000); }
					case 1: if(pInfo[playerid][pXP] >= 350000) pInfo[playerid][pZombieClass] = 0,pInfo[playerid][pZombieClass] = FIREBREATHER,setClass(playerid); else { SendXPError(playerid,350000); }
					case 2: if(pInfo[playerid][pXP] >= 400000) pInfo[playerid][pZombieClass] = 0,pInfo[playerid][pZombieClass] = ADVSCREAMER,setClass(playerid); else { SendXPError(playerid,400000); }
					case 3: if(pInfo[playerid][pXP] >= 500000) pInfo[playerid][pZombieClass] = 0,pInfo[playerid][pZombieClass] = ADVANCEDBOOMER,setClass(playerid); else { SendXPError(playerid,500000); }
					case 4: if(pInfo[playerid][pXP] >= 500000) pInfo[playerid][pZombieClass] = 0,pInfo[playerid][pZombieClass] = NEMESIS,setClass(playerid); else { SendXPError(playerid,500000); }
					case 5: if(pInfo[playerid][pXP] >= 550000) pInfo[playerid][pZombieClass] = 0,pInfo[playerid][pZombieClass] = HZOMBIE,setClass(playerid); else { SendXPError(playerid,550000); }
					case 6: if(pInfo[playerid][pXP] >= 700000) pInfo[playerid][pZombieClass] = 0,pInfo[playerid][pZombieClass] = SLENDER,setClass(playerid); else { SendXPError(playerid,700000); }
					case 7: if(pInfo[playerid][pXP] >= 600000) pInfo[playerid][pZombieClass] = 0,pInfo[playerid][pZombieClass] = KZOM,setClass(playerid); else { SendXPError(playerid,600000); }
					case 8: if(pInfo[playerid][pXP] >= 170000) pInfo[playerid][pZombieClass] = 0,pInfo[playerid][pZombieClass] = GZOM,setClass(playerid); else { SendXPError(playerid,170000); }
					case 9: if(pInfo[playerid][pXP] >= 700000) pInfo[playerid][pZombieClass] = 0,pInfo[playerid][pZombieClass] = DSNIPE,setClass(playerid); else { SendXPError(playerid,700000); }
				}
			}
		}

		case DIALOG_SHOUT:
		{
		    if(response)
		    {
			    switch(listitem)
			    {
	  				case 0: format(shoutstring,sizeof(shoutstring),""chat""COL_LIGHTBLUE" %s Shouts MEDIC!",PlayerName(playerid)), SendHMessage(shoutstring,-1);
			    	case 1: format(shoutstring,sizeof(shoutstring),""chat""COL_LIGHTBLUE" %s Shouts BOOMER INCOMING!",PlayerName(playerid)), SendHMessage(shoutstring,-1);
			    	case 2: format(shoutstring,sizeof(shoutstring),""chat""COL_LIGHTBLUE" %s Shouts SCREAMER INCOMING!",PlayerName(playerid)), SendHMessage(shoutstring,-1);
			    	case 3: format(shoutstring,sizeof(shoutstring),""chat""COL_LIGHTBLUE" %s Shouts STOMPER INCOMING!",PlayerName(playerid)), SendHMessage(shoutstring,-1);
			    	case 4: format(shoutstring,sizeof(shoutstring),""chat""COL_LIGHTBLUE" %s Shouts it's clear!",PlayerName(playerid)), SendHMessage(shoutstring,-1);
			    	case 5: format(shoutstring,sizeof(shoutstring),""chat""COL_LIGHTBLUE" %s Shouts Zombies Nearby!",PlayerName(playerid)), SendHMessage(shoutstring,-1);
			    	case 6: format(shoutstring,sizeof(shoutstring),""chat""COL_LIGHTBLUE" %s Shouts ZOMBIES INCOMING!",PlayerName(playerid)), SendHMessage(shoutstring,-1);
	                case 7: format(shoutstring,sizeof(shoutstring),""chat""COL_LIGHTBLUE" %s Shouts Need assistance!",PlayerName(playerid)), SendHMessage(shoutstring,-1);
	                case 8: format(shoutstring,sizeof(shoutstring),""chat""COL_LIGHTBLUE" %s Shouts Need backup!",PlayerName(playerid)), SendHMessage(shoutstring,-1);
	                case 9: format(shoutstring,sizeof(shoutstring),""chat""COL_LIGHTBLUE" %s Shouts Ghost Incoming!!",PlayerName(playerid)), SendHMessage(shoutstring,-1);
				}
			}
		}

		case DIALOG_VIP:
		{
		    if(response)
		    {
				if(pInfo[playerid][ArmourChanges] >= 1)
				{
					switch(listitem)
					{
						case 0: if(pInfo[playerid][pVipLevel] >= 1) SendPlayerMaxAmmo(playerid),SendClientMessage(playerid,-1,""chat""COL_PINK" You have all your weapons max'ed ammo!"); else { SendVipError(playerid,1); }
						case 1: if(pInfo[playerid][pVipLevel] >= 1) GivePlayerWeapon(playerid,31,150),GivePlayerWeapon(playerid,24,100),GivePlayerWeapon(playerid,25,600); else { SendVipError(playerid,1); }
						case 2: if(pInfo[playerid][pVipLevel] >= 3) ShowPlayerDialog(playerid,DIALOG_VIP_CLASS,DIALOG_STYLE_LIST,"Vip Classes (Human)","{C35817}Vip Engineer (LVL 3)\n{C35817}Vip Medic (LVL 4)\n{C35817}Vip Scout (LVL 4)\n{C35817}Vip Hitman (LVL 5)","Select","Close"); else { SendVipError(playerid,3); }
						case 3: if(pInfo[playerid][pVipLevel] >= 3) pInfo[playerid][pVipKickBack] = 1,SendClientMessage(playerid,-1,""chat""COL_LGREEN" You've enabled VIP kick back!"); else { SendVipError(playerid,3); }
						case 4: if(pInfo[playerid][pVipLevel] >= 3) pInfo[playerid][pVipKickBack] = 0,SendClientMessage(playerid,-1,""chat""COL_LGREEN" You've disabled VIP kick back!"); else { SendVipError(playerid,3); }
						case 5: if(pInfo[playerid][pVipLevel] >= 2) SetPlayerAttachedObject(playerid,0,19142,1,0.028000,0.034000,0.000000,0.000000,0.000000,0.000000,1.063000,1.191999,1.285999); else { SendVipError(playerid,2); }
						case 6: if(pInfo[playerid][pVipLevel] >= 4) pInfo[playerid][pVipFlash] = 1,SendClientMessage(playerid,-1,""chat""COL_LGREEN" Your name is now flashing!"); else { SendVipError(playerid,4); }
						case 7: if(pInfo[playerid][pVipLevel] >= 4) pInfo[playerid][pVipFlash] = 0,SendClientMessage(playerid,-1,""chat""COL_LGREEN" Your name has stopped flashing"); else { SendVipError(playerid,4); }
						case 8: if(pInfo[playerid][pVipLevel] >= 4) pInfo[playerid][SkinChanges] -= 1, SetPlayerArmour(playerid,50.0),SendClientMessage(playerid,-1,""chat""COL_LGREEN" You've got 50.0f VIP Armour"); else { SendVipError(playerid,4); }
						case 9: if(pInfo[playerid][pVipLevel] >= 5) SetPlayerColor(playerid,0xFFFFFF00);  else { SendVipError(playerid,5); }

					}
				}
				else return SendClientMessage(playerid,-1,""chat""COL_RED" You ran out of armours mate! What do you think you are? Ammunation?");
			}
		}

		case DIALOG_VIP_CLASS:
		{
			if(response)
			{
			    if(team[playerid] == TEAM_HUMAN)
			    {
					switch(listitem)
					{
					    case 0: if(pInfo[playerid][pVipLevel] >= 3) pInfo[playerid][pHumanClass] = 0,pInfo[playerid][pHumanClass] = VIPENGINEER,setClass(playerid); else { SendVipError(playerid,3); }
		                case 1: if(pInfo[playerid][pVipLevel] >= 4) pInfo[playerid][pHumanClass] = 0,pInfo[playerid][pHumanClass] = VIPMEDIC,setClass(playerid); else { SendVipError(playerid,4); }
		                case 2: if(pInfo[playerid][pVipLevel] >= 4) pInfo[playerid][pHumanClass] = 0,pInfo[playerid][pHumanClass] = VIPSCOUT,setClass(playerid); else { SendVipError(playerid,4); }
		                case 3: if(pInfo[playerid][pVipLevel] >= 5) pInfo[playerid][pHumanClass] = 0,pInfo[playerid][pHumanClass] = HITMAN,setClass(playerid); else { SendVipError(playerid,5); }
		                

					}
				}
				else return SendClientMessage(playerid,-1,""chat""COL_LGREEN" You must be a human to use VIP classes!");
			}
		}

		case DIALOG_COINS:
		{
			if(response)
			{
			    if(team[playerid] == TEAM_HUMAN)
			    {
			        switch(listitem)
			        {
			            case 0:
						{
						ShowPlayerDialog(playerid, DIALOG_XP, DIALOG_STYLE_LIST, "XP Shop", "1000XP   10 Coins\n5000XP   25 Coins\n10000XP   75 Coins", "Select", "Close");
						}
						case 1:
						{
							if(pInfo[playerid][pHumanClass] == ASSASSIN || pInfo[playerid][pHumanClass] == PIMP || pInfo[playerid][pHumanClass] == DOCTOR || pInfo[playerid][pHumanClass] == VIPMEDIC || pInfo[playerid][pHumanClass] == FBI || pInfo[playerid][pHumanClass] == TRAPMASTER || pInfo[playerid][pHumanClass] == EXPERIENCEDSCOUT || pInfo[playerid][pHumanClass] == SCIENTIST || pInfo[playerid][pHumanClass] == COWBOY || pInfo[playerid][pHumanClass] == PIMP)
								{
									SendClientMessage(playerid,-1,""chat""COL_RED" Your class can't buy weapons... ");
								}
								else
								{
									if(pInfo[playerid][pCoins] >= 5) pInfo[playerid][pCoins] -= 0,ShowPlayerDialog(playerid,DIALOG_BUY_WEAPONS,DIALOG_STYLE_LIST,"Buy weapons unsing coins(HUMANS)","[ 5 coins] Deagle - Ammo: 199\n[10 coins] Shotgun Ammo: 199\n[15 coins]MP5 or SMG - Ammo: 300\n[20 coins]AK-47 Assault Rifle - Ammo: 300\n[20 coins]M4 Assault Rifle - Ammo: 300\n[25 coins]Sniper Rifle - Ammo: 150","Select","Close"); else { SendCoinError(playerid,1); }
								}
						}
						case 2: if(pInfo[playerid][pCoins] >= 5) pInfo[playerid][pCoins] -= 5,ShowPlayerDialog(playerid,DIALOG_BUY_CLASSES,DIALOG_STYLE_LIST,"Buy classes unsing coins(HUMANS)","[ 10 Coins]Engineer\n[ 10 Coins]SWAT\n[ 50 Coins]Heavy Shotgun\n[ 10 Coins]Advanced Medic\n[ 15 Coins]Advanced Engineer\n[ 15 Coins]Federal Agent\n[ 100 Coins]Kick Back\n[ 80 Coins]Advanced Scout\n[ 20 Coins]Experienced Engineer\n[ 100 Coins]Doctor","Select","Close"); else { SendCoinError(playerid,1); }
						case 3: if(pInfo[playerid][pCoins] >= 100) pInfo[playerid][pCoins] -= 100,pInfo[playerid][pVipKickBack] = 1; else { SendCoinError(playerid,100); }
						case 4: if(pInfo[playerid][pCoins] >= 1) pInfo[playerid][pCoins] -= 1,SetPlayerAttachedObject(playerid,0,19142,1,0.028000,0.034000,0.000000,0.000000,0.000000,0.000000,1.063000,1.191999,1.285999); else { SendCoinError(playerid,1); }
					}
				}
			}
		}
		case DIALOG_XP:
		{
		    if(response)
		    {
				if(team[playerid] == TEAM_HUMAN)
			    {
					switch(listitem)
					{
						case 0: if(pInfo[playerid][pCoins] >= 10) pInfo[playerid][pCoins] -= 10,GivePlayerXP(playerid,1000); else { SendCoinError(playerid,10); }
						case 1: if(pInfo[playerid][pCoins] >= 25) pInfo[playerid][pCoins] -= 50,GivePlayerXP(playerid,5000); else { SendCoinError(playerid,25); }
						case 2: if(pInfo[playerid][pCoins] >= 75) pInfo[playerid][pCoins] -= 100,GivePlayerXP(playerid,10000); else { SendCoinError(playerid,75); }
					}
				}
				else return SendClientMessage(playerid,-1,""chat""COL_LGREEN" You must be a human to buy weapons");
			}
		}

		case DIALOG_BUY_WEAPONS:
		{
		    if(response)
		    {
				if(team[playerid] == TEAM_HUMAN)
			    {
					switch(listitem)
					{
						case 0: if(pInfo[playerid][pCoins] >= 5) pInfo[playerid][pCoins] -= 5,GivePlayerWeapon(playerid,24,199); else { SendCoinError(playerid,5); }
						case 1: if(pInfo[playerid][pCoins] >= 10) pInfo[playerid][pCoins] -= 10,GivePlayerWeapon(playerid,25,199); else { SendCoinError(playerid,10); }
						case 2: if(pInfo[playerid][pCoins] >= 15) pInfo[playerid][pCoins] -= 15,GivePlayerWeapon(playerid,29,300); else { SendCoinError(playerid,15); }
						case 3: if(pInfo[playerid][pCoins] >= 20) pInfo[playerid][pCoins] -= 20,GivePlayerWeapon(playerid,30,300); else { SendCoinError(playerid,20); }
						case 4: if(pInfo[playerid][pCoins] >= 20) pInfo[playerid][pCoins] -= 20,GivePlayerWeapon(playerid,31,300); else { SendCoinError(playerid,20); }
						case 5: if(pInfo[playerid][pCoins] >= 25) pInfo[playerid][pCoins] -= 25,GivePlayerWeapon(playerid,34,150); else { SendCoinError(playerid,25); }
					}
				}
				else return SendClientMessage(playerid,-1,""chat""COL_LGREEN" You must be a human to buy weapons");
			}
		}

		case DIALOG_BUY_CLASSES:
		{
		    if(response)
		    {
				if(team[playerid] == TEAM_HUMAN)
			    {
					if(pInfo[playerid][SkinChanges] >= 1)
					{
						switch(listitem)
						{
							case 0: if(pInfo[playerid][pCoins] >= 10) pInfo[playerid][pCoins] -= 10,pInfo[playerid][SkinChanges] -= 1,pInfo[playerid][pHumanClass] = 0,pInfo[playerid][pHumanClass] = ENGINEER,setClass(playerid); else { SendCoinError(playerid,10); }
							case 1: if(pInfo[playerid][pCoins] >= 10) pInfo[playerid][pCoins] -= 10,pInfo[playerid][SkinChanges] -= 1,pInfo[playerid][pHumanClass] = 0,pInfo[playerid][pHumanClass] = SWAT,setClass(playerid); else { SendCoinError(playerid,10); }
							case 2: if(pInfo[playerid][pCoins] >= 50) pInfo[playerid][pCoins] -= 50,pInfo[playerid][SkinChanges] -= 1,pInfo[playerid][pHumanClass] = 0,pInfo[playerid][pHumanClass] = HEAVYSHOTGUN,setClass(playerid); else { SendCoinError(playerid,50); }
							case 3: if(pInfo[playerid][pCoins] >= 10) pInfo[playerid][pCoins] -= 10,pInfo[playerid][SkinChanges] -= 1,pInfo[playerid][pHumanClass] = 0,pInfo[playerid][pHumanClass] = ADVANCEDMEDIC,setClass(playerid); else { SendCoinError(playerid,10); }
							case 4: if(pInfo[playerid][pCoins] >= 15) pInfo[playerid][pCoins] -= 15,pInfo[playerid][SkinChanges] -= 1,pInfo[playerid][pHumanClass] = 0,pInfo[playerid][pHumanClass] = ADVANCEDENGINEER,setClass(playerid); else { SendCoinError(playerid,15); }
							case 5: if(pInfo[playerid][pCoins] >= 15) pInfo[playerid][pCoins] -= 15,pInfo[playerid][SkinChanges] -= 1,pInfo[playerid][pHumanClass] = 0,pInfo[playerid][pHumanClass] = FEDERALAGENT,setClass(playerid); else { SendCoinError(playerid,15); }
							case 6: if(pInfo[playerid][pCoins] >= 100) pInfo[playerid][pCoins] -= 100,pInfo[playerid][SkinChanges] -= 1,pInfo[playerid][pHumanClass] = 0,pInfo[playerid][pHumanClass] = KICKBACK,setClass(playerid); else { SendCoinError(playerid,100); }
							case 7: if(pInfo[playerid][pCoins] >= 80) pInfo[playerid][pCoins] -= 80,pInfo[playerid][SkinChanges] -= 1,pInfo[playerid][pHumanClass] = 0,pInfo[playerid][pHumanClass] = ADVANCEDSCOUT,setClass(playerid); else { SendCoinError(playerid,80); }
							case 8: if(pInfo[playerid][pCoins] >= 20) pInfo[playerid][pCoins] -= 20,pInfo[playerid][SkinChanges] -= 1,pInfo[playerid][pHumanClass] = 0,pInfo[playerid][pHumanClass] = E_ENGINEER,setClass(playerid); else { SendCoinError(playerid,20); }
							case 9: if(pInfo[playerid][pCoins] >= 100) pInfo[playerid][pCoins] -= 100,pInfo[playerid][pHumanClass] = 0,pInfo[playerid][pHumanClass] = DOCTOR,setClass(playerid); else { SendCoinError(playerid,100); }
						}
					}
					else return SendClientMessage(playerid,-1,""chat""COL_RED" You are not allowed to change your class anymore!");
				}
				else return SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" You must be a human to buy weapons");
			}
		}
	}
	return 1;
}

public OnPlayerDeath(playerid, killerid, reason)
{
	if(team[playerid] == TEAM_ZOMBIE && team[killerid] == TEAM_ZOMBIE)
	{
		switch(GetPlayerWeapon(playerid))
	    {
	        case 45:
	        {
	            new reasonillegalweapons[128];
	            new Admin[24] = "Anti-cheat";
				format(reasonillegalweapons,sizeof(reasonillegalweapons),"Weapon hack %i",GetPlayerWeapon(playerid));
				BanPlayer(playerid,reasonillegalweapons,Admin);
			}
			case 9:
			{
				if(GetDistanceBetweenPlayers(playerid,killerid) >= 6.0)
				{
					printf("%s has been kicked for fake killing - On Player Death", PlayerName(playerid));
					Kick(playerid);
				}
			}
			case 1,2,3,4,5,6,7,8,10,11,12,13,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34:
			{
				pInfo[playerid][pFakeKills] += 1;
			}
		}
		if(pInfo[playerid][pLadders] >= 5)
		{
			SendClientMessage(playerid,COLOR_RED,"You have been banned for fake killing");

			pInfo[playerid][pBanned] = 1;

			new Admin[24] = "Anti-cheat-FakeKills";
			new reasonFake[128] = "Fake Killing - On Player Death - FakeKills";
			BanPlayer(playerid,reasonFake,Admin);
		}

	}

	if(pInfo[playerid][pDeaths] >= 10000000 && pInfo[playerid][pKills] == 0)
	{
		new Admin[24] = "Anti-cheat";
		new reason3[128] = "Fake Killing - On Player Death";
		BanPlayer(playerid,reason3,Admin);

		pInfo[killerid][pKills] -= 20;
		pInfo[playerid][Killstreak] = 0;
		pInfo[killerid][pCoins] -= 4;

		switch(Map[XPType])
		{
			case 1:
			{
				pInfo[killerid][pXP] -= 300;
			}
			case 2:
			{
				pInfo[killerid][pXP] -= 500;
			}
			case 3:
			{
				pInfo[killerid][pXP] -= 700;
			}
			case 4:
			{
				pInfo[killerid][pXP] -= 900;
			}
		}
	}

	if(pInfo[playerid][pLogged] == 1)
	{
		new string[256],gunname[32];
		SaveStats(playerid);
		SendDeathMessage(killerid, playerid, reason);
		playersAliveCount--;

		pInfo[playerid][pDeaths]++;
		pInfo[playerid][Killstreak] = 0;

		if(IsBeingSpeced[playerid] == 1)//If the player being spectated, dies, then turn off the spec mode for the spectator.
		{
			foreach(Player,i)
			{
				if(spectatorid[i] == playerid)
				{
					TogglePlayerSpectating(i,false);// This justifies what's above, if it's not off then you'll be either spectating your connect screen, or somewhere in blueberry (I don't know why)
					if(team[i] == TEAM_HUMAN)
					{
						HumanSetup(i);
						SpawnPlayer(i);
					}
					else if(team[i] == TEAM_ZOMBIE)
					{
						ZombieSetup(i);
						SpawnPlayer(i);
					}
				}
			}
		}

		if(pInfo[playerid][IsPlayerInfected] == 1)
		{
			ZombieSetup(playerid);
			CurePlayer(playerid);
		}

		if(team[playerid] == TEAM_HUMAN)
		{
			ZombieSetup(playerid);
		}

		pInfo[killerid][pKills]++;
		pInfo[killerid][Killstreak]++;
		pInfo[playerid][pDeaths]++;
		pInfo[playerid][Killstreak] = 0;

		switch(Map[XPType])
		{
			case 1:
			{
				switch(random(2))
				{
					case 0: GivePlayerXP(killerid,10);
					case 1: GivePlayerXP(killerid,20);
				}
			}
			case 2:
			{
			switch(random(2))
			{
				case 0: GivePlayerXP(killerid,20);
				case 1: GivePlayerXP(killerid,30);
			}
			}
			case 3:
			{
			switch(random(2))
			{
				case 0: GivePlayerXP(killerid,30);
				case 1: GivePlayerXP(killerid,40);
			}
			}
				case 4:
			{
				switch(random(2))
				{
					case 0: GivePlayerXP(killerid,40);
					case 1: GivePlayerXP(killerid,50);
				}
			}
		}

		if(pInfo[killerid][pVipLevel] >= 1)
		{
			switch(Map[XPType])
			{
				case 1:
				{
					switch(random(2))
					{
						case 0: GivePlayerXP(killerid,15),SendClientMessage(killerid,-1,""chat" Earned 15 XP from VIP Double XP! + normal xp 10 = 25 xp total");
						case 1: GivePlayerXP(killerid,25),SendClientMessage(killerid,-1,""chat" Earned 25 XP from VIP Double XP! + normal xp 20 = 45 xp total");
					}
				}

				case 2:
				{
					switch(random(2))
					{
						case 0: GivePlayerXP(killerid,25),SendClientMessage(killerid,-1,""chat" Earned 25 XP from VIP Double XP! + double xp 20 = 45 xp total");
						case 1: GivePlayerXP(killerid,35),SendClientMessage(killerid,-1,""chat" Earned 35 XP from VIP Double XP! + double xp 30 = 65 xp total");
					}
				}

				case 3:
				{
					switch(random(2))
					{
						case 0: GivePlayerXP(killerid,35),SendClientMessage(killerid,-1,""chat" Earned 35 XP from VIP Double XP! + triple xp 30 = 65 xp total");
						case 1: GivePlayerXP(killerid,45),SendClientMessage(killerid,-1,""chat" Earned 45 XP from VIP Double XP! + triple xp 40 = 85 xp total");
					}
				}
				case 4:
				{
					switch(random(2))
					{
						case 0: GivePlayerXP(killerid,55),SendClientMessage(killerid,-1,""chat" Earned 55 XP from VIP Double XP! + quad xp 40 = 95 xp total");
						case 1: GivePlayerXP(killerid,65),SendClientMessage(killerid,-1,""chat" Earned 65 XP from VIP Double XP! + quad xp 50 = 115 xp total");
					}
				}
			}
		}

		if(team[killerid] == TEAM_ZOMBIE)
		{
			if(reason == 9)
			{
				ZombieSetup(playerid);
			}
		}

		KillTimer(pInfo[playerid][IsPlayerInfectedTimer]);
		GetWeaponName(reason,gunname,sizeof(gunname));
		format(string,sizeof(string),"You have killed~r~ %s~w~ with an %s",PlayerName(playerid),gunname);
		TextDrawSetString(iKilled[killerid],string);
		TextDrawShowForPlayer(killerid, iKilled[killerid]);
		SetTimerEx("HideiKilled", 3000, 0, "i", killerid);

		if(killerid != INVALID_PLAYER_ID)
		{
			if(!PlayerShotPlayer[killerid][playerid])
			{
				new Admin[24] = "Anti-cheat";
				new reason3[128] = "Fake Killing";
				BanPlayer(playerid,reason3,Admin);
			}
		}

		foreach(Player,i)
		{
			PlayerShotPlayer[i][playerid] = 0;
		}
		new Float:x,Float:y,Float:z;

		if(team[playerid] == TEAM_ZOMBIE)
		{
			GetPlayerPos(playerid,Float:x,Float:y,Float:z);
			meatDrops[playerid] = CreatePickup(2805,19,Float:x,Float:y,Float:z,0);

			if(pInfo[playerid][pZombieClass] == BOOMERZOMBIE)
			{
				GetPlayerPos(playerid,Float:x,Float:y,Float:z);
				CreateExplosion(Float:x,Float:y,Float:z,0,6.0);

				foreach(Player,i)
				{
					GetClosestPlayer(i);
					if(IsPlayerConnected(i))
					{
						switch(GetPlayerSkin(i))
						{
							case NON_IMMUNE:
							{
								if(IsPlayerInRangeOfPoint(i,7.0,Float:x,Float:y,Float:z))
								{
									if(pInfo[i][IsPlayerInfected] == 0)
									{
										if(pInfo[i][pAdminDuty] == 0)
										{
											InfectPlayerStandard(i);
										}
										else if(pInfo[i][pAdminDuty] == 1)
										{
											SendClientMessage(playerid,COLOR_RED,"That player can't be infected because is on admin duty!");
										}
									}
								}
							}
						}
					}
				}
			}
		}

		new kstring[256];
		switch(pInfo[killerid][Killstreak])
		{
			case 5: format(kstring,sizeof(kstring),""chat""COL_PINK" %s has achieved a 5 killstreak "COL_WHITE"(+50 XP) (1 Coin)",PlayerName(killerid)), SendClientMessageToAll(-1,kstring), pInfo[killerid][pXP] += 50,pInfo[killerid][pCoins] += 1;
			case 10: format(kstring,sizeof(kstring),""chat""COL_PINK" %s has achieved a 10 killstreak "COL_WHITE"(+80 XP) (2 Coins)",PlayerName(killerid)), SendClientMessageToAll(-1,kstring), pInfo[killerid][pXP] += 80,pInfo[killerid][pCoins] += 2;
			case 15: format(kstring,sizeof(kstring),""chat""COL_PINK" %s has achieved a 15 killstreak "COL_WHITE"(+100 XP) (3 Coins)",PlayerName(killerid)), SendClientMessageToAll(-1,kstring), pInfo[killerid][pXP] += 100,pInfo[killerid][pCoins] += 3;
			case 20: format(kstring,sizeof(kstring),""chat""COL_PINK" %s has achieved a 20 killstreak "COL_WHITE"(+150 XP) (4 Coins)",PlayerName(killerid)), SendClientMessageToAll(-1,kstring), pInfo[killerid][pXP] += 150,pInfo[killerid][pCoins] += 4;
			case 25: format(kstring,sizeof(kstring),""chat""COL_PINK" %s has achieved a 25 killstreak "COL_WHITE"(+200 XP) (5 Coins)",PlayerName(killerid)), SendClientMessageToAll(-1,kstring), pInfo[killerid][pXP] += 200,pInfo[killerid][pCoins] += 5;
			case 30: format(kstring,sizeof(kstring),""chat""COL_PINK" %s has achieved a 30 killstreak "COL_WHITE"(+250 XP) (6 Coins)",PlayerName(killerid)), SendClientMessageToAll(-1,kstring), pInfo[killerid][pXP] += 250,pInfo[killerid][pCoins] += 6;
			case 35: format(kstring,sizeof(kstring),""chat""COL_PINK" %s has achieved a 35 killstreak "COL_WHITE"(+350 XP) (7 Coins)",PlayerName(killerid)), SendClientMessageToAll(-1,kstring), pInfo[killerid][pXP] += 350,pInfo[killerid][pCoins] += 7;
			case 40: format(kstring,sizeof(kstring),""chat""COL_PINK" %s has achieved a 40 killstreak "COL_WHITE"(+500 XP) (8 Coins)",PlayerName(killerid)), SendClientMessageToAll(-1,kstring), pInfo[killerid][pXP] += 500,pInfo[killerid][pCoins] += 8;
			case 45: format(kstring,sizeof(kstring),""chat""COL_PINK" %s has achieved a 45 killstreak "COL_WHITE"(+600 XP) (9 Coins)",PlayerName(killerid)), SendClientMessageToAll(-1,kstring), pInfo[killerid][pXP] += 600,pInfo[killerid][pCoins] += 9;
			case 50: format(kstring,sizeof(kstring),""chat""COL_PINK" %s has achieved a 50 killstreak "COL_WHITE"(+800 XP) (10 Coins)",PlayerName(killerid)), SendClientMessageToAll(-1,kstring), pInfo[killerid][pXP] += 800,pInfo[killerid][pCoins] += 10;
			case 55: format(kstring,sizeof(kstring),""chat""COL_PINK" %s has achieved a 55 killstreak "COL_WHITE"(+950 XP) (11 Coins)",PlayerName(killerid)), SendClientMessageToAll(-1,kstring), pInfo[killerid][pXP] += 950,pInfo[killerid][pCoins] += 11;
			case 60: format(kstring,sizeof(kstring),""chat""COL_PINK" %s has achieved a 60 killstreak "COL_WHITE"(+1000 XP) (12 Coins)",PlayerName(killerid)), SendClientMessageToAll(-1,kstring), pInfo[killerid][pXP] += 1000,pInfo[killerid][pCoins] += 12;
			case 65: format(kstring,sizeof(kstring),""chat""COL_PINK" %s has achieved a 65 killstreak "COL_WHITE"(+1200 XP) (13 Coins)",PlayerName(killerid)), SendClientMessageToAll(-1,kstring), pInfo[killerid][pXP] += 1200,pInfo[killerid][pCoins] += 13;
			case 70: format(kstring,sizeof(kstring),""chat""COL_PINK" %s has achieved a 70 killstreak "COL_WHITE"(+1500 XP) (14 Coins)",PlayerName(killerid)), SendClientMessageToAll(-1,kstring), pInfo[killerid][pXP] += 1500,pInfo[killerid][pCoins] += 14;
			case 75: format(kstring,sizeof(kstring),""chat""COL_PINK" %s has achieved a 75 killstreak "COL_WHITE"(+1600 XP) (15 Coins)",PlayerName(killerid)), SendClientMessageToAll(-1,kstring), pInfo[killerid][pXP] += 1600,pInfo[killerid][pCoins] += 15;
			case 80: format(kstring,sizeof(kstring),""chat""COL_PINK" %s has achieved a 80 killstreak "COL_WHITE"(+1800 XP) (16 Coins)",PlayerName(killerid)), SendClientMessageToAll(-1,kstring), pInfo[killerid][pXP] += 1800,pInfo[killerid][pCoins] += 16;
			case 85: format(kstring,sizeof(kstring),""chat""COL_PINK" %s has achieved a 85 killstreak "COL_WHITE"(+1900 XP) (17 Coins)",PlayerName(killerid)), SendClientMessageToAll(-1,kstring), pInfo[killerid][pXP] += 1900,pInfo[killerid][pCoins] += 17;
			case 90: format(kstring,sizeof(kstring),""chat""COL_PINK" %s has achieved a 90 killstreak "COL_WHITE"(+2000 XP) (18 Coins)",PlayerName(killerid)), SendClientMessageToAll(-1,kstring), pInfo[killerid][pXP] += 2000,pInfo[killerid][pCoins] += 18;
			case 95: format(kstring,sizeof(kstring),""chat""COL_PINK" %s has achieved a 95 killstreak "COL_WHITE"(+5000 XP) (19 Coins)",PlayerName(killerid)), SendClientMessageToAll(-1,kstring), pInfo[killerid][pXP] += 5000,pInfo[killerid][pCoins] += 19;
			case 100: format(kstring,sizeof(kstring),""chat""COL_PINK" %s has achieved a 100 killstreak "COL_WHITE"(+5500 XP) (20 Coins)",PlayerName(killerid)), SendClientMessageToAll(-1,kstring), pInfo[killerid][pXP] += 5500,pInfo[killerid][pCoins] += 20;
			case 105: format(kstring,sizeof(kstring),""chat""COL_PINK" %s has achieved a 105 killstreak "COL_WHITE"(+6000 XP) (21 Coins)",PlayerName(killerid)), SendClientMessageToAll(-1,kstring), pInfo[killerid][pXP] += 6000,pInfo[killerid][pCoins] += 21;
			case 110: format(kstring,sizeof(kstring),""chat""COL_PINK" %s has achieved a 110 killstreak "COL_WHITE"(+6500 XP) (22 Coins)",PlayerName(killerid)), SendClientMessageToAll(-1,kstring), pInfo[killerid][pXP] += 6500,pInfo[killerid][pCoins] += 22;
			case 115: format(kstring,sizeof(kstring),""chat""COL_PINK" %s has achieved a 115 killstreak "COL_WHITE"(+7000 XP) (23 Coins)",PlayerName(killerid)), SendClientMessageToAll(-1,kstring), pInfo[killerid][pXP] += 7000,pInfo[killerid][pCoins] += 23;
			case 120: format(kstring,sizeof(kstring),""chat""COL_PINK" %s has achieved a 120 killstreak "COL_WHITE"(+7500 XP) (24 Coins)",PlayerName(killerid)), SendClientMessageToAll(-1,kstring), pInfo[killerid][pXP] += 7500,pInfo[killerid][pCoins] += 24;
		}

		if(team[killerid] == TEAM_HUMAN)
		{
			if(GetPlayerSkin(killerid) == 0)
			{
				new Admin[24] = "Anti-cheat";
				new reason3[128] = "Skin Hack (SI 0)";
				BanPlayer(killerid,reason3,Admin);
			}
		}

		hideTextdrawsAfterConnect(playerid);
		CheckToLevelOrRankUp(killerid);
	}

	return 1;
}

public OnPlayerTakeDamage(playerid, issuerid, Float: amount, weaponid)
{
    PlayerShotPlayer[issuerid][playerid] = 1;

	if(team[issuerid] == TEAM_HUMAN)
	{
	    if(pInfo[issuerid][pHumanClass] == KICKBACK || pInfo[issuerid][pVipKickBack] == 1 || pInfo[issuerid][pKickBackCoin])
	    {
	        if(team[playerid] == TEAM_ZOMBIE)
	        {
        		if(weaponid == 23 || weaponid == 25 || weaponid == 24 || weaponid == 34 || weaponid == 31 || weaponid == 29)
				{
				    new Float:x,Float:y,Float:z,Float:angle;
				    GetPlayerFacingAngle(playerid,Float:angle);
				    GetPlayerVelocity(playerid,Float:x,Float:y,Float:z);

		  			SetPlayerVelocity(playerid,Float:x+0.1,Float:y+0.1,Float:z+0.2);
		  			SetPlayerFacingAngle(playerid,Float:angle);
				}
		    }
		}
	}

	if(team[issuerid] == TEAM_HUMAN)
	{
	    if(pInfo[issuerid][pHumanClass] == KICKBACK || pInfo[issuerid][pVipKickBack] == 1 || pInfo[issuerid][pKickBackCoin])
	    {
	        if(pInfo[issuerid][pZombieClass] == KZOM)
	        {
        		if(weaponid == 23 || weaponid == 25 || weaponid == 24 || weaponid == 34 || weaponid == 31 || weaponid == 29 || weaponid == 27)
				{
				    new Float:x,Float:y,Float:z,Float:angle;
				    GetPlayerFacingAngle(playerid,Float:angle);
				    GetPlayerVelocity(playerid,Float:x,Float:y,Float:z);

		  			SetPlayerVelocity(playerid,Float:x+0.0,Float:y+0.0,Float:z+0.0);
		  			SetPlayerFacingAngle(playerid,Float:angle);
				}
		    }
		}
	}

	if(team[issuerid] == TEAM_ZOMBIE)
	{
	    if(pInfo[issuerid][pZombieClass] == DSNIPE)
	    {
	        if(team[playerid] == TEAM_HUMAN)
	        {
	            if(weaponid == 34)
	            {
	            new Float:hp;
			    GetPlayerHealth(playerid,hp);
				SetPlayerHealth(playerid, hp - 10);
				}
			}
		}
	}

	if(team[issuerid] == TEAM_HUMAN)
	{
	    if(pInfo[issuerid][pHumanClass] == AKICK)
	    {
	        if(team[playerid] == TEAM_ZOMBIE)
	        {
        		if(weaponid == 27)
				{
				    new Float:x,Float:y,Float:z,Float:angle;
				    GetPlayerFacingAngle(playerid,Float:angle);
				    GetPlayerVelocity(playerid,Float:x,Float:y,Float:z);

		  			SetPlayerVelocity(playerid,Float:x+0.3,Float:y+0.3,Float:z+0.4);
		  			SetPlayerFacingAngle(playerid,Float:angle);
				}
		    }
		}
	}

	if(team[issuerid] == TEAM_HUMAN)
	{
	    if(pInfo[issuerid][pHumanClass] == VIPSCOUT || pInfo[issuerid][pHumanClass] == MASTER || pInfo[issuerid][pHumanClass] == BUDDY || pInfo[issuerid][pHumanClass] == HITMAN)
	    {
	        if(team[playerid] == TEAM_ZOMBIE)
	        {
	            if(weaponid == 34 || weaponid == 29 || weaponid == 14 || weaponid == 33 || weaponid == 30)
	            {
	            new Float:hp;
			    GetPlayerHealth(playerid,hp);
				SetPlayerHealth(playerid, hp - 40);
				}
			}
		}
	}
	if(team[issuerid] == TEAM_ZOMBIE)
	{
	    if(pInfo[issuerid][pZombieClass] == GZOM)
	    {
	        if(team[playerid] == TEAM_HUMAN)
	        {
	            if(weaponid == 9)
	            {
	            new Float:hp;
			    GetPlayerHealth(playerid,hp);
				SetPlayerHealth(playerid, hp - 40);
				}
			}
		}
	}

	if(team[issuerid] == TEAM_ZOMBIE || TEAM_HUMAN)
	{
		if(pInfo[issuerid][pHour] <= 2)
		{
			if(team[playerid] == TEAM_HUMAN)
			{
				pInfo[issuerid][pXP] += 10;
			}
		}
	}

	if(team[issuerid] == TEAM_HUMAN)
	{
	    if(pInfo[issuerid][pHumanClass] == COWBOY)
	    {
	        if(team[playerid] == TEAM_ZOMBIE)
	        {
	            if(weaponid == 22)
	            {
	            new Float:hp;
			    GetPlayerHealth(playerid,hp);
				SetPlayerHealth(playerid, hp - 20);
				}
			}
		}
	}

	if(team[issuerid] == TEAM_HUMAN)
	{
	    if(pInfo[issuerid][pHumanClass] == ASSASSIN)
	    {
	        if(team[playerid] == TEAM_ZOMBIE)
	        {
	            if(weaponid == 8)
	            {
	            new Float:hp;
			    GetPlayerHealth(playerid,hp);
				SetPlayerHealth(playerid, hp - 100);
				}
			}
		}
	}
	if(team[issuerid] == TEAM_HUMAN)
	{
	    if(pInfo[issuerid][pHumanClass] == PIMP)
	    {
	        if(team[playerid] == TEAM_ZOMBIE)
	        {
	            if(weaponid == 10)
	            {
	            new Float:hp;
			    GetPlayerHealth(playerid,hp);
				SetPlayerHealth(playerid, hp - 15);
				}
			}
		}
	}
	if(team[issuerid] == TEAM_HUMAN)
	{
	    if(pInfo[issuerid][pHumanClass] == EXPERIENCEDSCOUT)
	    {
	        if(team[playerid] == TEAM_ZOMBIE)
	        {
	            if(weaponid == 34 || weaponid == 23 )
	            {
	            new Float:hp;
			    GetPlayerHealth(playerid,hp);
				SetPlayerHealth(playerid, hp - 80);
				}
			}
		}
	}
	if(team[issuerid] == TEAM_HUMAN)
	{
 		if(pInfo[issuerid][pHumanClass] == SCOUT || pInfo[issuerid][pHumanClass] == HEAVYSHOTGUN || pInfo[issuerid][pHumanClass] == KICKBACK || pInfo[issuerid][pDamageShotgunCoin] == 1 || pInfo[issuerid][pHumanClass] == BOXER)
		{
 			if(team[playerid] == TEAM_ZOMBIE)
	    	{
  				if(weaponid == 25)
				{
				new Float:hp;
			    GetPlayerHealth(playerid,hp);
				SetPlayerHealth(playerid, hp - 35);
				}
				if(weaponid == 0)
				{
				new Float:hp;
			    GetPlayerHealth(playerid,hp);
				SetPlayerHealth(playerid, hp - 100);
				}
				if(weaponid == 34)
				{
				new Float:hp;
			    GetPlayerHealth(playerid,hp);
				SetPlayerHealth(playerid, hp - 35);
				}
			}
		}
	}

	if(team[issuerid] == TEAM_HUMAN)
	{
	    if(pInfo[issuerid][pHumanClass] == TECG)
	    {
	        if(team[playerid] == TEAM_ZOMBIE)
	        {
	            if(weaponid == 32)
	            {
	            new Float:hp;
			    GetPlayerHealth(playerid,hp);
				SetPlayerHealth(playerid, hp - 75);
				}
			}
		}
	}

    if(team[issuerid] == TEAM_HUMAN)
	{
	    if(pInfo[issuerid][pHumanClass] == BULL)
	    {
	        if(team[playerid] == TEAM_ZOMBIE)
	        {
	            if(weaponid == 26)
	            {
	            new Float:hp;
			    GetPlayerHealth(playerid,hp);
				SetPlayerHealth(playerid, hp - 40);
				}
			}
		}
	}

	if(team[issuerid] == TEAM_HUMAN)
	{
	    if(pInfo[issuerid][pHumanClass] == SHOTGUNSPECIAL)
		{
 			if(team[playerid] == TEAM_ZOMBIE)
	    	{
  				if(weaponid == 25)
				{
				new Float:hp;
			    GetPlayerHealth(playerid,hp);
				SetPlayerHealth(playerid, hp - 50);
				}
			}
		}
	}
	return 1;
}

public OnPlayerText(playerid, text[])
{
	if(GetPVarInt(playerid, "SPS Muted") == 0)
	{
		SetPVarInt(playerid, "SPS Messages Sent", GetPVarInt(playerid, "SPS Messages Sent") + 1);
		SetTimerEx("SPS_Remove_Messages_Limit", 1500, 0, "i", playerid);

		if(GetPVarInt(playerid, "SPS Messages Sent") >= 4)
		{
		    if(!(((GetPVarInt(playerid, "SPS Spam Warnings") + 2) == 3)))
		    {
			    SendClientMessage(playerid, -1, ""chat""COL_LIGHTBLUE" Please, do not spam.");
		    }
		    SetPVarInt(playerid, "SPS Spam Warnings", GetPVarInt(playerid, "SPS Spam Warnings") + 1);
		}

		if(pInfo[playerid][pLogged] == 1)
		{
	        new stringbig[356];
	        if(pInfo[playerid][IsPlayerMuted] == 1) {
	            SendClientMessage(playerid,-1,""chat" You are muted");
	            return 0;
			}
            if(team[playerid] == TEAM_HUMAN)
			{
			format(stringbig,sizeof(stringbig),""COL_WHITE"[Human](%d): {FFFFFF}%s",playerid, text);
	  		SendPlayerMessageToAll(playerid,stringbig);
	  		}
            if(team[playerid] == TEAM_ZOMBIE)
			{
			format(stringbig,sizeof(stringbig),""COL_WHITE"[Zombie](%d): {FFFFFF}%s",playerid, text);
	  		SendPlayerMessageToAll(playerid,stringbig);
	  		}
            {
                SetPlayerChatBubble(playerid, text, 0xFF0000FF, 100.0, 10000);
            }
	    }
	}
	else
	{
		SendClientMessage(playerid, -1, ""chat""COL_LIGHTBLUE" You are muted, you can't talk.");
		return 0;
	}
	return 0;
}

public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
	if(pInfo[playerid][pAdminLevel] >= 5)
	{
		SendClientMessage(playerid,-1,""chat" "COL_GREEN"{1569C7}Welcome To Vehicle");
	}
	else
	{
		new Float:posxx[3];
		GetPlayerPos(playerid, posxx[0], posxx[1], posxx[2]);
		SetPlayerPos(playerid, posxx[0], posxx[1], posxx[2]+2);
	}
	return 1;
}

public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
	if(PRESSED(KEY_FIRE))
	{
	    switch(GetPlayerWeapon(playerid))
	    {
	        case 15,16,17,18,36,38,39,41,42,43,44,45:
	        {
	            new reason[128];
	            new Admin[24] = "Anti-cheat";
				format(reason,sizeof(reason),"Weapon hack %i",GetPlayerWeapon(playerid));
				BanPlayer(playerid,reason,Admin);
			}
		}
	}

	if(PRESSED(KEY_FIRE))
	{
 		if(team[playerid] == TEAM_HUMAN)
 		{
	    	switch(GetPlayerWeapon(playerid))
			{
	            case 9: ShowPlayerDialog(playerid,DIALOG_KICK,DIALOG_STYLE_MSGBOX,"Kicked for bugged","You have been kicked for chainsaw bug reconnect to solve the problem","Leave",""),Kick(playerid);
			}
		}
	}


	if(PRESSED(KEY_YES))
	{
	    if(team[playerid] == TEAM_HUMAN)
	    {
	        if(gettime() - 8 < Abilitys[playerid][ShoutCooldown]) return GameTextForPlayer(playerid,"~w~ Cannot shout wait 8 seconds!",1000,5);
			{
				ShowPlayerDialog(playerid,DIALOG_SHOUT,DIALOG_STYLE_LIST,"Select an shout!","Medic\nBoomer Incoming\nScreamer Incoming\nStomper Incoming\nIt's clear\nZOMBIES NEARBY!\nZOMBIES INCOMING\nNeed assistance\nNeed backup","Select","Cancel");
        		PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
                Abilitys[playerid][ShoutCooldown] = gettime();
			}
		}
	}
	if(PRESSED(KEY_WALK))
	{
	    if(team[playerid] == TEAM_HUMAN)
	    {
	        if(pInfo[playerid][pHumanClass] == E_ENGINEER)
	        {
         		new Float:pz, Float:x, Float:y, Float:z;
				GetPlayerFacingAngle(playerid, pz);
				GetPlayerPos(playerid, Float:x, Float:y, Float:z);

				if(pInfo[playerid][pLadders] >= 1)
				{
				    new string[128];
				    pInfo[playerid][pLadders] -= 1;
 					GetXYInFrontOfPlayer(playerid, Float:x,Float:y, 1.0);
        			CreateObject(1437,Float:x,Float:y,Float:z,-30.0,0.0,pz,500.0);
					format(string,sizeof(string),""chat" You have %i ladders left",pInfo[playerid][pLadders]);
					SendClientMessage(playerid,-1,string);
					PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
				}
				else return SendClientMessage(playerid,-1,""chat" You ran out of Ladders!");
			}
		}
	}
	if(PRESSED(KEY_WALK))
	{
	    if(team[playerid] == TEAM_HUMAN)
	    {
	        if(pInfo[playerid][pHumanClass] == VIPENGINEER)
	        {
         		new Float:pz, Float:x, Float:y, Float:z;
				GetPlayerFacingAngle(playerid, pz);
				GetPlayerPos(playerid, Float:x, Float:y, Float:z);

				if(pInfo[playerid][pVipBoxes] >= 1)
				{
				    new string[128];
				    pInfo[playerid][pVipBoxes] -= 1;
 					GetXYInFrontOfPlayer(playerid, Float:x,Float:y, 1.0);
        			CreateObject(1271,Float:x,Float:y,Float:z,0.0,0.0,pz,500.0);
					format(string,sizeof(string),""chat" You have %i boxes left",pInfo[playerid][pVipBoxes]);
					SendClientMessage(playerid,-1,string);
					PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
				}
				else return SendClientMessage(playerid,-1,""chat" You ran out of boxes!");
			}
		}
	}
	if(PRESSED(KEY_WALK))
	{
	    if(team[playerid] == TEAM_HUMAN)
	    {
	        if(pInfo[playerid][pHumanClass] == ENGINEER)
	        {
         		new Float:pz, Float:x, Float:y, Float:z;
				GetPlayerFacingAngle(playerid, pz);
				GetPlayerPos(playerid, Float:x, Float:y, Float:z);

				if(pInfo[playerid][Boxes] >= 1)
				{
				    new string[128];
				    pInfo[playerid][Boxes] -= 1;
 					GetXYInFrontOfPlayer(playerid, Float:x,Float:y, 1.0);
        			CreateObject(1421,Float:x,Float:y,Float:z,0.0,0.0,pz,500.0);
					format(string,sizeof(string),""chat" You have %i boxes left",pInfo[playerid][Boxes]);
					SendClientMessage(playerid,-1,string);
					PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
				}
				else return SendClientMessage(playerid,-1,""chat" You ran out of boxes!");
			}
		}
	}
	if(PRESSED(KEY_WALK))
	{
	    if(team[playerid] == TEAM_HUMAN)
	    {
	        if(pInfo[playerid][pHumanClass] == ADVANCEDENGINEER)
	        {
         		new Float:pz, Float:x, Float:y, Float:z;
				GetPlayerFacingAngle(playerid, pz);
				GetPlayerPos(playerid, Float:x, Float:y, Float:z);

				if(pInfo[playerid][BoxesAdvanced] >= 1)
				{
				    new string[128];
				    pInfo[playerid][BoxesAdvanced] -= 1;
 					GetXYInFrontOfPlayer(playerid, Float:x,Float:y, 1.0);
        			CreateObject(1421,Float:x,Float:y,Float:z,0.0,0.0,pz,500.0);
					format(string,sizeof(string),""chat" You have %i boxes left",pInfo[playerid][BoxesAdvanced]);
					SendClientMessage(playerid,-1,string);
					PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
				}
				else return SendClientMessage(playerid,-1,""chat" You ran out of boxes!");
			}
		}
	}
	if(PRESSED(KEY_WALK))
	{
	    if(team[playerid] == TEAM_HUMAN)
	    {
	        if(pInfo[playerid][pHumanClass] == DOCTOR)
	        {
         		new Float:pz, Float:x, Float:y, Float:z;
				GetPlayerFacingAngle(playerid, pz);
				GetPlayerPos(playerid, Float:x, Float:y, Float:z);

				if(pInfo[playerid][pDoctorShield] >= 1)
				{
				    new string[128];
				    pInfo[playerid][pDoctorShield] -= 1;
 					GetXYInFrontOfPlayer(playerid, Float:x,Float:y, 1.0);
        			DocShield = CreateObject(3534,Float:x,Float:y,Float:z,0.0,0.0,pz,500.0);
					format(string,sizeof(string),""chat" You have %i Doctor shields left",pInfo[playerid][pDoctorShield]);
					SendClientMessage(playerid,-1,string);
					PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
				}
				else return SendClientMessage(playerid,-1,""chat" You ran out of shields!");
			}
		}
	}
	if(PRESSED(KEY_WALK))
	{
	    if(team[playerid] == TEAM_HUMAN)
	    {
	        if(pInfo[playerid][pHumanClass] == ASSASSIN)
	        {
         		new Float:pz, Float:x, Float:y, Float:z;
				GetPlayerFacingAngle(playerid, pz);
				GetPlayerPos(playerid, Float:x, Float:y, Float:z);

				if(pInfo[playerid][C4] >= 1)
				{
				    new string[128];
				    pInfo[playerid][C4] -= 1;
 					GetXYInFrontOfPlayer(playerid, Float:x,Float:y, 1.0);
 					ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 2000);
        			c4Obj[playerid] = CreateObject(1654,Float:x,Float:y,Float:z-1,0.0,0.0,pz,500.0);
					format(string,sizeof(string),""chat" You have %i C4's left",pInfo[playerid][C4]);
					SendClientMessage(playerid,-1,string);

     				GameTextForPlayer(playerid,"~n~~n~~n~~n~~g~Planted c4 exploded in 10 seconds",3500,5);
     				SetTimerEx("C4Explode",10000,0,"i",playerid);
					GivePlayerXP(playerid,5);
					PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
				}
				else return SendClientMessage(playerid,-1,""chat" You ran out of c4's!");
			}
		}
	}
	if(PRESSED(KEY_WALK))
	{
	    if(team[playerid] == TEAM_HUMAN)
	    {
	        if(pInfo[playerid][pHumanClass] == TRAPMASTER)
	        {
         		new Float:pz, Float:x, Float:y, Float:z;
				GetPlayerFacingAngle(playerid, pz);
				GetPlayerPos(playerid, Float:x, Float:y, Float:z);

				if(pInfo[playerid][pTrapMasterTrap] >= 1)
				{
				    new string[128];
				    pInfo[playerid][pTrapMasterTrap] -= 1;
 					GetXYInFrontOfPlayer(playerid, Float:x,Float:y, 1.0);
 					ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 2000);
        			Trap = CreateObject(19315,Float:x,Float:y,Float:z-1,0.0,0.0,pz,500.0);
					format(string,sizeof(string),""chat" You have %i traps left",pInfo[playerid][traps]);
					SendClientMessage(playerid,-1,string);
				}
				else return SendClientMessage(playerid,-1,""chat" You ran out of traps!");
			}

		}

	}
	if(PRESSED(KEY_WALK))
	{
	    if(team[playerid] == TEAM_HUMAN)
	    {
	        if(pInfo[playerid][pHumanClass] == SCIENTIST)
	        {
			    new Float:x,Float:y,Float:z,Float:Angle;
			    GetPlayerPos(playerid,Float:x,Float:y,Float:z);
				GetPlayerFacingAngle(playerid,Float:Angle);

				new targetid = GetClosestPlayer(playerid);
				if(team[targetid] == TEAM_ZOMBIE)
				{
					foreach(Player,i)
					{
						if(GetDistanceBetweenPlayers(targetid,i) <= 6.0)
						{
							if (pInfo[playerid][pScientistCure] >= 1)
							{
								GetClosestPlayer(i);
								GetPlayerFacingAngle(i,Float:Angle);
								GetPlayerVelocity(i,Float:x,Float:y,Float:z);
								GivePlayerXP(playerid, 500);

								new string[128], string2[128], revivedstring[128];
								HumanSetup(targetid);
								SpawnPlayer(targetid);

								SetPlayerPos(targetid,Float:x,Float:y,Float:z);
								SetPlayerFacingAngle(targetid,Float:Angle);

								pInfo[playerid][pScientistCure] -= 1;

								format(string,sizeof(string),""chat" You have revived %s",PlayerName(targetid));
								SendClientMessage(playerid,-1,string);

								format(string2,sizeof(string2),""chat" You have beed revived by %s",PlayerName(playerid));
								SendClientMessage(targetid,-1,string2);

								format(revivedstring,sizeof(revivedstring), ""chat""COL_PINK" %s has been revived by %s",PlayerName(targetid),PlayerName(playerid));
								SendClientMessageToAll(-1,revivedstring);
							}
						}
					}
				}
			}
		}
	}
	if(PRESSED(KEY_WALK))
	{
	    if(team[playerid] == TEAM_ZOMBIE)
	    {
			if(pInfo[playerid][pZombieClass] == ADVSTOMPER || pInfo[playerid][pZombieClass] == KZOM)
			{
                if(gettime() - 6 < Abilitys[playerid][StomperPushing]) return GameTextForPlayer(playerid,"~w~ Still recovering",1000,5);
			    {
			        new Float:x,Float:y,Float:z,Float:Angle;
			        GetPlayerPos(playerid,Float:x,Float:y,Float:z);
			        GetPlayerFacingAngle(playerid,Float:Angle);
					foreach(Player,i)
					{
      					switch(GetPlayerSkin(i))
						{
       						case NON_IMMUNE,100:
							{
                        	    if(GetDistanceBetweenPlayers(playerid,i) < 8.0)
                        	    {
							    	GetClosestPlayer(i);
									GetPlayerFacingAngle(i,Float:Angle);
									GetPlayerVelocity(i,Float:x,Float:y,Float:z);
									SetPlayerVelocity(i,Float:x+0.3,Float:y+0.3,Float:z+0.2);
									SetPlayerFacingAngle(i,Float:Angle);
									GivePlayerXP(playerid,20);
									Abilitys[playerid][StomperPushing] = gettime();
								}
							}
						}
					}
				}
			}
		}
	}
	if(PRESSED(KEY_WALK))
	{
	    if(team[playerid] == TEAM_ZOMBIE)
	    {
			if(pInfo[playerid][pZombieClass] == STOMPERZOMBIE)
			{
                if(gettime() - 6 < Abilitys[playerid][StomperPushing]) return GameTextForPlayer(playerid,"~w~ Still recovering",1000,5);
			    {
			        new Float:x,Float:y,Float:z,Float:Angle;
			        GetPlayerPos(playerid,Float:x,Float:y,Float:z);
			        GetPlayerFacingAngle(playerid,Float:Angle);
					foreach(Player,i)
					{
      					switch(GetPlayerSkin(i))
						{
       						case NON_IMMUNE,163,70:
							{
                        	    if(GetDistanceBetweenPlayers(playerid,i) < 6.0)
                        	    {
							    	GetClosestPlayer(i);
									GetPlayerFacingAngle(i,Float:Angle);
									GetPlayerVelocity(i,Float:x,Float:y,Float:z);
									SetPlayerVelocity(i,Float:x+0.3,Float:y+0.3,Float:z+0.2);
									SetPlayerFacingAngle(i,Float:Angle);
									GivePlayerXP(playerid,20);
									Abilitys[playerid][StomperPushing] = gettime();
								}
							}
						}
					}
				}
			}
		}
	}
    if(PRESSED(KEY_FIRE))
	{
	    if(team[playerid] == TEAM_HUMAN)
	    {
			if(pInfo[playerid][pHumanClass] == BOXER)
			{
                if(gettime() - 1 < Abilitys[playerid][StomperPushing]) return GameTextForPlayer(playerid,"~r~ Still recovering",1000,5);
			    {
			        new Float:x,Float:y,Float:z,Float:Angle;
			        GetPlayerPos(playerid,Float:x,Float:y,Float:z);
			        GetPlayerFacingAngle(playerid,Float:Angle);
					foreach(Player,i)
					{
      					switch(GetPlayerSkin(i))
						{
       						case TEAM_ZOMBIE:
							{
                        	    if(GetDistanceBetweenPlayers(playerid,i) < 2.0)
                        	    {
							    	GetClosestPlayer(i);
									GetPlayerFacingAngle(i,Float:Angle);
									GetPlayerVelocity(i,Float:x,Float:y,Float:z);
									SetPlayerVelocity(i,Float:x+0.3,Float:y+0.3,Float:z+0.2);
									SetPlayerFacingAngle(i,Float:Angle);
									GivePlayerXP(playerid,10);
									Abilitys[playerid][StomperPushing] = gettime();
								}
							}
						}
					}
				}
			}
		}
	}
	if(PRESSED(KEY_WALK))
	{
	    if(team[playerid] == TEAM_ZOMBIE)
	    {
			if(pInfo[playerid][pZombieClass] == FIREBREATHER)
			{
                if(gettime() - 15 < Abilitys[playerid][FireBreatherCooldown]) return GameTextForPlayer(playerid,"~w~ Still recovering",1000,5);
			    {
					new Float:pz, Float:x, Float:y, Float:z;
					GetPlayerFacingAngle(playerid, pz);
					GetPlayerPos(playerid, Float:x, Float:y, Float:z);
					GetXYInFrontOfPlayer(playerid, Float:x,Float:y,12.0);
					CreateExplosion(Float:x, Float:y, Float:z,1,40);
					GivePlayerXP(playerid,50);
					Abilitys[playerid][FireBreatherCooldown] = gettime();
					SendClientMessage(playerid,COLOR_GREEN,"You took a deep breath and burned everything in your way!");
				}
			}
		}
	}
	if(PRESSED(KEY_WALK))
	{
	    if(team[playerid] == TEAM_HUMAN)
	    {
			if(pInfo[playerid][pHumanClass] == GHOST)
			{
                if(gettime() - 20 < Abilitys[playerid][FireBreatherCooldown]) return GameTextForPlayer(playerid,"~r~ Still recovering",1000,5);
			    {
					new Float:pz, Float:x, Float:y, Float:z;
					GetPlayerFacingAngle(playerid, pz);
					GetPlayerPos(playerid, Float:x, Float:y, Float:z);
					GetXYInFrontOfPlayer(playerid, Float:x,Float:y,12.0);
					CreateExplosion(Float:x, Float:y, Float:z,1,40);
					GivePlayerXP(playerid,50);
					Abilitys[playerid][FireBreatherCooldown] = gettime();
					SendClientMessage(playerid,COLOR_GREEN,"I AM GHOST RIDER BABY!!!");
				}
			}
		}
	}
	if(PRESSED(KEY_WALK))
	{
	    if(team[playerid] == TEAM_ZOMBIE)
	    {
			if(pInfo[playerid][pZombieClass] == NEMESIS)
			{
				new Float:pz, Float:x, Float:y, Float:z;
				new targetid = GetClosestPlayer(playerid);
				GetPlayerFacingAngle(playerid, pz);
				GetPlayerPos(playerid, Float:x, Float:y, Float:z);
				if(GetDistanceBetweenPlayers(playerid,targetid) < 10.0)
				{
					if(gettime() - 30 < Abilitys[playerid][NemesisCooldown]) return GameTextForPlayer(playerid,"~r~ You must wait 30 seconds",1000,5);
					{
						if(team[targetid] == TEAM_HUMAN)
						{
							smokemachine[playerid] = SetPlayerAttachedObject(playerid, 7, 2780, 2, -2.2709, 1.1330, -5.0079, -6.0999, 109.2999, -98.0999, 1.0000, 1.0000, 1.0000, 0, 0);
							SetTimerEx("NemesisSmoke",10000,0,"i",playerid);

							GivePlayerXP(playerid,100);

							Abilitys[playerid][NemesisCooldown] = gettime();

							SendClientMessage(playerid,COLOR_GREEN,"Smoke 'em baby!!!");

							SetPlayerPos(targetid,Float:x+1,Float:y+1,Float:z);
							ApplyAnimation(targetid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);
							ApplyAnimation(targetid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0); //Apply it twice!
							TogglePlayerControllable(targetid, 0);
							SetTimerEx("ClearAnims", 3000, 0, "i", targetid);

							new nemesisstring[128];
							format(nemesisstring,sizeof(nemesisstring),""chat" You have been attacked by Nemesis %s",PlayerName(playerid));
							SendClientMessage(targetid,-1,nemesisstring);
						}
					}
				}
			}
		}
	}
	if(PRESSED(KEY_WALK))
	{
	    if(team[playerid] == TEAM_ZOMBIE)
	    {
			if(pInfo[playerid][pZombieClass] == ADVANCEDMUTATED)
			{
                if(gettime() - 10 < Abilitys[playerid][AdvancedMutatedCooldown]) return GameTextForPlayer(playerid,"~w~ Still recovering",1000,5);
			    {
					foreach(Player,i)
					{
      					switch(GetPlayerSkin(i))
						{
       						case NON_IMMUNE:
							{
                        	    if(GetDistanceBetweenPlayers(playerid,i) < 6.5)
                        	    {
							    	if(pInfo[i][IsPlayerInfected] == 0)
							    	{
										if(pInfo[i][pAdminDuty] == 0)
										{
											InfectPlayerStandard(i);
											GivePlayerXP(playerid,20);
											Abilitys[playerid][AdvancedMutatedCooldown] = gettime();
										}
										else if(pInfo[i][pAdminDuty] == 1)
										{
											SendClientMessage(playerid,COLOR_RED,"That player can't be infected because is on admin duty!");
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
	if(PRESSED(KEY_WALK))
	{
	    if(team[playerid] == TEAM_ZOMBIE)
	    {
			if(pInfo[playerid][pZombieClass] == SCREAMERZOMBIE)
			{
			    if(gettime() - 9 < Abilitys[playerid][ScreamerZombieAb]) return GameTextForPlayer(playerid,"~w~ Still recovering",1000,5);
			    {
					foreach(Player,i)
					{
          				switch(GetPlayerSkin(i))
     					{
     					    case NON_IMMUNE,285:
							{
	                            if(GetDistanceBetweenPlayers(playerid,i) < 5.0)
	                            {
							    	GetClosestPlayer(i);
	                                ApplyAnimation(i, "PED", "BIKE_fall_off", 4.1, 0, 1, 1, 1, 0, 1);
	                                GameTextForPlayer(i,"~n~~n~~n~~n~~g~Screamer Attacked",3500,5);
	                                SetTimerEx("ScreamerClearAnim",1500,0,"i",i);
									GivePlayerXP(playerid,15);
									Abilitys[playerid][ScreamerZombieAb] = gettime();
								}
							}
						}
					}
				}
			}
		}
	}
	if(PRESSED(KEY_WALK))
	{
	    if(team[playerid] == TEAM_ZOMBIE)
	    {
			if(pInfo[playerid][pZombieClass] == HEAVYSCREAMER)
			{
			    if(gettime() - 12 < Abilitys[playerid][ScreamerZombieAb2]) return GameTextForPlayer(playerid,"~w~ Still recovering",1000,5);
			    {
					foreach(Player,i)
					{
          				switch(GetPlayerSkin(i))
     					{
     					    case NON_IMMUNE,163,285,296:
							{
	                            if(GetDistanceBetweenPlayers(playerid,i) < 8.0)
	                            {
	                                new Float:hp;
							    	GetClosestPlayer(i);
	                                ApplyAnimation(i, "PED", "BIKE_fall_off", 4.1, 0, 1, 1, 1, 0, 1);
	                                GameTextForPlayer(i,"~n~~n~~n~~n~~g~Advanced Screamer Attacked",3500,5);
	                                SetTimerEx("ScreamerClearAnim",1500,0,"i",i);
									GivePlayerXP(playerid,20);
									GetPlayerHealth(playerid,hp);
									Abilitys[playerid][ScreamerZombieAb2] = gettime();
									if(hp <= 80)
									{
										GetPlayerHealth(playerid,hp);
										SetPlayerHealth(playerid,hp+5);
									}
									else return SendClientMessage(playerid,-1,""chat""COL_PINK" Screamed sucessfully but wasn't able to gain HP because you have enough HP (80)");
								}
							}
						}
					}
				}
			}
		}
	}
	if(PRESSED(KEY_WALK))
	{
	    if(team[playerid] == TEAM_ZOMBIE)
	    {
			if(pInfo[playerid][pZombieClass] == ADVSCREAMER)
			{
			    if(gettime() - 12 < Abilitys[playerid][ScreamerZombieAb2]) return GameTextForPlayer(playerid,"~w~ Still recovering",1000,5);
			    {
					foreach(Player,i)
					{
          				switch(GetPlayerSkin(i))
     					{
     					    case NON_IMMUNE,285,163,33,34,201,198,123,296,240,112,50,62:
							{
	                            if(GetDistanceBetweenPlayers(playerid,i) < 8.0)
	                            {
	                                new Float:hp;
							    	GetClosestPlayer(i);
	                                ApplyAnimation(i, "PED", "BIKE_fall_off", 4.1, 0, 1, 1, 1, 0, 1);
	                                GameTextForPlayer(i,"~n~~n~~n~~n~~g~Advanced Screamer Attacked",3500,5);
	                                SetTimerEx("ScreamerClearAnim",1500,0,"i",i);
									GivePlayerXP(playerid,25);
									GetPlayerHealth(playerid,hp);
									Abilitys[playerid][ScreamerZombieAb2] = gettime();
									if(hp <= 80)
									{
										GetPlayerHealth(playerid,hp);
										SetPlayerHealth(playerid,hp+10);
									}
									else return SendClientMessage(playerid,-1,""chat""COL_PINK" Screamed sucessfully but wasn't able to gain HP because you have enough HP (80)");
								}
							}
						}
					}
				}
			}
		}
	}
   	if(PRESSED(KEY_WALK))
 	{
 	    if(team[playerid] == TEAM_HUMAN)
 	    {
  			if(pInfo[playerid][pHumanClass] == ADVANCEDMEDIC)
  			{
  			    new victimid = GetClosestPlayer(playerid);
	       		if(IsPlayerConnected(victimid))
				{
     				switch(GetPlayerSkin(victimid))
					{
         				case NON_IMMUNE:
						{
							if(GetDistanceBetweenPlayers(playerid,victimid) < 10.0)
							{
		    					if(pInfo[victimid][IsPlayerInfected] == 1)
								{
							    	CurePlayer(victimid);
									GivePlayerXP(playerid,20);
								}
								else return SendClientMessage(playerid,-1,""chat" No one around you is infected");
							}
						}
					}
				}
			}
		}
	}
	if(PRESSED(KEY_WALK))
 	{
 	    if(team[playerid] == TEAM_ZOMBIE)
 	    {
  			if(pInfo[playerid][pZombieClass] == FASTZOMBIE || pInfo[playerid][pZombieClass] == SLENDER)
  			{
  			    if(gettime() - 6 < Abilitys[playerid][HighJumpZombie]) return GameTextForPlayer(playerid,"~w~ Still recovering",1000,5);
  			    {
					new Float:x,Float:y,Float:z;
					GetPlayerVelocity(playerid,Float:x,Float:y,Float:z);
   					SetPlayerVelocity(playerid,Float:x,Float:y*1.0,Float:z+0.8* 1.2);
					Abilitys[playerid][HighJumpZombie] = gettime();
				}
			}
		}
	}

	if(PRESSED(KEY_WALK))
 	{
 	    if(team[playerid] == TEAM_HUMAN)
 	    {
  			if(pInfo[playerid][pHumanClass] == ADVANCEDSCOUT)
  			{
  			    if(gettime() - 6 < Abilitys[playerid][HighJumpScout]) return GameTextForPlayer(playerid,"~w~ Still recovering",1000,5);
  			    {
					new Float:x,Float:y,Float:z;
					GetPlayerVelocity(playerid,Float:x,Float:y,Float:z);
   					SetPlayerVelocity(playerid,Float:x,Float:y*0.9,Float:z+0.5* 0.9);
   					Abilitys[playerid][HighJumpScout] = gettime();
				}
			}
		}
	}
	if(PRESSED(KEY_WALK))
 	{
 	    if(team[playerid] == TEAM_HUMAN)
 	    {
  			if(pInfo[playerid][pHumanClass] == EXPERIENCEDSCOUT)
  			{
  			    if(gettime() - 6 < Abilitys[playerid][HighJumpScout]) return GameTextForPlayer(playerid,"~w~ Still recovering",1000,5);
  			    {
					new Float:x,Float:y,Float:z;
					GetPlayerVelocity(playerid,Float:x,Float:y,Float:z);
   					SetPlayerVelocity(playerid,Float:x,Float:y*0.9,Float:z+0.5* 0.9);
   					Abilitys[playerid][HighJumpScout] = gettime();
				}
			}
		}
	}

	if(PRESSED(KEY_WALK))
	{
		if(team[playerid] == TEAM_ZOMBIE)
		{
		    if(pInfo[playerid][pZombieClass] == WITCHZOMBIE)
		    {
  				new victimid = GetClosestPlayer(playerid);
	       		if(IsPlayerConnected(victimid))
				{
       		 		switch(GetPlayerSkin(victimid))
				    {
                        case NON_IMMUNE,70:
						{
							if(GetDistanceBetweenPlayers(playerid,victimid) < 1.5)
							{
	      						if(gettime() - 9 < Abilitys[playerid][WitchAttack]) return GameTextForPlayer(playerid,"~w~ Still recovering",4000,5);
	            				{
	                				new Float:hp,zmstring[256];
					                GetPlayerHealth(victimid,hp);
									SetPlayerHealth(victimid, hp -45);
									GameTextForPlayer(victimid,"~n~~n~~n~~n~~y~Witched attacked",3000,5);
									GivePlayerXP(playerid,15);
									format(zmstring,sizeof(zmstring), ""chat""COL_PINK" %s has been witch attacked by %s",PlayerName(victimid),PlayerName(playerid));
									SendClientMessageToAll(-1,zmstring);
									Abilitys[playerid][WitchAttack] = gettime();
								}
							}
						}
					}
				}
			}
		}
	}

	if(PRESSED(KEY_WALK))
	{
		if(team[playerid] == TEAM_ZOMBIE)
		{
		    if(pInfo[playerid][pZombieClass] == ADVANCEDWITCH)
		    {
  				new victimid = GetClosestPlayer(playerid);
	       		if(IsPlayerConnected(victimid))
				{
       		 		switch(GetPlayerSkin(victimid))
				    {
                        case NON_IMMUNE,70:
						{
							if(GetDistanceBetweenPlayers(playerid,victimid) < 1.5)
							{
	      						if(gettime() - 15 < Abilitys[playerid][WitchAttack2]) return GameTextForPlayer(playerid,"~w~ Still recovering",4000,5);
	            				{
	                				new Float:hp,zmstring[256];
					                GetPlayerHealth(victimid,hp);
									SetPlayerHealth(victimid, hp -95);
									GameTextForPlayer(victimid,"~n~~n~~n~~n~~y~Advanced Witched attacked",3000,5);
									GivePlayerXP(playerid,15);
									format(zmstring,sizeof(zmstring), ""chat""COL_PINK" %s has been advanced witch attacked by %s",PlayerName(victimid),PlayerName(playerid));
									SendClientMessageToAll(-1,zmstring);
									Abilitys[playerid][WitchAttack2] = gettime();
								}
							}
						}
					}
				}
			}
		}
	}

 	if(PRESSED(KEY_WALK))
	{
 		if(team[playerid] == TEAM_ZOMBIE)
	    {
	 		if(pInfo[playerid][pZombieClass] == STANDARDZOMBIE)
	   		{
				new victimid = GetClosestPlayer(playerid);
				if(gettime() - 7 < Abilitys[playerid][InfectionNormal]) return GameTextForPlayer(playerid,"~b~ Still recovering",4000,5);
				{
		       		if(IsPlayerConnected(victimid))
					{
      					switch(GetPlayerSkin(victimid))
						{
                            case NON_IMMUNE:
							{
								if(GetDistanceBetweenPlayers(playerid,victimid) < 2.0)
								{
								    if(pInfo[victimid][IsPlayerInfected] == 0)
								    {
										if(pInfo[victimid][pAdminDuty] == 0)
										{
											new zmstring[256];
											InfectPlayerStandard(victimid);
											format(zmstring,sizeof(zmstring), ""chat""COL_PINK" %s has been infected by %s",PlayerName(victimid),PlayerName(playerid));
											SendClientMessageToAll(-1,zmstring);
											GivePlayerXP(playerid,20);
											Abilitys[playerid][InfectionNormal] = gettime();
										}
										else if(pInfo[victimid][pAdminDuty] == 1)
										{
											SendClientMessage(playerid,COLOR_RED,"That player can't be infected because is on admin duty!");
										}
									}
									else return SendClientMessage(playerid,-1,""chat" Player is already infected!");
								}
							}
						}
					}
	            }
	        }
		 }
    }

   	if(PRESSED(KEY_WALK))
	{
 		if(team[playerid] == TEAM_ZOMBIE)
	    {
	 		if(pInfo[playerid][pZombieClass] == MUTATEDZOMBIE || pInfo[playerid][pZombieClass] == DSNIPE)
	   		{
				new victimid = GetClosestPlayer(playerid);
				if(gettime() - 7 < Abilitys[playerid][InfectionMutated]) return GameTextForPlayer(playerid,"~b~ Still ~r~recovering",4000,5);
				{
		       		if(IsPlayerConnected(victimid))
					{
      					switch(GetPlayerSkin(victimid))
						{
                            case NON_IMMUNE:
							{
								if(GetDistanceBetweenPlayers(playerid,victimid) < 1.7)
								{
				    				if(pInfo[victimid][IsPlayerInfected] == 0)
								    {
										if(pInfo[victimid][pAdminDuty] == 0)
										{
											new zmstring[256];
											InfectPlayerMutated(victimid);
											format(zmstring,sizeof(zmstring), ""chat""COL_PINK" %s has been infected by %s",PlayerName(victimid),PlayerName(playerid));
											SendClientMessageToAll(-1,zmstring);
											GivePlayerXP(playerid,20);
											Abilitys[playerid][InfectionMutated] = gettime();
										}
										else if(pInfo[victimid][pAdminDuty] == 1)
										{
											SendClientMessage(playerid,-1,""chat" That player is on admin duty");
										}
									}
									else return SendClientMessage(playerid,-1,""chat" Player is already infected!");
				                }
							}
						}
					}
	            }
	        }
		 }
    }

   	if(PRESSED(KEY_WALK))
	{
 		if(team[playerid] == TEAM_ZOMBIE)
	    {
	 		if(pInfo[playerid][pZombieClass] == FLESHEATER)
	   		{
				new victimid = GetClosestPlayer(playerid);
				if(gettime() - 18 < Abilitys[playerid][InfectionFleshEater]) return GameTextForPlayer(playerid,"~b~ Still recovering",4000,5);
				{
		       		if(IsPlayerConnected(victimid))
					{
      					switch(GetPlayerSkin(victimid))
						{
                            case NON_IMMUNE,285,70:
							{
								if(GetDistanceBetweenPlayers(playerid,victimid) < 1.7)
								{
				    				if(pInfo[victimid][IsPlayerInfected] == 0)
								    {
										if(pInfo[victimid][pAdminDuty] == 0)
										{
											new zmstring[256];
											InfectPlayerFleshEater(victimid);
											format(zmstring,sizeof(zmstring), ""chat""COL_PINK" %s has been bitten and infected by %s",PlayerName(victimid),PlayerName(playerid));
											SendClientMessageToAll(-1,zmstring);
											GivePlayerXP(playerid,10);
											Abilitys[playerid][InfectionFleshEater] = gettime();
										}
										else if(pInfo[victimid][pAdminDuty] == 1)
										{
											SendClientMessage(playerid,-1,""chat" That player is on admin duty");
										}
									}
									else return SendClientMessage(playerid,-1,""chat" Player is already infected!");
				                }
							}
						}
					}
	            }
	        }
		 }
    }
				
	if(PRESSED(KEY_WALK))
	{
		if(team[playerid] == TEAM_ZOMBIE)
	    {
			if(pInfo[playerid][pZombieClass] == ADVANCEDBOOMER)
			{
			    if(IsPlayerInRangeOfPoint(playerid,8.0,Map[ZombieSpawnX],Map[ZombieSpawnY],Map[ZombieSpawnZ]))
			    {
			        GameTextForPlayer(playerid,"~r~Cannot explode near Zombie spawn!",4000,5);
				}
				else
				{
				    new Float:x,Float:y,Float:z;
			        GetPlayerPos(playerid,Float:x,Float:y,Float:z);
			        SetPlayerHealth(playerid,0.0);
			        CreateExplosion(Float:x,Float:y,Float:z,0,6.0);
			        foreach(Player,i)
					{
			            GetClosestPlayer(i);
			            if(IsPlayerConnected(i))
						{
		                 	switch(GetPlayerSkin(i))
			                {
		                        case NON_IMMUNE:
								{
				                    if(IsPlayerInRangeOfPoint(i,7.0,Float:x,Float:y,Float:z))
									{
										if(pInfo[i][IsPlayerInfected] == 0)
										{
											if(pInfo[i][pAdminDuty] == 0)
											{
												InfectPlayerStandard(i);
											}
										}
				                    }
								}
			                }
			            }
			        }
				}
		    }
		}
	}

	return 1;
}

forward ClearAnims(playerid);
public ClearAnims(playerid) { return ClearAnimations(playerid), TogglePlayerControllable(playerid, 1); }

public OnPlayerStateChange(playerid, newstate, oldstate)
{
    if(newstate == PLAYER_STATE_DRIVER || newstate == PLAYER_STATE_PASSENGER)// If the player's state changes to a vehicle state we'll have to spec the vehicle.
    {
        if(IsBeingSpeced[playerid] == 1)//If the player being spectated, enters a vehicle, then let the spectator spectate the vehicle.
        {
            foreach(Player,i)
            {
                if(spectatorid[i] == playerid)
                {
                    PlayerSpectateVehicle(i, GetPlayerVehicleID(playerid));// Letting the spectator, spectate the vehicle of the player being spectated (I hope you understand this xD)
                }
            }
        }
    }
    if(newstate == PLAYER_STATE_ONFOOT)
    {
        if(IsBeingSpeced[playerid] == 1)//If the player being spectated, exists a vehicle, then let the spectator spectate the player.
        {
            foreach(Player,i)
            {
                if(spectatorid[i] == playerid)
                {
                    PlayerSpectatePlayer(i, playerid);// Letting the spectator, spectate the player who exited the vehicle.
                }
            }
        }
    }
    return 1;
}

public OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid)//This is called when a player's interior is changed.
{
    if(IsBeingSpeced[playerid] == 1)//If the player being spectated, changes an interior, then update the interior and virtualword for the spectator.
    {
        foreach(Player,i)
        {
            if(spectatorid[i] == playerid)
            {
                SetPlayerInterior(i,GetPlayerInterior(playerid));
                SetPlayerVirtualWorld(i,GetPlayerVirtualWorld(playerid));
            }
        }
    }
    return 1;
}

public OnVehicleMod(playerid, vehicleid, componentid)
{
	new Admin[24] = "Anti-cheat";
	new reason3[128] = "Vehicle Modding";
	BanPlayer(playerid,reason3,Admin);
    return 0;
}

public OnPlayerUpdate(playerid)
{
	if(IsSpecing[playerid] == 0)
	{
		if(Map[AllowWater] == 0)
		{
			if(IsPlayerInWater(playerid))
			{
				SetPlayerHealth(playerid,0.0);
			}
		}
	}

	if(pInfo[playerid][pAdminDuty] == 1)
	{
		SetPlayerHealth(playerid,99999);
		SetPlayerColor(playerid,COLOR_RED);
	}

	if(pInfo[playerid][Frozen] == 1)
	{
		SetPlayerHealth(playerid,99999);
		SetPlayerColor(playerid,COLOR_WHITE);
	}

	return 1;
}
public OnPlayerCommandPerformed(playerid, cmdtext[], success)
{
	if(!success)
	{
		PlayerPlaySound(playerid,1054,0.0,0.0,0.0),
		SendClientMessage(playerid,-1,""chat" {FF0000}[Error] {FFFFFF}Dude its incorrect cmd! Plz try out /help or /cmds");
	}

	if(pInfo[playerid][pLogged] == 0 && pInfo[playerid][pAdminLevel] >= 1)
	{
		SendClientMessage(playerid,COLOR_RED,"You must be logged in.");
		Kick(playerid);
	}
	
	if(pInfo[playerid][pLogged] == 0)
	{
		SendClientMessage(playerid,-1,""chat" Damn You hacker! Cant you hack? LOL");
		Kick(playerid);
	}
	return 1;
}

CMD:skip(playerid)
{
	if(pInfo[playerid][pLogged] == 1)
	{
		if(pInfo[playerid][pAdminLevel] >= 5)
		{
			time = 5;
		}
	}
    else if(pInfo[playerid][pLogged] == 0)
	{
		SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" Nice try u fucking fag gay!What do you think you are? Hacker?");
		printf("%s has been kicked for trying to use a command without being logged in!", PlayerName(playerid));
		Kick(playerid);
	}
	return 1;
}

CMD:rbug(playerid) return ClearAnimations(playerid);

CMD:test(playerid) return SetPlayerSpecialAction(playerid,ENDCHAT_01);

CMD:gotoevac(playerid) return SetPlayerPos(playerid,Map[CPx],Map[CPy],Map[CPz]);

CMD:rwarn(playerid,params[])
{
	if(pInfo[playerid][pAdminLevel] >= 3 || IsPlayerAdmin(playerid))
	{
	    new targetid,reason[105],string[256];
	    if(sscanf(params, "us[105]", targetid, reason)) return SendClientMessage(playerid,-1,""chat" /rwarn [playerid] [reason]");
	    if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid,-1,""chat" Player is not online");

		new sentstring[128];

        pInfo[targetid][pWarnings]--;

	    format(string,sizeof(string), "%s %s has removed your warning\nReason: %s\nRemoved Warning Number: %i",GetAdminName(playerid),PlayerName(playerid), reason, pInfo[targetid][pWarnings]);
		ShowPlayerDialog(targetid,DIALOG_WARN,DIALOG_STYLE_MSGBOX,"Good News",string,"Ok, Dude","");
		format(sentstring,sizeof(sentstring), ""chat""COL_LIGHTBLUE" %s %s has removed warning of %s Reason: %s (%i / 3)",GetAdminName(playerid),PlayerName(playerid),PlayerName(targetid),reason,pInfo[targetid][pWarnings]);
		SendClientMessageToAll(-1,sentstring);

		if(pInfo[targetid][pWarnings] >= 100)
		{
			format(string, sizeof(string), ""chat""COL_LIGHTBLUE" %s %s has kicked %s [Reason: %s][100 Warnings EXCEEDED]",GetAdminName(playerid),PlayerName(playerid),PlayerName(targetid),reason);
			SendClientMessageToAll(-1,string);
			Kick(targetid);
		}
	}
	else {
		SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" You do not have the right admin permissions for this command!");
	}
	return 1;
}

CMD:iwarn(playerid,params[])
{
	if(pInfo[playerid][pAdminLevel] >= 7 || IsPlayerAdmin(playerid))
	{
	    new targetid,reason[105],string[256];
	    if(sscanf(params, "us[105]", targetid, reason)) return SendClientMessage(playerid,-1,""chat" /iwarn [playerid] [reason]");
	    if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid,-1,""chat" Player is not online");

		new sentstring[128];

        pInfo[targetid][pWarnings]++;

	    format(string,sizeof(string), "i [BOT] has warned you\nReason: %s\nWarning Number: %i",GetAdminName(playerid),PlayerName(playerid), reason, pInfo[targetid][pWarnings]);
		ShowPlayerDialog(targetid,DIALOG_WARN,DIALOG_STYLE_MSGBOX,"iBot Warning",string,"Ok, iBot","");
		format(sentstring,sizeof(sentstring), ""chat""COL_LIGHTBLUE" i Bot has warned %s Reason: %s (%i / 3)",GetAdminName(playerid),PlayerName(playerid),PlayerName(targetid),reason,pInfo[targetid][pWarnings]);
		SendClientMessageToAll(-1,sentstring);

		if(pInfo[targetid][pWarnings] >= 100)
		{
			format(string, sizeof(string), ""chat""COL_LIGHTBLUE" %s %s has kicked %s [Reason: %s][100 Warnings EXCEEDED]",GetAdminName(playerid),PlayerName(playerid),PlayerName(targetid),reason);
			SendClientMessageToAll(-1,string);
			Kick(targetid);
		}
	}
	else {
		SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" You do not have the right admin permissions for this command!");
	}
	return 1;
}
CMD:more(playerid)
{
	if(pInfo[playerid][pLogged] == 1)
	{
		if(pInfo[playerid][pAdminLevel] >= 5)
		{
			time = 500;
		}
	}
    else if(pInfo[playerid][pLogged] == 0)
	{
		SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" Nice try u fucking fag gay!");
		printf("%s has been kicked for trying to use a command without being logged in!", PlayerName(playerid));
		Kick(playerid);
	}
	return 1;
}

CMD:etcccctestcmd(playerid)
{
   SetPlayerAttachedObject( playerid, 0, 18693, 5, 1.983503, 1.558882, -0.129482, 86.705787, 308.978118, 268.198822, 1.500000, 1.500000, 1.500000 );
   SetPlayerAttachedObject( playerid, 1, 18693, 6, 1.983503, 1.558882, -0.129482, 86.705787, 308.978118, 268.198822, 1.500000, 1.500000, 1.500000 );
   SetPlayerAttachedObject( playerid, 2, 18703, 6, 1.983503, 1.558882, -0.129482, 86.705787, 308.978118, 268.198822, 1.500000, 1.500000, 1.500000 );
   SetPlayerAttachedObject( playerid, 3, 18703, 5, 1.983503, 1.558882, -0.129482, 86.705787, 308.978118, 268.198822, 1.500000, 1.500000, 1.500000 );
   SetPlayerAttachedObject( playerid,1,18978,2,0.065999,0.012999,0.000000,16.099998,81.499969,81.000000,1.000000,1.000000,1.000000);
   return 1;
}

CMD:robj(playerid)///need to be replaced, with all object remover! *NOTES*
{
    for ( new i = 0; i < 5; i++ )
    if ( IsPlayerAttachedObjectSlotUsed( playerid, i ) )
    RemovePlayerAttachedObject( playerid, i );
    return 1;
}

CMD:arestart(playerid)////LoadFilterScript(filename[])
{
	if(pInfo[playerid][pLogged] == 1)
	{
		if(pInfo[playerid][pAdminLevel] >= 2)
		{
			SendRconCommand("gmx");
		}
		else SendClientMessage(playerid,COLOR_RED,"You need to be lvl 2 admin to use this command!");
	}
    else if(pInfo[playerid][pLogged] == 0)
	{
		SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" Nice try u fucking fag gay!");
		printf("%s has been kicked for trying to use a command without being logged in!", PlayerName(playerid));
		Kick(playerid);
	}
	return 1;
}

CMD:spec(playerid,params[])
{
	if(pInfo[playerid][pLogged] == 1)
	{
		if(pInfo[playerid][pAdminLevel] >= 1)
		{
			new id;// This will hold the ID of the player you are going to be spectating.
			if(sscanf(params,"u", id))return SendClientMessage(playerid, Grey, "Usage: /spec [id]");// Now this is where we use sscanf to check if the params were filled, if not we'll ask you to fill them
			if(id == playerid)return SendClientMessage(playerid,Grey,"You cannot spec yourself.");// Just making sure.
			if(id == INVALID_PLAYER_ID)return SendClientMessage(playerid, Grey, "Player not found!");// This is to ensure that you don't fill the param with an invalid player id.
			GetPlayerPos(playerid,SpecX[playerid],SpecY[playerid],SpecZ[playerid]);// This is getting and saving the player's position in a variable so they'll respawn at the same place they typed '/spec'
			Inter[playerid] = GetPlayerInterior(playerid);// Getting and saving the interior.
			vWorld[playerid] = GetPlayerVirtualWorld(playerid);//Getting and saving the virtual world.
			TogglePlayerSpectating(playerid, true);// Now before we use any of the 3 functions listed above, we need to use this one. It turns the spectating mode on.
			if(IsPlayerInAnyVehicle(id))//Checking if the player is in a vehicle.
			{
				if(GetPlayerInterior(id) > 0)//If the player's interior is more than 0 (the default) then.....
				{
					SetPlayerInterior(playerid,GetPlayerInterior(id));//.....set the spectator's interior to that of the player being spectated.
				}
				if(GetPlayerVirtualWorld(id) > 0)//If the player's virtual world is more than 0 (the default) then.....
				{
					SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(id));//.....set the spectator's virtual world to that of the player being spectated.
				}
				PlayerSpectateVehicle(playerid,GetPlayerVehicleID(id));// Now remember we checked if the player is in a vehicle, well if they're in a vehicle then we'll spec the vehicle.
			}
			else// If they're not in a vehicle, then we'll spec the player.
			{
				if(GetPlayerInterior(id) > 0)
				{
					SetPlayerInterior(playerid,GetPlayerInterior(id));
				}
				if(GetPlayerVirtualWorld(id) > 0)
				{
					SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(id));
				}
				PlayerSpectatePlayer(playerid,id);// Letting the spectator spec the person and not a vehicle.
			}
			GetPlayerName(id, Name, sizeof(Name));//Getting the name of the player being spectated.
			format(String, sizeof(String),"You have started to spectate %s.",Name);// Formatting a string to send to the spectator.
			SendClientMessage(playerid,0x0080C0FF,String);//Sending the formatted message to the spectator.
			IsSpecing[playerid] = 1;// Just saying that the spectator has begun to spectate someone.
			IsBeingSpeced[id] = 1;// Just saying that a player is being spectated (You'll see where this comes in)
			spectatorid[playerid] = id;// Saving the spectator's id into this variable.
		}
			else SendClientMessage(playerid,-1,""chat" You must be on admin duty before you spectate! /aduty");
	}
    else if(pInfo[playerid][pLogged] == 0)
	{
		SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" Nice try u fucking fag gay!");
		printf("%s has been kicked for trying to use a command without being logged in!", PlayerName(playerid));
		Kick(playerid);
	}
	return 1;
}

CMD:specoff(playerid, params[])
{
	if(pInfo[playerid][pLogged] == 1)
	{
		if(pInfo[playerid][pAdminLevel] >= 1)
		{
			if(IsSpecing[playerid] == 0)return SendClientMessage(playerid,Grey,"You are not spectating anyone.");
			TogglePlayerSpectating(playerid, 0);//Toggling spectate mode, off. Note: Once this is called, the player will be spawned, there we'll need to reset their positions, virtual world and interior to where they typed '/spec'
			if(team[playerid] == TEAM_HUMAN)
			{
				HumanSetup(playerid);
				SpawnPlayer(playerid);
			}
			else if(team[playerid] == TEAM_ZOMBIE)
			{
				ZombieSetup(playerid);
				SpawnPlayer(playerid);
			}
		}
	}
    else if(pInfo[playerid][pLogged] == 0)
	{
		SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" Nice try u fucking fag gay!");
		printf("%s has been kicked for trying to use a command without being logged in!", PlayerName(playerid));
		Kick(playerid);
	}
	return 1;
}

CMD:rename(playerid,params[])
{
	if(pInfo[playerid][pLogged] == 1)
	{
		if(pInfo[playerid][pAdminLevel] >= 2)
		{
			new oldname[128], newname[128], string[90], targetid;
			if(sscanf(params,"s[128]s[128]", oldname, newname)) return SendClientMessage(playerid,COLOR_YELLOW, "Correct Usage: /rename [OldName][New name]");
			new filestring[128];
			new filestring2[128];
			new filestring3[128];
			format(filestring2, sizeof(filestring2), "/ZMA/Users/%s.ini", oldname);
			if(!fexist(filestring2)) return SendClientMessage(playerid, COLOR_YELLOW, "That account name doesn't exist!");
			format(filestring, sizeof(filestring), "/ZMA/Users/%s.ini", newname);
			if(fexist(filestring)) return SendClientMessage(playerid, COLOR_YELLOW, "The new name you've chosen is already taken");
			frename(filestring2, filestring);
			format(filestring3, sizeof(filestring3), "/ZMA/Users/%s.ini", oldname);
			new INI:File = INI_Open(filestring);
			INI_SetTag(File, "data");
			INI_WriteString(File,"OldName", oldname);
			INI_Close(File);
			if(!fremove(filestring3))fremove(filestring3);
			new renamedstring[128], cstring[128];
			format(string, sizeof(string), "You have successfully renamed %s's account to %s" ,oldname, newname);
			format(renamedstring, sizeof(renamedstring), "%s has renamed %s's account to %s" ,GetAdminName(playerid) ,oldname, newname);
			format(cstring, sizeof(cstring), "Your name was changed from %s to %s" ,oldname, newname);
			SendClientMessage(playerid, COLOR_BLUE, string);
			SendClientMessage(targetid, COLOR_BLUE, cstring);
			SendClientMessageToAll(-1,renamedstring);
			printf("%s %s has renamed %s's account to %s" ,GetAdminName(playerid),PlayerName(playerid) ,oldname, newname);
			pInfo[targetid][pRenamed] = 1;
		}
	}
    else if(pInfo[playerid][pLogged] == 0)
	{
		SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" Nice try u fucking fag gay!");
		printf("%s has been kicked for trying to use a command without being logged in!", PlayerName(playerid));
		Kick(playerid);
	}
	return 1;
}

CMD:aduty(playerid)
{
	if(pInfo[playerid][pLogged] == 1)
	{
		if(pInfo[playerid][pAdminLevel] >= 1)
		{
			if(pInfo[playerid][pAdminDuty] == 0)
			{
			pInfo[playerid][pAdminDuty] = 1;

			new adutyonstring[128];
			format(adutyonstring, sizeof(adutyonstring), "%s is now on admin duty" ,PlayerName(playerid));
			SendClientMessageToAll(-1,adutyonstring);
			SetPlayerColor(playerid,COLOR_RED);
			SetPlayerHealth(playerid,999999.0);
			SendClientMessage(playerid,COLOR_RED,"Remember to /aduty when you play as regular player.");
			}
			else
			{
				if(pInfo[playerid][pAdminDuty] == 1)
				{
				pInfo[playerid][pAdminDuty] = 0;
				new adutyoffstring[128];
				format(adutyoffstring, sizeof(adutyoffstring), "%s is now off admin duty" ,PlayerName(playerid));
				SendClientMessageToAll(-1,adutyoffstring);

				if(team[playerid] == TEAM_ZOMBIE)
				{
					SetPlayerColor(playerid,COLOR_ZOMBIE);
				}
				if(team[playerid] == TEAM_HUMAN)
				{
					SetPlayerColor(playerid,COLOR_HUMAN);
				}
				SetPlayerHealth(playerid,100);
				}
			}
		}
	}
    else if(pInfo[playerid][pLogged] == 0)
	{
		SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" Nice try u fucking fag gay!");
		printf("%s has been kicked for trying to use a command without being logged in!", PlayerName(playerid));
		Kick(playerid);
	}
	return 1;
}

CMD:agun(playerid, params[])
{
	if(pInfo[playerid][pLogged] == 1)
	{
		new id, gun, ammo;
		if(pInfo[playerid][pAdminLevel] >= 2)
		{
			if(sscanf(params,"uii", id, gun, ammo)) return SendClientMessage(playerid, -1,"USAGE: /givegun [playerid/partofname] [gunid] [ammo]");
			if(gun > 47 || gun < 1) return SendClientMessage(playerid, -1,"GUN ID'S: 1-47");
			if(ammo > 9999 || ammo < 1) return SendClientMessage(playerid, -1,"Ammo 1-9999");
			GivePlayerWeapon(id, gun, ammo);
		}
	}
    else if(pInfo[playerid][pLogged] == 0)
	{
		SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" Nice try u fucking fag gay!");
		printf("%s has been kicked for trying to use a command without being logged in!", PlayerName(playerid));
		Kick(playerid);
	}
	return 1;
}

CMD:asz(playerid, params[])
{
	if(pInfo[playerid][pLogged] == 1)
	{
		if(pInfo[playerid][gMember] -= 1)
		if(pInfo[playerid][gLeader] -= 1)
		{
          SetPlayerSkin(playerid,108);
          GivePlayerWeapon(playerid,31,500);
          GivePlayerWeapon(playerid,29,500);
          GivePlayerWeapon(playerid,34,100);
		}
	}
    else if(pInfo[playerid][pLogged] == 0)
	{
		SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" Nice try u fucking fag gay!");
		printf("%s has been kicked for trying to use a command without being logged in!", PlayerName(playerid));
		Kick(playerid);
	}
	return 1;
}

CMD:aheli(playerid)
{
	if(pInfo[playerid][pLogged] == 1)
	{
		if(pInfo[playerid][pAdminLevel] >= 1)
		{
			new Float: x, Float: y, Float: z, Float: r, vehicle;
			GetPlayerPos(playerid,x,y,z);
			GetPlayerFacingAngle(playerid,r);
			vehicle = CreateVehicle(501,x,y,z,r,1,1,300);
			PutPlayerInVehicle(playerid,vehicle,0);
			SetVehicleHealth(vehicle, 999999);
		}
	}
    else if(pInfo[playerid][pLogged] == 0)
	{
		SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" Nice try u fucking fag gay!");
		printf("%s has been kicked for trying to use a command without being logged in!", PlayerName(playerid));
		Kick(playerid);
	}
	return 1;
}

CMD:voff(playerid)
{
	if(pInfo[playerid][pLogged] == 1)
	{
		if(pInfo[playerid][pAdminLevel] >= 1)
		{
			new currentveh;
			currentveh = GetPlayerVehicleID(playerid);
			DestroyVehicle(currentveh);
		}
	}
    else if(pInfo[playerid][pLogged] == 0)
	{
		SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" Nice try u fucking fag gay!What do u think u r?Hacker");
		printf("%s has been kicked for trying to use a command without being logged in!", PlayerName(playerid));
		Kick(playerid);
	}
	return 1;
}

CMD:freeze(playerid,params[])
{
	if(pInfo[playerid][pLogged] == 1)
	{
		if(pInfo[playerid][pAdminLevel] >= 1)
		{
				new Target; //defines the playerid we wanna freeze
				if(sscanf(params, "u", Target)) SendClientMessage(playerid, COLOR_LIGHTBLUE, "USAGE: /freeze [playerid]"); //tell sscanf again if the parameters/syntax is wrong to return a special message
				if(!IsPlayerConnected(Target)) //if the ID doesn't exist, return an error-message
					return SendClientMessage(playerid, COLOR_GREY, "ERROR:Player is not connected!");
				if(!sscanf(params, "u", Target))
				{
					if(pInfo[Target][pAdminLevel] > pInfo[playerid][pAdminLevel]) return SendClientMessage(playerid,COLOR_RED,"ERROR: You cant perform this on Admins that are higher than your level!"); // if the player you're performing this command on has a higher level as you, return a message, you ain't able to freeze him
					new tname[MAX_PLAYER_NAME]; //define the new target-name of the playerid
					GetPlayerName(Target,tname,sizeof(tname)); //get the playername with this function
					new pname[MAX_PLAYER_NAME]; //define the adminname
					GetPlayerName(playerid,pname,sizeof(pname)); //get the adminname with this function
					new tstring[128]; //define the string for the player (victim)
					new pstring[128];// define the string for the admin which is performing
					format(tstring,sizeof(tstring),"You have been frozen by administrator %s! You cant move!",pname); //this is formatting the player-string, while it's also getting the adminname
					format(pstring,sizeof(pstring),"You have frozen player %s(%d)!",tname,Target); //this is formatting the adminname-string, while it's also getting the playername and his ID(target)
					SendClientMessage(Target,COLOR_RED,tstring);//sends the message to the victim
					SendClientMessage(playerid,COLOR_RED,pstring);//sends the message to the admin
					TogglePlayerControllable(Target,0); //with that function, the player won't be able to mov, while we're using the variable "Target" as the playerid
					pInfo[Target][Frozen] = 1;//IMPORTANT:we're getting the variable "[frozen]" out of the enum, and set it's value to "1', the compiler knows now that the player is frozen
				}

		}
		else return SendClientMessage(playerid,COLOR_RED,"ERROR: You must be level 1 to use this command!");
	}
    else if(pInfo[playerid][pLogged] == 0)
	{
		SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" Nice try u fucking fag gay!");
		printf("%s has been kicked for trying to use a command without being logged in!", PlayerName(playerid));
		Kick(playerid);
	}
	return 1;
}

CMD:unfreeze(playerid,params[])
{
    if(pInfo[playerid][pAdminLevel] >= 1)
    {
        new Target; //defines the playerid we wanna freeze
        if(sscanf(params, "u", Target)) SendClientMessage(playerid, COLOR_LIGHTBLUE, "USAGE: /freeze [playerid]"); //tell sscanf again if the parameters/syntax is wrong to return a special message
        if(!IsPlayerConnected(Target)) //if the ID doesn't exist, return an error-message
            return SendClientMessage(playerid, COLOR_GREY, "ERROR:Player is not connected!");
        if(!sscanf(params, "u", Target))
        {
            if(pInfo[Target][pAdminLevel] > pInfo[playerid][pAdminLevel]) return SendClientMessage(playerid,COLOR_RED,"ERROR: You cant perform this on Admins that are higher than your level!"); // if the player you're performing this command on has a higher level as you, return a message, you ain't able to freeze him
			new tname[MAX_PLAYER_NAME]; //define the new target-name of the playerid
            GetPlayerName(Target,tname,sizeof(tname)); //get the playername with this function
            new pname[MAX_PLAYER_NAME]; //define the adminname
            GetPlayerName(playerid,pname,sizeof(pname)); //get the adminname with this function
            new tstring[128]; //define the string for the player (victim)
            new pstring[128];// define the string for the admin which is performing
            new astring[128];//define the string for all the players which are online
            format(tstring,sizeof(tstring),"You have been unfrozen by administrator %s! You can move!",pname); //this is formatting the player-string, while it's also getting the adminname
            format(pstring,sizeof(pstring),"You have unfrozen player %s(%d)!",tname,Target); //this is formatting the adminname-string, while it's also getting the playername and his ID(target)
            format(astring,sizeof(astring),"Administrator %s has unfrozen %s!",pname,tname); //this is formatting the all-string, while it's sending this message to everybody and is getting admin- and playername
            SendClientMessage(Target,COLOR_RED,tstring);//sends the message to the victim
            SendClientMessage(playerid,COLOR_RED,pstring);//sends the message to the admin
            SendClientMessageToAll(COLOR_RED,astring);//sends the message to everybody
            TogglePlayerControllable(Target,1); //with that function, the player won't be able to mov, while we're using the variable "Target" as the playerid
            pInfo[Target][Frozen] = 0;//IMPORTANT:we're getting the variable "[frozen]" out of the enum, and set it's value to "1', the compiler knows now that the player is frozen
		}
		if(team[Target] == TEAM_HUMAN)
		{
			SetPlayerHealth(Target, 100);
			SetPlayerColor(Target,COLOR_HUMAN);
		}

		if(team[Target] == TEAM_ZOMBIE)
		{
			if(pInfo[Target][pZombieClass] == BOOMERZOMBIE)
			{
				SetPlayerHealth(Target, 25);
				SetPlayerColor(Target,COLOR_ZOMBIE);
			}
			else
			{
				SetPlayerHealth(Target, 100);
				SetPlayerColor(Target,COLOR_ZOMBIE);
			}
		}
    }

// if he doesn't have permissions, return that message!
    else if(pInfo[playerid][pLogged] == 0)
	{
		SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" Nice try u fucking fag gay!");
		printf("%s has been kicked for trying to use a command without being logged in!", PlayerName(playerid));
		Kick(playerid);
	}
	return 1;
}
CMD:fakekills(playerid, params[])
{
    if(pInfo[playerid][pAdminLevel] >= 1)
    {
		new targetid;
		if(sscanf(params, "u", targetid)) return SendClientMessage(playerid,-1,""chat" /fakekills [playerid]");
	 	if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid,-1,""chat" Player is not online");
	 	{
			new string[180];
			format(string,sizeof(string),"	{37DB45}Viewing player stats: %s{FFFFFF}	\nPossible FakeKills: %i",PlayerName(targetid),pInfo[targetid][pFakeKills]);

			ShowPlayerDialog(playerid,1888,DIALOG_STYLE_MSGBOX,"Checking for Fake Kills",string,"Close","");
		}
	}

	return 1;
}

CMD:checkhp(playerid, params[])
{
    if(pInfo[playerid][pAdminLevel] >= 1)
    {
		new targetid;
		if(sscanf(params, "u", targetid)) return SendClientMessage(playerid,-1,""chat" /checkhp [playerid]");
	 	if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid,-1,""chat" Player is not online");
	 	{
			new string[180], Float:HP;
			GetPlayerHealth(targetid,HP);

			format(string,sizeof(string),"Player %s has %.2f",PlayerName(targetid),HP);
			SendClientMessage(playerid, COLOR_GREEN, string);
		}
	}

	return 1;
}

CMD:sethealth(playerid, params[])
{
 	if(pInfo[playerid][pLogged] == 1)
	{
		new id, health;
		if(pInfo[playerid][pAdminLevel] >= 2)
		{
			if(sscanf(params,"uii", id, health)) return SendClientMessage(playerid, -1,"USAGE: /sethealth [ID / part of name] [Health from 1 to 100]");
			if(health > 100 || health < 1) return SendClientMessage(playerid, -1,"Set the health from 1 to 100, NOT MORE nor LESS");
			SetPlayerHealth(id, health);
		}
	}
    else if(pInfo[playerid][pLogged] == 0)
	{
		SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" Nice try u fucking fag gay!");
		printf("%s has been kicked for trying to use a command without being logged in!", PlayerName(playerid));
		Kick(playerid);
	}

	return 1;
}

CMD:setarmour(playerid, params[])
{
 	if(pInfo[playerid][pLogged] == 1)
	{
		new id, armour;
		if(pInfo[playerid][pAdminLevel] >= 2)
		{
			if(sscanf(params,"uii", id, armour)) return SendClientMessage(playerid, -1,"USAGE: /setarmour[ID / part of name] [Armour( from 1 to 95]");
			if(armour > 95 || armour < 1) return SendClientMessage(playerid, -1,"Set the armour from 1 to 100, NOT MORE nor LESS");
			SetPlayerArmour(id, armour);
		}
	}
    else if(pInfo[playerid][pLogged] == 0)
	{
		SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" Nice try u fucking fag gay!");
		printf("%s has been kicked for trying to use a command without being logged in!", PlayerName(playerid));
		Kick(playerid);
	}

	return 1;
}

CMD:text(playerid, params[])
{
    if(pInfo[playerid][pLogged] == 1)
    {
		new filestring[128], text[50];
		format(filestring, sizeof(filestring), "%s", text);
		new Text3D:label = Create3DTextLabel("text", 0x008080FF, 30.0, 40.0, 50.0, 40.0, 0);
		Attach3DTextLabelToPlayer(label, playerid, 0.0, 0.0, 0.3);
	}

	return 1;
}

CMD:textoff(playerid, params[])
{
    if(pInfo[playerid][pLogged] == 1)
    {

	}

	return 1;
}

CMD:cw(playerid, params[])
{
    if(pInfo[playerid][pAdminLevel] >= 1)
    {
        new count = 0;
        new ammo, weaponid, weapon[24], string[128], id;
        if(!sscanf(params, "u", id))
        {
                for (new c = 0; c < 13; c++)
                {
                    GetPlayerWeaponData(id, c, weaponid, ammo);
                    if (weaponid != 0 && ammo != 0)
                    {
                        count++;
                    }
                }
                SendClientMessage(playerid, COLOR_ORANGE, "||=============WEAPONS AND AMMO===========||");
                if(count > 0)
                {
                    for (new c = 0; c < 13; c++)
                    {
                        GetPlayerWeaponData(id, c, weaponid, ammo);
                        if (weaponid != 0 && ammo != 0)
                        {
                            GetWeaponName(weaponid, weapon, 24);
                            format(string, sizeof(string), "Weapons: %s  Ammo: %d", weapon, ammo);
                            SendClientMessage(playerid, COLOR_GREEN, string);
                        }
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "This player has no weapons!");
                }
                return 1;
        }
        else return SendClientMessage(playerid, COLOR_GREY, "USAGE: /cw [ID]");
    }
    else return SendClientMessage(playerid, COLOR_GREY, "You are not allowed to do this");
}

CMD:buy(playerid)
{
	if(team[playerid] == TEAM_HUMAN)
	{
 		ShowCoinDialog(playerid);
	}
	else return SendClientMessage(playerid,-1,""chat""COL_LGREEN" You must be human to use this command!");
	return 1;
}
CMD:vipmenu(playerid)
{
	if(pInfo[playerid][pHumanClass] == SMOKEUP) return SCM(playerid, -1,"{FF0000}You cant use /vipmenu with this class !");
	if(pInfo[playerid][pHumanClass] == BOMBER) return SCM(playerid, -1,"{FF0000}You cant use /vipmenu with this class !");

	else if(pInfo[playerid][pVipLevel] >= 1)
	{
	    new str[300];
	    strcat(str,"{2B547E}Vip Unlimited Ammo (LVL1+)\n{2B547E}Vip Weapons (LVL1+)\n{2B547E}Vip Classes (LVL3+)\n{2B547E}Enable Kick Back (LVL3+)\n{2B547E}Disable Kick Back (LVL3+)\n\
		{2B547E}Vip S.W.A.T Armour Object (LVL2+)\n{2B547E}Vip Name Flash (LVL 4+)\n{2B547E}Disable Vip Name Flash (LVL 4+)\n{2B547E}Vip Armour (LVL 4+)\n{2B547E}Vip Invisible (LVL5+)");
	    ShowPlayerDialog(playerid,DIALOG_VIP,DIALOG_STYLE_LIST,"Vip Dialog",str,"Select","Close");
	}
	else return SendClientMessage(playerid,-1,""chat""COL_LGREEN" You need atleast vip package one to use this command!");
	return 1;
}

CMD:ranks(playerid)
{
	new str[800];
	strcat(str,"10 Kills - Rank 1\n50 Kills - Rank 2\n100 Kills - Rank 3\n150 Kills - Rank 4\n200 Kills - Rank 5\n250 Kills - Rank 6\n300 Kills - Rank 7\n\
	350 Kills - Rank 8\n400 Kills - Rank 9\n450 Kills - Rank 10\n500 Kills - Rank 11\n550 Kills - Rank 12\n600 Kills - Rank 13\n650 Kills - Rank 14\n\
	700 Kills - Rank 15\n750 Kills - Rank 16\n800 Kills - Rank 17\n850 Kills - Rank 18\n900 Kills - Rank 19\n950 Kills - Rank 20\n");

	strcat(str,"1000 Kills - Rank 21\n1500 Kills - Rank 22\n2000 Kills - Rank 23\n2500 Kills - Rank 24\n3000 Kills - Rank 25\n3500 Kills - Rank 26\n\
	4000 Kills - Rank 27\n4500 Kills - Rank 28\n5000 Kills - Rank 29\n5500 Kills - Rank 30\n6000 Kills - Rank 31\n6500 Kills - Rank 32");
	ShowPlayerDialog(playerid,5326,DIALOG_STYLE_MSGBOX,"Rank list",str,"Close","");
	return 1;
}

CMD:vip(playerid)
{
	new vipinfo[600];
	strcat(vipinfo,""chat" Hello when you donate depends on how much you donated\nYou get what it's called an 'Vip Package it sets your current package\nWith bunch of awesome features\n\
	Package info are posted below:\nVisit Www.Freesa-mp.com !");
	ShowPlayerDialog(playerid,DIALOG_VIPINFO,DIALOG_STYLE_MSGBOX,"Vip Info",vipinfo,"Close","");
	return 1;
}


CMD:normas(playerid)
{
	new normas[600];
	strcat(normas,"ESPAÃOL:\n1.No tercer modo de fiesta (NO CORTAR!)\n2.No mods Cleo\n3.No salga de la zona del mapa\n4.No Publicidad\n\
	5.No hagas spam o inundar el chat\n6.No insultar a nadie en el servidor\n7.No bunnyhopping!\n8.Sin pausa durante la IG\n\
	9.No Racism TOLERATED\n10.NingÃºn arma-scroll o cualquier otro bichos GTA (bug C permite)\n11.No Killing Spawn (SK)");

	ShowPlayerDialog(playerid,DIALOG_RULES,DIALOG_STYLE_MSGBOX,"Normas - Translated with Google Translate",normas,"Close","");
	return 1;
}

CMD:pravila(playerid)
{
	new pravila[600];
	strcat(pravila,"RUSSKIY YAZYK:\n1.Tret'yego ne mod partii (NO VZLOM !)\n2.Net Cleo modov\n3.Ne vykhodya za predelyzony karty\n4.Nikakoy reklamy\n\
	5.Ne spam ili navodneniye publichnom chate\n6.Net oskorbitel'nyye lyubogo na servere\n7.Net bunnyhopping !\n8.Net Pauza vo vremya IG\n\
	9.Net rasizma perenositsya\n10.Net oruzhiya prokrutki ili lyuboy drugoy oshibki GTA ( C oshibka davala )\n11.Net Spawn Killing (SK)");

	ShowPlayerDialog(playerid,DIALOG_RULES,DIALOG_STYLE_MSGBOX,"/pravila RUSSKIY - Google Translated",pravila,"Close","");
	return 1;
}

CMD:rules(playerid)
{
	new rules[600];
	strcat(rules,"ENGLISH:\n1.No third party mod (NO HACKING!)\n2.No Cleo mods\n3.Do not go outside of the map area\n4.No Advertising\n\
	5.Do not spam or flood the public chat\n6.No insulting anyone on the server\n7.No bunnyhopping!\n8.No Pausing during IG\n\
	9.No Racism TOLERATED\n10.No weapon-scroll or any other GTA bugs (C bug allowed)\n11.No Spawn Killing (SK)\n ESPANOL: /normas --- RUSSKIY:/pravila");

	ShowPlayerDialog(playerid,DIALOG_RULES,DIALOG_STYLE_MSGBOX,"Server Public Rules",rules,"Close","");
	return 1;
}

CMD:help(playerid, params[])
{
	SendClientMessage(playerid, COLOR_BLUE, " ~~~~~~~~~~~~~~~~~~~~~~~| Zombie Apocalypse [Help] |~~~~~~~~~~~~~~~~~~~~~~~");
	SendClientMessage(playerid, COLOR_ORANGE,"=============================================================");
	SendClientMessage(playerid, COLOR_RED, ">> Q1.Who made this server? ");
	SendClientMessage(playerid, COLOR_GREEN, "<< A1.This server is scripted by [07]Fahad_king and [07]Tom_Redlake");
	SendClientMessage(playerid, COLOR_ORANGE,"=============================================================");
	SendClientMessage(playerid, COLOR_RED, ">> Q2.How to earn Xp? ");
	SendClientMessage(playerid, COLOR_GREEN, "<< A2.Kill your opponent team and get xp else donate us for more xp");
	SendClientMessage(playerid, COLOR_ORANGE,"=============================================================");
	SendClientMessage(playerid, COLOR_RED,">> Q3.How to be Human/Zombie ?");
    SendClientMessage(playerid, COLOR_GREEN,"<< A3.Its Random");
    SendClientMessage(playerid, COLOR_ORANGE,"===================================================================");	SendClientMessage(playerid, COLOR_ORANGE,"=============================================================");
	SendClientMessage(playerid, COLOR_RED,">> Q4.How to become Admins ?");
    SendClientMessage(playerid, COLOR_GREEN,"<< A4.Be active, help others, never insult anyone and apply in forum");
    SendClientMessage(playerid, COLOR_ORANGE,"===================================================================");
    
	SendClientMessage(playerid, COLOR_YELLOW, "if you have any Question or need help /pm any admin online or ask in our forum");
	return 1;
}

CMD:updates(playerid, params[])
{

	SendClientMessage(playerid, COLOR_RED, "________________| Zombie Apocalypse Updates: |________________");
	SendClientMessage(playerid, GREEN, "Some Admin Command's Added");
	SendClientMessage(playerid, GREEN, "Many Bugs are fixed.");
	SendClientMessage(playerid, GREEN, "New classes Added");
	SendClientMessage(playerid, GREEN, "New maps are added");
	SendClientMessage(playerid, GREEN, "New textdraws have been added");
	SendClientMessage(playerid, GREEN, "And other cool stuffs xD");
	return 1;
}

CMD:vinfo(playerid)
{
	new helpstring[300];
	strcat(helpstring,"If you are ready to donate us. We will be giving you special features, and vip rank! We provides the following cmds for vip only\n/vipmenu and /vcmds");
	ShowPlayerDialog(playerid,DIALOG_HELP,DIALOG_STYLE_MSGBOX,"VIP INFO!",helpstring,"Close","");
	return 1;
}

CMD:credits(playerid)
{
	new helpstring[300];
	strcat(helpstring,"This GameMode is re-created by [MN]Fahad_king");
	ShowPlayerDialog(playerid,DIALOG_HELP,DIALOG_STYLE_MSGBOX,"VIP INFO!",helpstring,"Close","");
	return 1;
}

CMD:vcmds(playerid)
{
	new helpstring[300];
	strcat(helpstring,"These are vips 4+ cmds /vheal and /vcure\nMore coming soon!");
	ShowPlayerDialog(playerid,DIALOG_HELP,DIALOG_STYLE_MSGBOX,"VIP INFO!",helpstring,"Close","");
	return 1;
}

CMD:vhelp(playerid)
{
	new helpstring[300];
	strcat(helpstring,"Welcome to Zombie Apocalypse Server! We are offering free vip level 1 for all to active it use /freevip cmd");
	ShowPlayerDialog(playerid,DIALOG_HELP,DIALOG_STYLE_MSGBOX,"You asked for help?",helpstring,"Close","");
	return 1;
}

CMD:cmds(playerid)
{
    new acmdstring[400];
    strcat(acmdstring,"Cmds: /sharexp /hi  /help /vip /freevip /blockpm /stats /rbug /cmds \n\
    Cmds: /unblockpm /ss /robj /vinfo /radio /hradio /class /class2 /buy /fail /pstats /admins /vips /adminlist");
    ShowPlayerDialog(playerid,DIALOG_ACMDS,DIALOG_STYLE_MSGBOX,"Admin Commands",acmdstring,"Close","");
	return 1;
}

CMD:acmds(playerid)
{
	if(pInfo[playerid][pAdminLevel] >= 1)
	{
		new acmdstring[500];
		strcat(acmdstring,"Trial Admin: /codes, /(un)freeze, /cw (checks the weapons), /getid, /cc (clear the chat), /slap, /a, /warn, /akill,/mute,/ummute,/kick\n\
		Moderator: /xp, /spec, /ban, /nuke, /unban, /megaslap, /settime, /setweather, /get\n\
		Global Moderator: /ann2, /ip, /setzombie, /sethuman\n\
		Management: /givexp,/ann, /rename\nFor level 5 admins type /a5cmds");
		ShowPlayerDialog(playerid,DIALOG_ACMDS,DIALOG_STYLE_MSGBOX,"Admin Commands",acmdstring,"Close","");
	}
	return 1;
}

CMD:aszcmds(playerid)
{
	if(pInfo[playerid][gMember] -= 1)
	if(pInfo[playerid][gLeader] -= 1)
	if(pInfo[playerid][pAdminLevel] >= 8)
	{
		new acmdstring[300];
		strcat(acmdstring,"Members: /aszcmds /asz\n\
		Clan Admin: /setasz /setaszadmin");
		ShowPlayerDialog(playerid,DIALOG_ACMDS,DIALOG_STYLE_MSGBOX,"Admin Commands",acmdstring,"Close","");
	}
	return 1;
}

CMD:a5cmds(playerid)
{
	if(pInfo[playerid][pAdminLevel] >= 5)
	{
		new acmdstring[300];
		strcat(acmdstring,"Head Admin: /skip /more /aheli \n\
		Server Mapper: /nextmap\nFor Admins lvl 7+ type /07cmds");
		ShowPlayerDialog(playerid,DIALOG_ACMDS,DIALOG_STYLE_MSGBOX,"Admin Commands",acmdstring,"Close","");
	}
	return 1;
}

CMD:07cmds(playerid)
{
	if(pInfo[playerid][pAdminLevel] >= 7)
	{
		new acmdstring[300];
		strcat(acmdstring,"Manager: /givegun /gvcoins /setxp4 /givexp4 \n\
		For 7+: /setpro /setdonor\n For Server Founders type /rcmds");
		ShowPlayerDialog(playerid,DIALOG_ACMDS,DIALOG_STYLE_MSGBOX,"Admin Commands",acmdstring,"Close","");
	}
	return 1;
}

CMD:rcmds(playerid)
{
	if(pInfo[playerid][pAdminLevel] >= 9)
	{
		new acmdstring[300];
		strcat(acmdstring,"Our rcon password is \n\
		zais4b5g");
		ShowPlayerDialog(playerid,DIALOG_ACMDS,DIALOG_STYLE_MSGBOX,"Admin Commands",acmdstring,"Close","");
	}
	return 1;
}

CMD:vcure(playerid,params[])
{
	if(team[playerid] == TEAM_HUMAN)
	{
        if(pInfo[playerid][pVipLevel] >= 4)
		{
			new targetid,string[128],str[256];
			if(sscanf(params,"u", targetid)) return SendClientMessage(playerid,-1,""chat" /vcure [playerid]");

			if(pInfo[targetid][IsPlayerInfected] == 1)
			{
				CurePlayer(targetid);
				format(string,sizeof(string),"~n~~n~~n~~n~~g~VIP~w~ %s has cured you",GetClassName(playerid),PlayerName(playerid));
				GameTextForPlayer(targetid,string,3500,5);
				format(str,sizeof(str),""chat""COL_LGREEN" VIP %s has cured %s",GetClassName(playerid),PlayerName(playerid),PlayerName(targetid));
				SendClientMessageToAll(-1,str);
				GivePlayerXP(playerid,20);
			}
			else return SendClientMessage(playerid,-1,""chat" The player you are trying to cure isn't infected");
		}
		else return SendClientMessage(playerid,-1,""chat""COL_LGREEN" You'll need to be VIP Level 4 to use this command!");
	}
	else return SendClientMessage(playerid,-1,""chat""COL_LGREEN" You'll need to be an human to use this command!");
	return 1;
}

CMD:vheal(playerid,params[])
{
	if(gettime() - 15 < Abilitys[playerid][HealCoolDown]) return GameTextForPlayer(playerid,"~w~ Cannot VIP heal wait 15 seconds!",1000,5);
	{
		if(team[playerid] == TEAM_HUMAN)
		{
            if(pInfo[playerid][pVipLevel] >= 4)
			{
				new targetid,string[128],str[256];
				if(sscanf(params,"u", targetid)) return SendClientMessage(playerid,-1,""chat" /vheal [playerid]");
				new Float:hp;
				GetPlayerHealth(targetid,hp);
				if(team[targetid] == TEAM_HUMAN)
				{
					if(hp >= 80)
					{
						SendClientMessage(playerid,-1,""chat" That player already has enough health to survive");
					}
					else
					{
						if(pInfo[playerid][pVipLevel] >= 4)
						{
							SetPlayerHealth(targetid,hp+40);
							format(string,sizeof(string),"~n~~n~~n~~n~~g~%s~w~ %s has healed you (by %.2f HP)",GetClassName(playerid),PlayerName(playerid),hp);
							GameTextForPlayer(targetid,string,3500,5);
							format(str,sizeof(str),""chat""COL_LGREEN" %s %s has healed %s by (NEW HP: %.2f HP)",GetClassName(playerid),PlayerName(playerid),PlayerName(targetid),hp);
							SendClientMessageToAll(-1,str);
							GivePlayerXP(playerid,35);
							Abilitys[playerid][HealCoolDown] = gettime();
						}
					}
				}
				else return SendClientMessage(playerid,-1,""chat" You cannot heal an zombie!");
			}
			else return SendClientMessage(playerid,-1,""chat""COL_LGREEN" you need to be VIP level 4 to use this command!");
		}
		else return SendClientMessage(playerid,-1,""chat""COL_LGREEN" You'll need to be an human to use this command!");
	}
	return 1;
}

CMD:fail(playerid)
{
	new fail1[128];
	format(fail1, sizeof(fail1), ""chat"Player %s just made an epic failure.", PlayerName(playerid), playerid);
	SendClientMessageToAll(COLOR_LIGHTBLUE, fail1);
	return 1;
}

CMD:hi(playerid)
{
	new fail1[128];
	format(fail1, sizeof(fail1), ""chat" {ADD8E6}Player %s says: {41A317}Hi all guys, whats up!", PlayerName(playerid), playerid);
	SendClientMessageToAll(COLOR_LIGHTBLUE, fail1);
	return 1;
}

CMD:codes(playerid)
{
	if(pInfo[playerid][pAdminLevel] >= 1)
	{
	    new cstring[600];
	    strcat(cstring,"HH - Health Hacks (Permanent)\nGM -God Mode (Permanent)\nAB - Air Break (Permanent)\nSH- Speed Hacks (Permanent)\nWH - Weapon Hacks (Permanent)\n\
		SK - Spawnkill (Over did)\nFH - Fly hacks (Permanent)\nOH - Other hacks (Permanent)\nVH - Vehicle hacks (Permanent)\nPF - Profanity");
		ShowPlayerDialog(playerid,9511,DIALOG_STYLE_MSGBOX,"Ban Codes",cstring,"Close","");
	}
	return 1;
}
CMD:giveammo(playerid,params[])
{
	if(gettime() - 15 < Abilitys[playerid][HealCoolDown]) return GameTextForPlayer(playerid,"~w~ Cannot Give Mini-Ammo Box wait 15 seconds!",1000,5);
	{
		if(team[playerid] == TEAM_HUMAN)
		{
			if(pInfo[playerid][pHumanClass] == WEAPONSDEALER)
			{
				new targetid,string[128],str[256];
				if(sscanf(params,"u", targetid)) return SendClientMessage(playerid,-1,""chat" /giveammo [playerid]");
				if(team[targetid] == TEAM_HUMAN)
				{
					{
						if(pInfo[playerid][pHumanClass] == WEAPONSDEALER)
						{
							new ammo = GetPlayerAmmo(targetid);
							SetPlayerAmmo(targetid, GetPlayerWeapon(targetid), ammo+50);
							format(string,sizeof(string),"~n~~n~~n~~n~~g~%s~w~ %s has Given Mini-Ammo Box you ",GetClassName(playerid),PlayerName(playerid));
							GameTextForPlayer(targetid,string,3500,5);
							format(str,sizeof(str),""chat""COL_LGREEN" %s %s has Given Mini-Ammo Box to %s ",GetClassName(playerid),PlayerName(playerid),PlayerName(targetid),PlayerName(targetid));
							SendClientMessageToAll(-1,str);
							GivePlayerXP(playerid,5);
							Abilitys[playerid][HealCoolDown] = gettime();
						}

					}
				}


				else return SendClientMessage(playerid,-1,""chat" You cannot Give Ammo to an zombie!");
			}
			else return SendClientMessage(playerid,-1,""chat""COL_LGREEN" You'll need to be A Weapons Dealer to use this command!");
		}
		else return SendClientMessage(playerid,-1,""chat""COL_LGREEN" You'll need to be an human to use this command!");
	}
	return 1;
}
CMD:vest(playerid,params[])
{
	if(gettime() - 15 < Abilitys[playerid][HealCoolDown]) return GameTextForPlayer(playerid,"~w~ Cannot Give Mini-Armour wait 15 seconds!",1000,5);
	{
		if(team[playerid] == TEAM_HUMAN)
		{
			if(pInfo[playerid][pHumanClass] == WEAPONSDEALER)
			{
				new targetid,string[128],str[256];
				if(sscanf(params,"u", targetid)) return SendClientMessage(playerid,-1,""chat" /vest [playerid]");
				new Float:ar;
				GetPlayerArmour(playerid, ar);
				if(team[targetid] == TEAM_HUMAN)
				{
					if(ar >= 80)
					{
						SendClientMessage(playerid,-1,""chat" That player already has More than 80 Armour");
					}
					else
					{
						if(pInfo[playerid][pHumanClass] == WEAPONSDEALER)
						{
							SetPlayerArmour(targetid,ar+20);
							format(string,sizeof(string),"~n~~n~~n~~n~~g~%s~w~ %s has Given Mini-Vest you (New HP: %.2f)",GetClassName(playerid),PlayerName(playerid),ar);
							GameTextForPlayer(targetid,string,3500,5);
							format(str,sizeof(str),""chat""COL_LGREEN" %s %s has Given Mini-Vest to %s (NEW HP: %.2f HP)",GetClassName(playerid),PlayerName(playerid),PlayerName(targetid),ar,PlayerName(targetid));
							SendClientMessageToAll(-1,str);
							GivePlayerXP(playerid,5);
							Abilitys[playerid][HealCoolDown] = gettime();
						}

					}
				}


				else return SendClientMessage(playerid,-1,""chat" You cannot Vest an zombie!");
			}
			else return SendClientMessage(playerid,-1,""chat""COL_LGREEN" You'll need to be Weapons Dealer to use this command!");
		}
		else return SendClientMessage(playerid,-1,""chat""COL_LGREEN" You'll need to be an human to use this command!");
	}
	return 1;
}

CMD:cure(playerid,params[])
{
	if(team[playerid] == TEAM_HUMAN)
	{
		if(pInfo[playerid][pHumanClass] == MEDIC || pInfo[playerid][pHumanClass] == ADVANCEDMEDIC || pInfo[playerid][pHumanClass] == HEAVYMEDIC || pInfo[playerid][pHumanClass] == VIPMEDIC || pInfo[playerid][pHumanClass] == DOCTOR)
		{
			new targetid,string[128],str[256];
			if(sscanf(params,"u", targetid)) return SendClientMessage(playerid,-1,""chat" /cure [playerid]");

			if(pInfo[targetid][IsPlayerInfected] == 1)
			{
				CurePlayer(targetid);
				format(string,sizeof(string),"~n~~n~~n~~n~~g~%s~w~ %s has cured you",GetClassName(playerid),PlayerName(playerid));
				GameTextForPlayer(targetid,string,3500,5);
				format(str,sizeof(str),""chat""COL_LGREEN" %s %s has cured %s",GetClassName(playerid),PlayerName(playerid),PlayerName(targetid));
				SendClientMessageToAll(-1,str);
				GivePlayerXP(playerid,20);
			}
			else return SendClientMessage(playerid,-1,""chat" The player you are trying to cure isn't infected");
		}
		else return SendClientMessage(playerid,-1,""chat""COL_LGREEN" You'll need to be an Medic & Advanced Medic or V.I.P Medic to use this command!");
	}
	else return SendClientMessage(playerid,-1,""chat""COL_LGREEN" You'll need to be an human to use this command!");
	return 1;
}

CMD:zheal(playerid,params[])
{
	if(gettime() - 15 < Abilitys[playerid][HealCoolDown]) return GameTextForPlayer(playerid,"~w~ Cannot heal wait 15 seconds!",1000,5);
	{
		if(team[playerid] == TEAM_ZOMBIE)
		{
			if(pInfo[playerid][pZombieClass] == HZOMBIE)
			{
				new targetid,string[128],str[256];
				if(sscanf(params,"u", targetid)) return SendClientMessage(playerid,-1,""chat" /zheal [playerid]");
				new Float:hp;
				GetPlayerHealth(targetid,hp);
				if(team[targetid] == TEAM_ZOMBIE)
				{
					if(hp >= 80)
					{
						SendClientMessage(playerid,-1,""chat" That player already has enough health to survive");
					}
					else
					{
						if(pInfo[playerid][pZombieClass] == HZOMBIE)
						{
							SetPlayerHealth(targetid,hp+40);
							format(string,sizeof(string),"~n~~n~~n~~n~~g~%s~w~ %s has healed you (New HP: %.2f)",GetClassName(playerid),PlayerName(playerid),hp);
							GameTextForPlayer(targetid,string,3500,5);
							format(str,sizeof(str),""chat""COL_LGREEN" %s %s has healed %s (NEW HP: %.2f HP)",GetClassName(playerid),PlayerName(playerid),PlayerName(targetid),hp,PlayerName(targetid));
							SendClientMessageToAll(-1,str);
							GivePlayerXP(playerid,20);
							Abilitys[playerid][HealCoolDown] = gettime();
						}
					}
				}
				else return SendClientMessage(playerid,-1,""chat" You cannot heal an human!");
			}
			else return SendClientMessage(playerid,-1,""chat""COL_LGREEN" You'll need to be Zombie Medic!");
		}
		else return SendClientMessage(playerid,-1,""chat""COL_LGREEN" You'll need to be an zombie to use this command!");
	}
	return 1;
}

CMD:heal(playerid,params[])
{
	if(gettime() - 15 < Abilitys[playerid][HealCoolDown]) return GameTextForPlayer(playerid,"~w~ Cannot heal wait 15 seconds!",1000,5);
	{
		if(team[playerid] == TEAM_HUMAN)
		{
			if(pInfo[playerid][pHumanClass] == HEAVYMEDIC || pInfo[playerid][pHumanClass] == ADVANCEDMEDIC || pInfo[playerid][pHumanClass] == VIPMEDIC || pInfo[playerid][pHumanClass] == DOCTOR)
			{
				new targetid,string[128],str[256];
				if(sscanf(params,"u", targetid)) return SendClientMessage(playerid,-1,""chat" /heal [playerid]");
				new Float:hp;
				GetPlayerHealth(targetid,hp);
				if(team[targetid] == TEAM_HUMAN)
				{
					if(hp >= 80)
					{
						SendClientMessage(playerid,-1,""chat" That player already has enough health to survive");
					}
					else
					{
						if(pInfo[playerid][pHumanClass] == HEAVYMEDIC || pInfo[playerid][pHumanClass] == ADVANCEDMEDIC)
						{
							SetPlayerHealth(targetid,hp+5);
							format(string,sizeof(string),"~n~~n~~n~~n~~g~%s~w~ %s has healed you (New HP: %.2f)",GetClassName(playerid),PlayerName(playerid),hp);
							GameTextForPlayer(targetid,string,3500,5);
							format(str,sizeof(str),""chat""COL_LGREEN" %s %s has healed %s (NEW HP: %.2f HP)",GetClassName(playerid),PlayerName(playerid),PlayerName(targetid),hp,PlayerName(targetid));
							SendClientMessageToAll(-1,str);
							GivePlayerXP(playerid,20);
							Abilitys[playerid][HealCoolDown] = gettime();
						}
						else if(pInfo[playerid][pHumanClass] == VIPMEDIC)
						{
							SetPlayerHealth(targetid,hp+20);
							format(string,sizeof(string),"~n~~n~~n~~n~~g~%s~w~ %s has healed you (by %.2f HP)",GetClassName(playerid),PlayerName(playerid),hp);
							GameTextForPlayer(targetid,string,3500,5);
							format(str,sizeof(str),""chat""COL_LGREEN" %s %s has healed %s by (NEW HP: %.2f HP)",GetClassName(playerid),PlayerName(playerid),PlayerName(targetid),hp);
							SendClientMessageToAll(-1,str);
							GivePlayerXP(playerid,20);
							Abilitys[playerid][HealCoolDown] = gettime();
						}

						else if(pInfo[playerid][pHumanClass] == DOCTOR)
						{
							SetPlayerHealth(targetid,hp+40);
							format(string,sizeof(string),"~n~~n~~n~~n~~g~%s~w~ %s has healed you (by %.2f HP)",GetClassName(playerid),PlayerName(playerid),hp);
							GameTextForPlayer(targetid,string,3500,5);
							format(str,sizeof(str),""chat""COL_LGREEN" %s %s has healed %s by (NEW HP: %.2f HP)",GetClassName(playerid),PlayerName(playerid),PlayerName(targetid),hp);
							SendClientMessageToAll(-1,str);
							GivePlayerXP(playerid,35);
							Abilitys[playerid][HealCoolDown] = gettime();
						}
					}
				}
				else return SendClientMessage(playerid,-1,""chat" You cannot heal an zombie!");
			}
			else return SendClientMessage(playerid,-1,""chat""COL_LGREEN" You'll need to be an Medic & Advanced Medic & Doctor or V.I.P Medic to use this command!");
		}
		else return SendClientMessage(playerid,-1,""chat""COL_LGREEN" You'll need to be an human to use this command!");
	}
	return 1;
}

CMD:kill(playerid)
{
	if(team[playerid] == TEAM_HUMAN)
	{
	    SetPlayerHealth(playerid,0.0);
	    ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);
	    SendClientMessage(playerid,-1,""chat" You've killed yourself");
	}
	else return SendClientMessage(playerid,-1,""chat" You cannot kill yourself if you are an 'Zombie'");
	return 1;
}

CMD:admins(playerid, params[])
{
	if(pInfo[playerid][pHour] >= 1)
	{
	    new adminstring[128];
	    if(IsPlayerConnected(playerid))
	    {
	        for (new i = 0; i < MAX_PLAYERS; i++)
	        {
	            if(IsPlayerConnected(i))
	            {
	                if(pInfo[i][pAdminLevel] > 0)
	                {
	                    format(adminstring, sizeof(adminstring),"%s%s: %s\n", adminstring, GetAdminName(i), PlayerName(i));
	                }
	            }
	        }
	        ShowPlayerDialog(playerid,DIALOG_ADMINS,DIALOG_STYLE_MSGBOX,"Online admins",adminstring,"Close","");
		}
 		else return SendClientMessage(playerid,-1,""chat" No admins online");
	}
	else return SendClientMessage(playerid,-1,""chat" You cannot view admins online (You need 1 hours IG time)");
    return 1;
}

CMD:vips(playerid, params[])
{
	if(pInfo[playerid][pHour] >= 1)
	{
	    new adminstring[128];
	    if(IsPlayerConnected(playerid))
	    {
	        for (new i = 0; i < MAX_PLAYERS; i++)
	        {
	            if(IsPlayerConnected(i))
	            {
	                if(pInfo[i][pVipLevel] > 0)
	                {
	                    format(adminstring, sizeof(adminstring),"%sLevel %d: %s\n", adminstring, pInfo[i][pVipLevel], PlayerName(i));
	                }
	            }
	        }
	        ShowPlayerDialog(playerid,DIALOG_VIPS,DIALOG_STYLE_MSGBOX,"Online V.I.Ps",adminstring,"Close","");
		}
 		else return SendClientMessage(playerid,-1,""chat" No vip's online");
	}
	else return SendClientMessage(playerid,-1,""chat" You cannot view vips online (You need 1 Hour IG time)");
    return 1;
}

CMD:myteam(playerid)
{
	new strteam[128];
	switch(team[playerid])
	{
	    case TEAM_ZOMBIE: strteam = "Zombie";
	    case TEAM_HUMAN: strteam = "Human";
	}

	new str[128];
	format(str,sizeof(str),""chat" Your current team is %s",strteam);
	SendClientMessage(playerid,-1,str);
	return 1;
}

CMD:class(playerid,params[])
{
	if(team[playerid] == TEAM_HUMAN)
	{
		if(time >= 200)
		{
		                	new string[2500];
		                	strcat(string,"{008080}Civilian - Silenced Pistol,Shotgun - 0 XP\n{008080}Police Man - Deagle,Shotgun - 500 XP\n{008080}Medic -Shotgun,Silenced Pistol,Armour,Cure Infected - 1000 XP\n\
		                	{008080}Scout - Sniper,Silenced Pistol - 1500 XP\n{008080}Heavy Medic - Deagle,Shotgun,Armour,Cure Infected - 5000 XP\n{008080}Farmer - Deagle,AK,County Rifle,Armour - 6000 XP\n");
		                	strcat(string,"{008080}Soldier - AK47,Deagle - 6500 XP\n{008080}Engineer - Silenced Pistol,Shotgun,Armour,Build Boxes - 7500 XP\n{008080}S.W.A.T - MP5,Deagle,Armour,Immunity - 15,000 XP\n\
							{008080}Heavy Shotgun - Shotgun,Deagle,Armour,More shotgun damage - 20,000 XP\n{008080}Advanced Medic - M4,Deagle,Shotgun,Cure all - 25,000 XP\n");
		                	strcat(string,"{008080}Advanced Engineer - Deagle,M4,Armour,Build Boxes - 30,000 XP\n{008080}Experienced Engineer -Deagle,Shotgun,Armour - Build Ladders - 35,000 XP\n\
							{008080}Federal Agent - M4,Deagle,Shotgun,Armour,Immunity - 50,000 XP\n{008080}Advanced Scout - Sniper,Deagle,High jump,Half Armour - 100,000 XP\n\
							{008080}Kick Back - Silenced Pistol,Shotgun,MP5 - 400000 XP\n{008080}Doctor - Silenced Pistol - Heal,Cure,Shield Heal,Half Immunity - Rank 22");
		                	ShowPlayerDialog(playerid,DIALOG_CLASS_2,DIALOG_STYLE_LIST,"Class Selection (Human)",string,"Select","Close");
		}
		else return SendClientMessage(playerid,-1,""chat" 50 seconds has passed! you cannot select a class anymore!");
		}
    if(team[playerid] == TEAM_ZOMBIE)
		                {
			                new string[1000];
		                    strcat(string,"{41A317}Standard Zombie - LALT Infect a player - 0 XP\n{41A317}Mutated Zombie - LALT Infect Drunk Vision - 500 XP\n{41A317}Fast Zombie - High Jump - 5,000 XP\n\
							{41A317}Reaper Zombie - More damage with chainsaw - 10,000 XP\n{41A317}Witch Zombie - LALT 75 Damage - 18,000 XP\n");
							strcat(string,"{41A317}Boomer Zombie - Explodes on death and infect - 20,000 XP\n\
							{41A317}Stomper Zombie - LALT Throw all around you - 25,000 XP\n{41A317}Screamer - LALT Drop everyone down - 35000 XP\n\
							{41A317}Advanced Mutated - LALT Infect all around - 65,000 XP\n{41A317}Heavy Screamer - LALT Throw all +5hp - 70,000 XP\n");
							strcat(string,"{41A317}Flesh Eater - LALT Infect a player kills faster - 100,000 XP\n{41A317}Advanced Witch - LALT 99 Damage - 150,000 XP\n{41A317}Advanced Boomer - LALT Explode - 500,000 X");

							ShowPlayerDialog(playerid,DIALOG_CLASS_3,DIALOG_STYLE_LIST,"Class Selection (Zombie)",string,"Select","Close");
						}
	return 1;
}

CMD:class2(playerid,params[])
{
	if(team[playerid] == TEAM_HUMAN)
	{
		if(time >= 200)
		{
		                	new string[2500];
		                	strcat(string,"{008080}Pimp - Dildo, deals 15 damage 15000 XP\n{008080}Heavy Soldier - Can Give 25 Armour Point - 150000\n");
							strcat(string,"{008080}Assassin - Katana, One Hit Kill, C4 - 300.000 XP\n{008080}Cowboy - 2 colt pistols, extra damage, armour, 250.000XP\n");
							strcat(string,"{008080}Trap Master - Combat Shotgun, AK, Can put traps - 200.000 XP\n{008080}FBI - M4, Deagle, Immunity from all, Shotgun, Mp5 - 200.000 XP\n");
							strcat(string,"{008080}Scientist - Silenced Pistol, Can cure zombies - 300.000 XP\n{008080}Shotgun Specialist - Shotgun +50 Damage - 450,000 XP.\n{008080}Experienced Scout - One shoot kill, Sniper, Silenced Pistol - 1000000xp\n");
							strcat(string,"{008080}Smoke Up - Deagle - MP5 - M4 - Flamer - Full Immunity - Rank 30 Required\n{008080}Boxer - Can Give Stomper - 31 Rank Required\n{008080}BomberMan - Having Rocket Launcher - 450000xp\n");
							strcat(string,"{008080}Mp5 Master - Extreme damage with Mp5 - 500000xp\n{008080}Ghost Rider - Can Burn Zombies - 600000xp\n{008080}Hey Buddy - Gives 70 Damage - 150000xp\n{008080}Advanced KickBack - Gives Extreme KickBack - 900000\n{008080}Tec Girl - Gives 75 damage with Tec|200hp - 900000\n{008080}Bulls Eye - Gives high damage|sawnoff - 27 rank needed\n");
							ShowPlayerDialog(playerid,DIALOG_CLASS_2_2,DIALOG_STYLE_LIST,"Class Selection (Human)",string,"Select","Close");
		}
		else return SendClientMessage(playerid,-1,""chat" 50 seconds has passed! you cannot select a class anymore!");
		}
    if(team[playerid] == TEAM_ZOMBIE)
		                {
			                new string[1000];
			                strcat(string,"{41A317}Advanced Stomper - 150 HP , Stomps humans away - 200.000 XP\n");
							strcat(string,"{41A317}Fire Breather - Throws out flames burning everything - 350.000 XP\n{41A317}Advanced Screamer - LALT Throw all +10hp ||-10 Hp to human - 450,000 XP\n{41A317}Advanced Boomer - LALT Explode - 500,000 XP\n");
							strcat(string,"{41A317}Nemesis - Creates some paravane, has 200 HP, custom skinned\n{41A317}Zombie Medic - /zheal to heal zombies\n{41A317}SlenderMan - HighJump MoreDamage - 700000\n{41A317}Killer Zombie - Cant be kickback - 600000\n{41A317}Ghost Zombie - Invisible | Gives 40 Damage - 170000\n{41A317}Dark Sniper - Having Sniper|Can Infect - 700000 xp");

							ShowPlayerDialog(playerid,DIALOG_CLASS_3_3,DIALOG_STYLE_LIST,"Class Selection (Zombie)",string,"Select","Close");
						}
	return 1;
}

CMD:nextmap(playerid,params[])
{
	if(pInfo[playerid][pLogged] == 1)
	{
		if(pInfo[playerid][pAdminLevel] >= 1)
		{
			new map,stringmap[256];
			if(sscanf(params,"i", map)) return SendClientMessage(playerid,-1,""chat" /nextmap [mapid]");

			format(stringmap,sizeof(stringmap),""chat""COL_LIGHTBLUE" %s %s set next map id to %i",GetAdminName(playerid),PlayerName(playerid),map);
			SendClientMessageToAll(-1,stringmap);
			mapid = map;
		}
	}
    else if(pInfo[playerid][pLogged] == 0)
	{
		SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" Nice try u fucking fag gay!");
		printf("%s has been kicked for trying to use a command without being logged in!", PlayerName(playerid));
		Kick(playerid);
	}
	return 1;
}

CMD:setzombie(playerid,params[])
{
	if(pInfo[playerid][pLogged] == 1)
	{
		if(pInfo[playerid][pAdminLevel] >= 3)
		{
			if(IsPlayerConnected(playerid))
			{
				new targetid,str[256];
				if(sscanf(params, "u", targetid)) return SendClientMessage(playerid,-1,""chat" /setzombie [playerid]");
				if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid,-1,""chat" Player is not online");

				ZombieSetup(targetid);
				SpawnPlayer(targetid);
				format(str,sizeof(str),""chat""COL_LGREEN" Admin %s(%i) has set your team to Zombie",PlayerName(playerid),playerid);
				SendClientMessage(targetid,-1,str);
				format(str,sizeof(str),""chat""COL_LGREEN" You've changed %s(%i) team to zombie!",PlayerName(targetid),targetid);
				SendClientMessage(playerid,-1,str);
			}
		}
	}
    else if(pInfo[playerid][pLogged] == 0)
	{
		SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" Nice try u fucking fag gay!");
		printf("%s has been kicked for trying to use a command without being logged in!", PlayerName(playerid));
		Kick(playerid);
	}
	return 1;
}

CMD:sethuman(playerid,params[])
{
	if(pInfo[playerid][pLogged] == 1)
	{
		if(pInfo[playerid][pAdminLevel] >= 3)
		{
			if(IsPlayerConnected(playerid))
			{
				new targetid,str[256];
				if(sscanf(params, "u", targetid)) return SendClientMessage(playerid,-1,""chat" /sethuman [playerid]");
				if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid,-1,""chat" Player is not online");

				HumanSetup(targetid);
				SpawnPlayer(targetid);
				format(str,sizeof(str),""chat""COL_LGREEN" Admin %s(%i) has set your team to Human",PlayerName(playerid),playerid);
				SendClientMessage(targetid,-1,str);
				format(str,sizeof(str),""chat""COL_LGREEN" You've changed %s(%i) team to Human!",PlayerName(targetid),targetid);
				SendClientMessage(playerid,-1,str);
			}
		}
	}

    else if(pInfo[playerid][pLogged] == 0)
	{
		SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" Nice try u fucking fag gay!");
		printf("%s has been kicked for trying to use a command without being logged in!", PlayerName(playerid));
		Kick(playerid);
	}
	return 1;
}

CMD:ban(playerid,params[])
{
	if(pInfo[playerid][pLogged] == 1)
	{
		if(pInfo[playerid][pAdminLevel] >= 2)
		{
			if(IsPlayerConnected(playerid))
			{
				new targetid,reason[105],string[256];
				if(sscanf(params, "us[105]", targetid,reason)) return SendClientMessage(playerid,-1,""chat" /ban [playerid] [reason]");
				if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid,-1,""chat" Player is not online");
				format(string, sizeof(string), ""chat""COL_LIGHTBLUE" %s %s has banned %s [Reason: %s]",GetAdminName(playerid),PlayerName(playerid),PlayerName(targetid),reason);
				SendClientMessageToAll(-1,string);
				printf("%s %s has banned %s [Reason: %s]",GetAdminName(playerid),PlayerName(playerid),PlayerName(targetid),reason);
				pInfo[targetid][pBanned] = 1;
				BanPlayer(targetid,reason,GetAdminName(playerid));
			}
		}

		else
		{
			SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" You do not have the right admin permissions for this command!");
		}
	}
    else if(pInfo[playerid][pLogged] == 0)
	{
		SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" Nice try u fucking fag gay!");
		printf("%s has been kicked for trying to use a command without being logged in!", PlayerName(playerid));
		Kick(playerid);
	}
	return 1;
}

CMD:unbanip(playerid, params[])
{
	if(pInfo[playerid][pLogged] == 1)
	{
		if(pInfo[playerid][pAdminLevel] >= 2)
		{
			if(pInfo[playerid][pLogged] == 1)
			{
				new string[128], sendername[MAX_PLAYER_NAME];
				if(pInfo[playerid][pAdminLevel] < 1) return SendClientMessage(playerid, COLOR_RED, "   you are not authorized to use that command!");
				if(isnull(params)) return SendClientMessage(playerid,COLOR_WHITE,"USAGE: /unbanip [playerIP]");
				format(string,sizeof(string),"unbanip %s",params);
				SendRconCommand(string);
				SendRconCommand("reloadbans");
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, 128, "%s has unbanned IP %s", sendername,params);
				SendClientMessage(playerid,-1,string);
			}
			else if(pInfo[playerid][pLogged] == 0)
			{
				SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" Nice try u fucking fag gay!");
				printf("%s has been kicked for trying to use a command without being logged in!", PlayerName(playerid));
				Kick(playerid);
			}
		}
	}
	return 1;
}

CMD:unban(playerid, params[])
{
	if(pInfo[playerid][pLogged] == 1)
	{
		if(pInfo[playerid][pAdminLevel] >= 2)
		{

			if(pInfo[playerid][pLogged] == 1)
			{
				new id, string[128], sendername[MAX_PLAYER_NAME], name[MAX_PLAYER_NAME], targetid;
				if(pInfo[playerid][pAdminLevel] < 1) return SendClientMessage(playerid, COLOR_RED,"You are not authorized to use this command");
				else if(sscanf(params,"u", id)) return SendClientMessage(playerid, COLOR_GREY,"USAGE: /unban [playername]");
				else
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(id, name, sizeof(name));
					format(string, sizeof(string),"%s has been unbanned by admin %s", name, sendername);
					SendClientMessage(playerid,-1,string);
					pInfo[targetid][pBanned] = 0;
				}
			}
			else if(pInfo[playerid][pLogged] == 0)
			{
				SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" Nice try u fucking fag gay!");
				printf("%s has been kicked for trying to use a command without being logged in!", PlayerName(playerid));
				Kick(playerid);
			}
		}
	}
	return 1;
}


CMD:radio(playerid)
{
	SendClientMessage(playerid, COLOR_RED,"Make sure your RADIO VOLUME is max!!! Else the radio won't work!");
	new string[256];
	strcat(string,"{FF0000}Eric Pridz - Pjanoo\n{00FF00}Nicki Minaj - Starships\n{0000FF}Train - Drive By\nSix Days - Tokyo Driftn\n{00FF00}Year of Summer\nGangnam Style\nStop Radio\n");
	ShowPlayerDialog(playerid,DIALOG_RADIO,DIALOG_STYLE_LIST,"Select an radio!",string,"Select","Close");
	return 1;
}

CMD:hradio(playerid)
{
	SendClientMessage(playerid, COLOR_GREEN,"Make sure your RADIO VOLUME is max!!! Else the radio won't work!");
	new string[256];
	strcat(string,"{FF0000}Criminal\n{00FF00}Subha honai na dai\n{0000FF}Make Some Noise\nStop Radio\n");
	ShowPlayerDialog(playerid,DIALOG_RADIO_1,DIALOG_STYLE_LIST,"Select an radio!",string,"Select","Close");
	return 1;
}

CMD:getid(playerid,params[])
{
	new found, string[128], playername[MAX_PLAYER_NAME];
	if(pInfo[playerid][pAdminLevel] >= 1)
	{
	    if(isnull(params)) return SendClientMessage(playerid, -1, ""chat" /getid [PartOfName] ");
	    format(string,sizeof(string),""chat" Searched for: \"%s\"",params);
	    SendClientMessage(playerid, -1,string);
	    for(new i=0; i <= MAX_PLAYERS; i++)
	    {
	        if(IsPlayerConnected(i))
	        {
	            GetPlayerName(i, playername, MAX_PLAYER_NAME);
	            new namelen = strlen(playername);
	            new bool:searched=false;
	            for(new pos=0; pos <= namelen; pos++)
	            {
	                if(searched != true)
	                {
	                    if(strfind(playername,params,true) == pos)
	                    {
	                        found++;
	                        format(string,sizeof(string),""chat" %d. %s (ID: %d)",found,playername,i);
	                        SendClientMessage(playerid, -1 ,string);
	                        searched = true;
	                    }
	                }
	            }
	        }
	    }
	    if(found == 0)
	    SendClientMessage(playerid, -1, ""chat" No Players Localized!");
	}
    else if(pInfo[playerid][pLogged] == 0)
	{
		SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" Nice try u fucking fag gay!");
		printf("%s has been kicked for trying to use a command without being logged in!", PlayerName(playerid));
		Kick(playerid);
	}
	return 1;
}

CMD:cc(playerid,params[])
{
	if(pInfo[playerid][pLogged] == 1)
	{
		if(pInfo[playerid][pAdminLevel] >= 1)
		{
			new reason[105], string[256];
			if(sscanf(params, "s[105]", reason)) return SendClientMessage(playerid,-1,""chat" /cc [reason]");

			ClearChat();
			format(string,sizeof(string), ""chat""COL_LIGHTBLUE" %s %s cleared the chat [Reason: %s]",GetAdminName(playerid),PlayerName(playerid),reason);
			SendClientMessageToAll(-1,string);
		}
		else {
			SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" You do not have the right admin permissions for this command!");
		}
	}

    else if(pInfo[playerid][pLogged] == 0)
	{
		SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" Nice try u fucking fag gay!");
		printf("%s has been kicked for trying to use a command without being logged in!", PlayerName(playerid));
		Kick(playerid);
	}
	return 1;
}

CMD:setmapper(playerid,params[])
{
	if(pInfo[playerid][pLogged] == 1)
	{
		if(pInfo[playerid][pAdminLevel] >= 6)
		{
			new targetid,level,string[256];
			if(sscanf(params, "ud", targetid, level)) return  SendClientMessage(playerid,-1,""chat" /setmapper [playerid] [level]");
			if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid,-1,""chat" Player is not online");
			if(level < 5 || level > 7) return SendClientMessage(playerid,-1,""chat"  Mapper level is 6 only ");

			pInfo[targetid][pAdminLevel] = level;

			format(string, sizeof(string), ""chat""COL_LIGHTBLUE" %s %s have given Mapper status of %d to %s",GetAdminName(playerid),PlayerName(playerid),level,PlayerName(targetid));
			SendClientMessageToAll(-1,string);
			printf("%s %s have given Mapper status of %d to %s",GetAdminName(playerid),PlayerName(playerid),level,PlayerName(targetid));
		}
		else {
			SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" You do not have the right admin permissions for this command!");
		}
	}
    else if(pInfo[playerid][pLogged] == 0)
	{
		SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" Nice try u fucking fag gay! are u mapper?");
		printf("%s has been kicked for trying to use a command without being logged in!", PlayerName(playerid));
		Kick(playerid);
	}
	return 1;
}

CMD:setdonor(playerid,params[])
{
	if(pInfo[playerid][pLogged] == 1)
	{
		if(pInfo[playerid][pAdminLevel] >= 6)
		{
			new targetid,level,string[256];
			if(sscanf(params, "ud", targetid, level)) return  SendClientMessage(playerid,-1,""chat" /setvip [playerid] [level]");
			if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid,-1,""chat" Player is not online");
			if(level < 0 || level > 5) return SendClientMessage(playerid,-1,""chat" Vip levels are ONLY between 1-5");

			pInfo[targetid][pVipLevel] = level;

			format(string, sizeof(string), ""chat""COL_LIGHTBLUE" %s %s have given vip status of %d to %s",GetAdminName(playerid),PlayerName(playerid),level,PlayerName(targetid));
			SendClientMessageToAll(-1,string);
			printf(" %s %s have given vip status of %d to %s",GetAdminName(playerid),PlayerName(playerid),level,PlayerName(targetid));
		}
		else {
			SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" You do not have the right admin permissions for this command!");
		}
	}
    else if(pInfo[playerid][pLogged] == 0)
	{
		SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" Nice try u fucking fag gay!");
		printf("%s has been kicked for trying to use a command without being logged in!", PlayerName(playerid));
		Kick(playerid);
	}
	return 1;
}

CMD:megaslap(playerid,params[])
{
	if(pInfo[playerid][pLogged] == 1)
	{
		if(pInfo[playerid][pAdminLevel] >= 2 || IsPlayerAdmin(playerid))
		{
			new targetid,string[256];
			if(sscanf(params, "u", targetid)) return  SendClientMessage(playerid,-1,""chat" /megaslap [playerid]");
			if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid,-1,""chat" Player is not online");

			new Float:posxx[3];
			GetPlayerPos(targetid, posxx[0], posxx[1], posxx[2]);
			SetPlayerPos(targetid, posxx[0], posxx[1], posxx[2]+40);

			if(IsPlayerAdmin(playerid))
			{
				format(string, sizeof(string), ""chat" RCON Admin has mega slapped %s",PlayerName(targetid));
				SendClientMessageToAll(-1,string);
			}
			else
			{
				format(string, sizeof(string), ""chat""COL_LIGHTBLUE" %s %s has mega slapped %s",GetAdminName(playerid),PlayerName(playerid),PlayerName(targetid));
				SendClientMessageToAll(-1,string);
				printf(" %s %s has mega slapped %s",GetAdminName(playerid),PlayerName(playerid),PlayerName(targetid));
			}
		}
		else {
			SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" You do not have the right admin permissions for this command!");
		}
	}
    else if(pInfo[playerid][pLogged] == 0)
	{
		SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" Nice try u fucking fag gay!");
		printf("%s has been kicked for trying to use a command without being logged in!", PlayerName(playerid));
		Kick(playerid);
	}
	return 1;
}

CMD:slap(playerid,params[])
{
	if(pInfo[playerid][pLogged] == 1)
	{
		if(pInfo[playerid][pAdminLevel] >= 1)
		{
			new targetid,string[256];
			if(sscanf(params, "u", targetid)) return  SendClientMessage(playerid,-1,""chat" /slap [playerid]");
			if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid,-1,""chat" Player is not online");

			new Float:posxx[3];

			GetPlayerPos(targetid, posxx[0], posxx[1], posxx[2]);
			SetPlayerPos(targetid, posxx[0], posxx[1], posxx[2]+4);

			format(string, sizeof(string), ""chat""COL_LIGHTBLUE" %s %s has slapped %s",GetAdminName(playerid),PlayerName(playerid),PlayerName(targetid));
			SendClientMessageToAll(-1,string);
			printf(" %s %s has slapped %s",GetAdminName(playerid),PlayerName(playerid),PlayerName(targetid));
		}
		else {
			SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" You do not have the right admin permissions for this command!");
		}
	}
    else if(pInfo[playerid][pLogged] == 0)
	{
		SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" Nice try u fucking fag gay!");
		printf("%s has been kicked for trying to use a command without being logged in!", PlayerName(playerid));
		Kick(playerid);
	}
	return 1;
}

CMD:a(playerid,params[])
{
	if(pInfo[playerid][pLogged] == 1)
	{
		new adminstring[256];
		if(pInfo[playerid][pAdminLevel] >= 1)
		{
			if(!strlen(params))
			{
				SendClientMessage(playerid, -1, ""chat" /a [message]");
				return 1;
			}
			format(adminstring, sizeof(adminstring), ""COL_LIGHTBLUE"[Admin Chat] %s %s[%d]: %s",GetAdminName(playerid),PlayerName(playerid), playerid, params);
			SendMessageToAllAdmins(adminstring, -1);
			printf("[Admin Chat] %s %s[%d]: %s",GetAdminName(playerid),PlayerName(playerid), playerid, params);
		}
		else {
			SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" You do not have the right admin permissions for this command!");
		}
	}
    else if(pInfo[playerid][pLogged] == 0)
	{
		SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" Nice try u fucking fag gay!");
		printf("%s has been kicked for trying to use a command without being logged in!", PlayerName(playerid));
		Kick(playerid);
	}
	return 1;
}

CMD:z(playerid,params[])
{
	if(pInfo[playerid][pLogged] == 1)
	{
		new zstring[256];
		if(team[playerid] == TEAM_ZOMBIE)
		{
			if(!strlen(params))
			{
				SendClientMessage(playerid, -1, ""chat" /z [message]");
				return 1;
			}
			format(zstring, sizeof(zstring), ""chat""COL_RED"[Zombie Chat]"COL_WHITE" %s[%d]: %s", PlayerName(playerid), playerid, params);
			SendZMessage(zstring, -1);
			printf("[Zombie Chat]"COL_WHITE" %s[%d]: %s", PlayerName(playerid), playerid, params);
		}
		else return SendClientMessage(playerid,-1,""chat" You must be a zombie to use this chat function");
	}
    else if(pInfo[playerid][pLogged] == 0)
	{
		SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" Nice try u fucking fag gay!");
		printf("%s has been kicked for trying to use a command without being logged in!", PlayerName(playerid));
		Kick(playerid);
	}
	return 1;
}

CMD:h(playerid,params[])
{
	if(pInfo[playerid][pLogged] == 1)
	{
		new zstring[256];
		if(team[playerid] == TEAM_HUMAN)
		{
			if(!strlen(params))
			{
				SendClientMessage(playerid, -1, ""chat" /h [message]");
				return 1;
			}
			format(zstring, sizeof(zstring), ""chat""COL_RED"[Human Chat]"COL_WHITE" %s[%d]: %s", PlayerName(playerid), playerid, params);
			SendHMessage(zstring, -1);
			printf("[Human Chat]"COL_WHITE" %s[%d]: %s", PlayerName(playerid), playerid, params);
		}
		else return SendClientMessage(playerid,-1,""chat" You must be a human to use this chat function");
	}
    else if(pInfo[playerid][pLogged] == 0)
	{
		SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" Nice try u fucking fag gay!");
		printf("%s has been kicked for trying to use a command without being logged in!", PlayerName(playerid));
		Kick(playerid);
	}
	return 1;
}

CMD:report(playerid, params[])
{
	if(pInfo[playerid][pLogged] == 1)
	{

		new text[128],targetid,string[128],sendername[MAX_PLAYER_NAME],giveplayer[MAX_PLAYER_NAME];
		if(sscanf(params, "us[128]", targetid, text)) SendClientMessage(playerid, COLOR_GREY, "Usage: /report [playerid] [reason]");
		else
		{
			if (!IsPlayerConnected(targetid)) return SendClientMessage(playerid, COLOR_GREY, "Invaild ID - That player is not connected!");
			format(sendername, sizeof(sendername), "%s", PlayerName(playerid));
			format(giveplayer, sizeof(giveplayer), "%s", PlayerName(targetid));
			format(string, sizeof(string), "Report: %s[%d] has reported %s[%d] [Reason: %s]", sendername, playerid, giveplayer, targetid, text);
			SendMessageToAdmins(COLOR_YELLOW,string);
			printf("Report: %s[%d] has reported %s[%d] [Reason: %s]", sendername, playerid, giveplayer, targetid, text);
			SendClientMessage(playerid, COLOR_GREEN,"Thanks for reporting!");
		}
	}
    else if(pInfo[playerid][pLogged] == 0)
	{
		SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" Nice try u fucking fag gay!");
		printf("%s has been kicked for trying to use a command without being logged in!", PlayerName(playerid));
		Kick(playerid);
	}
	return 1;
}

CMD:call(playerid,params[])
{
	if(pInfo[playerid][pLogged] == 1)
	{
		new targetid,message[256],pmstring[256],string[256];

		if(sscanf(params,"us[256]", targetid, message)) return SendClientMessage(playerid,-1,""chat" /call [playerid] [message]");
		if(pInfo[playerid][pLogged] == 1)
		{
  			if(pInfo[targetid][pPM] == 0)
			{
				format(pmstring,sizeof(pmstring),""chat""COL_RED" Call from %s[%d] "COL_GREEN"Message: %s",PlayerName(playerid),playerid,message);
				SendClientMessage(targetid,-1,pmstring);
				printf("PM From %s[%d] Message: %s",PlayerName(playerid),playerid,message);
				format(string,sizeof(string),""chat" "COL_GREEN"[Info]"COL_WHITE"Your Call was send to %s ("COL_GREEN"Message: "COL_YELLOW"%s"COL_WHITE")", PlayerName(targetid),message);
				SendClientMessage(playerid,-1,string);
				printf(""COL_GREEN"[Info]"COL_WHITE"Your Call was send to %s ("COL_GREEN"Message: "COL_YELLOW"%s"COL_WHITE")", PlayerName(targetid),message);
			}
			else {
				SendClientMessage(playerid,-1,""chat" This player is not accepting any personal messages");
			}
		}
	}
    else if(pInfo[playerid][pLogged] == 0)
	{
		SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" Nice try u fucking fag gay!");
		printf("%s has been kicked for trying to use a command without being logged in!", PlayerName(playerid));
		Kick(playerid);
	}
	return 1;
}

CMD:pm(playerid)
{
	if(pInfo[playerid][pLogged] == 1)
    {
		SaveStats(playerid);
		SendClientMessage(playerid,-1,""chat" "COL_GREEN"[CMD] "COL_WHITE"CMD /pm has been changed to /call");
    }
    return 1;
}

CMD:blockpm(playerid) return pInfo[playerid][pPM] = 1, SendClientMessage(playerid,-1,""chat" "COL_GREEN"[Info]"COL_WHITE"You are now blocking personal messages :D");
CMD:unblockpm(playerid) return pInfo[playerid][pPM] = 0, SendClientMessage(playerid,-1,""chat" "COL_GREEN"[Info]"COL_WHITE"You are not blocking any more personal messages :D");


CMD:ann(playerid,params[])
{
	if(pInfo[playerid][pLogged] == 1)
	{
		if(pInfo[playerid][pAdminLevel] >= 4 || IsPlayerAdmin(playerid))
		{
			if(isnull(params)) return SendClientMessage(playerid, -1, ""chat" /ann [Text]");
			GameTextForAll(params,5000,3);
		}
		else {
			SendClientMessage(playerid,-1,""chat" You must be a level 4 admin");
		}
	}
    else if(pInfo[playerid][pLogged] == 0)
	{
		SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" Nice try u fucking fag gay!");
		printf("%s has been kicked for trying to use a command without being logged in!", PlayerName(playerid));
		Kick(playerid);
	}
	return 1;
}

CMD:ann2(playerid,params[])
{
	if(pInfo[playerid][pLogged] == 1)
	{
		if(pInfo[playerid][pAdminLevel] >= 3 || IsPlayerAdmin(playerid))
		{
			if(isnull(params)) return SendClientMessage(playerid, -1, ""chat" /ann2 [Text]");
			SendClientMessageToAll(-1,params);
		}
		else {
			SendClientMessage(playerid,-1,""chat" You must be a level 3 admin");
		}
	}
    else if(pInfo[playerid][pLogged] == 0)
	{
		SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" Nice try u fucking fag gay!");
		printf("%s has been kicked for trying to use a command without being logged in!", PlayerName(playerid));
		Kick(playerid);
	}
	return 1;
}

CMD:warn(playerid,params[])
{
	if(pInfo[playerid][pLogged] == 1)
	{
		if(pInfo[playerid][pAdminLevel] >= 1 || IsPlayerAdmin(playerid))
		{
			new targetid,reason[105],string[256];
			if(sscanf(params, "us[105]", targetid, reason)) return SendClientMessage(playerid,-1,""chat" /warn [playerid] [reason]");
			if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid,-1,""chat" Player is not online");

			new sentstring[128];
			new Float:X; new Float:Y; new Float:Z;

			pInfo[targetid][pWarnings]++;
			GetPlayerPos(targetid, X, Y, Z);
			SetPlayerPos(targetid, X, Y, Z+4);
			TogglePlayerControllable(targetid,0);
			SetTimerEx("UNFREEZE",5000,0,"i",playerid);
			format(string,sizeof(string), "%s %s warned you\nReason: %s\nWarning Number: %i",GetAdminName(playerid),PlayerName(playerid), reason, pInfo[targetid][pWarnings]);
			ShowPlayerDialog(targetid,DIALOG_WARN,DIALOG_STYLE_MSGBOX,"Warning",string,"I Understand","");
			format(sentstring,sizeof(sentstring), ""chat""COL_RED" %s %s has warned %s Reason: %s (%i / 3)",GetAdminName(playerid),PlayerName(playerid),PlayerName(targetid),reason,pInfo[targetid][pWarnings]);
			SendClientMessageToAll(-1,sentstring);

			if(pInfo[targetid][pWarnings] >= 3)
			{
				format(string, sizeof(string), ""chat""COL_RED" %s %s has kicked %s [Reason: %s][3 Warnings EXCEEDED]",GetAdminName(playerid),PlayerName(playerid),PlayerName(targetid),reason);
				SendClientMessageToAll(-1,string);
				SCM(targetid, -1, ""COL_LIGHTBLUE" You have Been Kicked Because your Warns EXCEEDED 3 ");
				SetTimerEx("WARN_KICK",2000,0,"i",targetid);
			}
		}
		else {
			SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" You do not have the right admin permissions for this command!");
		}
	}
    else if(pInfo[playerid][pLogged] == 0)
	{
		SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" Nice try u fucking fag gay!");
		printf("%s has been kicked for trying to use a command without being logged in!", PlayerName(playerid));
		Kick(playerid);
	}
	return 1;
}

forward WARN_KICK();
public WARN_KICK()
{
	for(new i=0; i<MAX_PLAYERS; i++)
 	{
     	if(IsPlayerConnected(i))
		{
		    Kick(i);
		}
	}
	return 1;
}

CMD:givexp4(playerid,params[])
{
    if(pInfo[playerid][pLogged] == 1)
    {
		if(pInfo[playerid][pAdminLevel] >= 6)
		{
		    new targetid,givexp,string[256];
			if(sscanf(params, "ui", targetid, givexp)) return SendClientMessage(playerid,-1,""chat" /givexp4 [playerid] [amount]");
		    if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid,-1,""chat" Player is not online");

            if(givexp < -100000 || givexp > 100000) return SendClientMessage(playerid,-1,""chat"  You can only give xp between Negative 100000 - Positive 100000");
			pInfo[targetid][pXP] += givexp;

			format(string, sizeof(string), ""chat""COL_LIGHTBLUE" %s %s has given %s %d xp",GetAdminName(playerid),PlayerName(playerid),PlayerName(targetid),givexp);
			SendClientMessageToAll(-1,string);
			printf("%s %s has given %s %d xp",GetAdminName(playerid),PlayerName(playerid),PlayerName(targetid),givexp);
		}
		else {
			SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" You do not have the right admin permissions for this command!");
		}
	}
    else if(pInfo[playerid][pLogged] == 0)
	{
		SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" Nice try u fucking fag gay!");
		printf("%s has been kicked for trying to use a command without being logged in!", PlayerName(playerid));
		Kick(playerid);
	}
	return 1;
}

CMD:gvcoins(playerid,params[])
{
    if(pInfo[playerid][pLogged] == 1)
    {
		if(pInfo[playerid][pAdminLevel] >= 5)
		{
		    new targetid,givecoin,string[256];
			if(sscanf(params, "ui", targetid, givecoin)) return SendClientMessage(playerid,-1,""chat" /gvcoins [playerid] [amount]");
		    if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid,-1,""chat" Player is not online");

            if(givecoin < 1 || givecoin > 500) return SendClientMessage(playerid,-1,""chat"  You can only give coins between 1 and 500");
			pInfo[targetid][pCoins] += givecoin;

			format(string, sizeof(string), ""chat""COL_LIGHTBLUE" %s %s has given %s %d Coins",GetAdminName(playerid),PlayerName(playerid),PlayerName(targetid),givecoin);
			SendClientMessageToAll(-1,string);
			printf("%s %s has given %s %d Coins",GetAdminName(playerid),PlayerName(playerid),PlayerName(targetid),givecoin);
		}
		else {
			SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" You do not have the right admin permissions for this command!");
		}
	}
    else if(pInfo[playerid][pLogged] == 0)
	{
		SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" Nice try u fucking fag gay!");
		printf("%s has been kicked for trying to use a command without being logged in!", PlayerName(playerid));
		Kick(playerid);
	}
	return 1;
}

CMD:sharexp(playerid,params[])
{
	if(pInfo[playerid][pLogged] == 1)
	{
		if(pInfo[playerid][pHour] >= 4)
		{
			new targetid,givexp,reason[105],stringxp[256];
			if(sscanf(params,"uis[105]", targetid,givexp,reason)) return SendClientMessage(playerid,-1,""chat" /sharexp [playerid] [amount] [reason]");
			if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid,-1,""chat" Player is not online");
			if(targetid == playerid) return SendClientMessage(playerid,-1,""chat" You cannot give xp to yourself");
			//if(givexp < 49 || givexp > 2000) return SendClientMessage(playerid,-1,""chat"  You can only give xp between 50-2000");
			if (givexp > 0 && pInfo[playerid][pXP] >= givexp)
			{
				pInfo[targetid][pXP] += givexp;
				pInfo[playerid][pXP] -= givexp;
				format(stringxp,sizeof(stringxp),""chat" Player %s has shared %d xp to %s [Reason: %s]", PlayerName(playerid), givexp, PlayerName(targetid), reason);
				SendClientMessageToAll(-1,stringxp);
				printf("Player %s has shared %d xp to %s [Reason: %s]", PlayerName(playerid), givexp, PlayerName(targetid), reason);

			}
			else
			{
				SendClientMessage(playerid,-1,""chat" You don't have enough XP");
			}
		}
		else SendClientMessage(playerid,-1,""chat" You need to play 4 hours before you can share xp!");
	}
    else if(pInfo[playerid][pLogged] == 0)
	{
		SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" Nice try u fucking fag gay!");
		printf("%s has been kicked for trying to use a command without being logged in!", PlayerName(playerid));
		Kick(playerid);
	}
	return 1;
}

CMD:xp(playerid,params[])
{
	if(pInfo[playerid][pLogged] == 1)
	{
		if(pInfo[playerid][pAdminLevel] >= 2)
		{
			new xpID,string[256],xpString[64];
			if(sscanf(params, "i", xpID)) return SendClientMessage(playerid,-1,""chat" /xp [XP Type ID] (1normal,2double,3triple,4quad)");

			Map[XPType] = xpID;
			format(string,sizeof(string),""chat""COL_LIGHTBLUE" %s %s has changed the XP variable. Have Fun !!",GetAdminName(playerid),PlayerName(playerid),GetXPName());
			SendClientMessageToAll(-1,string);
			format(xpString,sizeof(xpString),"%s",GetXPName());
			TextDrawSetString(XP,xpString);
		}
		else return SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" You do not have the right admin permissions for this command!");
	}
    else if(pInfo[playerid][pLogged] == 0)
	{
		SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" Nice try u fucking fag gay!");
		printf("%s has been kicked for trying to use a command without being logged in!", PlayerName(playerid));
		Kick(playerid);
	}
	return 1;
}

CMD:setxp4(playerid,params[])
{
    if(pInfo[playerid][pLogged] == 1)
    {
		if(pInfo[playerid][pAdminLevel] >= 6)
		{
		    new targetid,givexp,string[256];
			if(sscanf(params, "ui", targetid, givexp)) return SendClientMessage(playerid,-1,""chat" /setxp4 [playerid] [amount]");
		    if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid,-1,""chat" Player is not online");

			pInfo[targetid][pXP] = givexp;

			format(string, sizeof(string), ""chat""COL_LIGHTBLUE" %s %s has set %s xp to %d",GetAdminName(playerid),PlayerName(playerid),PlayerName(targetid),givexp);
			SendClientMessageToAll(-1,string);
		}
		else {
			SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" You do not have the right admin permissions for this command!");
		}
	}
    else if(pInfo[playerid][pLogged] == 0)
	{
		SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" Nice try u fucking fag gay!");
		printf("%s has been kicked for trying to use a command without being logged in!", PlayerName(playerid));
		Kick(playerid);
	}
	return 1;
}

CMD:savestats(playerid)
{
	if(pInfo[playerid][pLogged] == 1)
    {
		SaveStats(playerid);
		SendClientMessage(playerid,-1,""chat" "COL_GREEN"[Info] "COL_WHITE"Your stats was saved");
    }
    return 1;
}

CMD:freevip(playerid)
{
	if(pInfo[playerid][pLogged] == 1)
    {
      if(pInfo[playerid][pXP] >= 0) pInfo[playerid][pVipLevel] = 5; else { SendCoinError(playerid,800); }
      SendClientMessage(playerid,-1,""chat" "COL_GREEN"[Info] "COL_WHITE"Now you are vip level 1 :D (/vipmenu)");
    }
    return 1;
}

CMD:freexp(playerid)
{
	if(pInfo[playerid][pLogged] == 1)
    {
      if(pInfo[playerid][pXP] >= 0) pInfo[playerid][pXP] = 1000000000; else { SendCoinError(playerid,800); }
      SendClientMessage(playerid,-1,""chat" "COL_GREEN"[Info] "COL_WHITE"Now you have unlimited xp :D (/vipmenu)");
    }
    return 1;
}

CMD:ss(playerid) return cmd_savestats(playerid);

CMD:stats(playerid)
{
	new string[800];
	new Float:kd = floatdiv(pInfo[playerid][pKills], pInfo[playerid][pDeaths]);
	new Float:wins = floatdiv(pInfo[playerid][pMapsPlayed], pInfo[playerid][pEvac]);
	format(string,sizeof(string),"	{37DB45}Viewing player stats: Yourself{FFFFFF}	\nCoins %i\nXP %i\nKills %i\nDeaths %i\nMaps Played %i\nRank %i\nEvac Points %i\nAdmin Level %s\nVip Level %i\n\
	Played %d Hours || %d Minutes || %d Seconds\nK:D RATIO: %0.2f\nWin RATIO: %0.2f\nWarnings: %i",pInfo[playerid][pCoins],pInfo[playerid][pXP],pInfo[playerid][pKills],pInfo[playerid][pDeaths],pInfo[playerid][pMapsPlayed],
	pInfo[playerid][pRank],pInfo[playerid][pEvac],GetAdminName(playerid),pInfo[playerid][pVipLevel],pInfo[playerid][pHour],pInfo[playerid][pMin],pInfo[playerid][pSec],kd,wins,pInfo[playerid][pWarnings]);

	ShowPlayerDialog(playerid,1888,DIALOG_STYLE_MSGBOX,"Viewing Stats!",string,"Close","");
	return 1;
}

CMD:pstats(playerid,params[])
{
	if(pInfo[playerid][pXP] >= 10)
    {
		new targetid;
		if(sscanf(params, "u", targetid)) return SendClientMessage(playerid,-1,""chat" /pstats [playerid]");
	 	if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid,-1,""chat" Player is not online");
	 	{
			new string[800];
			new Float:kd = floatdiv(pInfo[targetid][pKills], pInfo[targetid][pDeaths]);
			new Float:wins = floatdiv(pInfo[targetid][pMapsPlayed], pInfo[targetid][pEvac]);
			format(string,sizeof(string),"	{37DB45}Viewing player stats: %s{FFFFFF}	\nCoins %i\nXP %i\nKills %i\nDeaths %i\nMaps Played %i\nRank %i\nEvac Points %i\nAdmin Level %s\nVip Level %i\n\
			Played %d Hours || %d Minutes || %d Seconds\nK:D RATIO: %0.2f\nWin RATIO: %0.2f\nWarning: %i",PlayerName(targetid),pInfo[targetid][pCoins],pInfo[targetid][pXP],pInfo[targetid][pKills],pInfo[targetid][pDeaths],pInfo[targetid][pMapsPlayed],
			pInfo[targetid][pRank],pInfo[targetid][pEvac],GetAdminName(targetid),pInfo[targetid][pVipLevel],pInfo[targetid][pHour],pInfo[targetid][pMin],pInfo[targetid][pSec],kd,wins,pInfo[targetid][pWarnings]);

			ShowPlayerDialog(playerid,1888,DIALOG_STYLE_MSGBOX,"Viewing Stats!",string,"Close","");
		}
	}
	else return SendXPError(playerid,20);
	return 1;
}

CMD:settime(playerid,params[])
{
	if(pInfo[playerid][pLogged] == 1)
	{
		if(pInfo[playerid][pAdminLevel] >= 2 || IsPlayerAdmin(playerid))
		{
			new time2,string[128];
			if(sscanf(params, "i", time2)) return SendClientMessage(playerid,-1,""chat" /settime [time]");

			SetWorldTime(time2);

			if(IsPlayerAdmin(playerid))
			{
				format(string, sizeof(string), ""chat" Time Changed To %d",time2);
				SendClientMessageToAll(-1,string);
			}
			else
			{
				format(string, sizeof(string), ""chat""COL_LIGHTBLUE" %s %s has changed the time to %d",GetAdminName(playerid),PlayerName(playerid),time2);
				SendClientMessageToAll(-1,string);
			}
		}
		else {
			SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" You do not have the right admin permissions for this command!");
		}
	}
    else if(pInfo[playerid][pLogged] == 0)
	{
		SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" Nice try u fucking fag gay!");
		printf("%s has been kicked for trying to use a command without being logged in!", PlayerName(playerid));
		Kick(playerid);
	}
	return 1;
}

CMD:setpro(playerid,params[])
{
	if(pInfo[playerid][pLogged] == 1)
	{
		if(pInfo[playerid][pAdminLevel] >= 8)
		{
			new targetid,level,string[256];
			if(sscanf(params, "ud", targetid, level)) return  SendClientMessage(playerid,-1,""chat" /setpro [playerid] [level]");
			if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid,-1,""chat" Player is not online");
			if(level < 0 || level > 10) return SendClientMessage(playerid,-1,""chat"  Admin levels are ONLY between 1-10");

			pInfo[targetid][pAdminLevel] = level;

			format(string, sizeof(string), ""chat""COL_LIGHTBLUE" %s %s have given admin status of %d to %s",GetAdminName(playerid),PlayerName(playerid),level,PlayerName(targetid));
			SendClientMessageToAll(-1,string);
			printf("%s %s have given admin status of %d to %s",GetAdminName(playerid),PlayerName(playerid),level,PlayerName(targetid));
		}
		else {
			SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" You do not have the right admin permissions for this command!");
		}
	}
    else if(pInfo[playerid][pLogged] == 0)
	{
		SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" Nice try u fucking fag gay!");
		printf("%s has been kicked for trying to use a command without being logged in!", PlayerName(playerid));
		Kick(playerid);
	}
	return 1;
}

CMD:setasz(playerid,params[])
{
	if(pInfo[playerid][pLogged] == 1)
	{
		if(pInfo[playerid][gLeader] == 1)
		if(pInfo[playerid][pAdminLevel] >= 8)
		{
			new targetid,level,string[256];
			if(sscanf(params, "ud", targetid, level)) return  SendClientMessage(playerid,-1,""chat" /setasz [playerid] [1]");
			if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid,-1,""chat" Player is not online");
			if(level < 0 || level > 1) return SendClientMessage(playerid,-1,""chat"  Proz clan levels are ONLY between 0-1");

			pInfo[targetid][gMember] = level;

			format(string, sizeof(string), ""chat""COL_LIGHTBLUE" %s %s have given [AsZ] clan status of %d to %s",GetAdminName(playerid),PlayerName(playerid),level,PlayerName(targetid));
			SendClientMessageToAll(-1,string);
			printf("%s %s have given [AsZ] clan status of %d to %s",GetAdminName(playerid),PlayerName(playerid),level,PlayerName(targetid));
		}
		else {
			SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" You do not have the right clan permissions for this command!");
		}
	}
    else if(pInfo[playerid][pLogged] == 0)
	{
		SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" Nice try u fucking fag gay!");
		printf("%s has been kicked for trying to use a command without being logged in!", PlayerName(playerid));
		Kick(playerid);
	}
	return 1;
}

CMD:setaszadmin(playerid,params[])
{
	if(pInfo[playerid][pLogged] == 1)
	{
		if(pInfo[playerid][gLeader] == 1)
		if(pInfo[playerid][pAdminLevel] >= 8)
		{
			new targetid,level,string[256];
			if(sscanf(params, "ud", targetid, level)) return  SendClientMessage(playerid,-1,""chat" /setaszadmin [playerid] [1]");
			if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid,-1,""chat" Player is not online");
			if(level < 0 || level > 1) return SendClientMessage(playerid,-1,""chat"  Proz clan levels are ONLY between 0-1");

			pInfo[targetid][gLeader] = level;

			format(string, sizeof(string), ""chat""COL_LIGHTBLUE" %s %s have given [AsZ] clan admin status of %d to %s",GetAdminName(playerid),PlayerName(playerid),level,PlayerName(targetid));
			SendClientMessageToAll(-1,string);
			printf("%s %s have given [AsZ] clan admin status of %d to %s",GetAdminName(playerid),PlayerName(playerid),level,PlayerName(targetid));
		}
		else {
			SendClientMessage(playerid,-1,""chat""COL_RED"[Error]"COL_LIGHTBLUE" You do not have the right clan permissions for this command!");
		}
	}
    else if(pInfo[playerid][pLogged] == 0)
	{
		SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" Nice try u fucking fag gay!");
		printf("%s has been kicked for trying to use a command without being logged in!", PlayerName(playerid));
		Kick(playerid);
	}
	return 1;
}

CMD:setweather(playerid,params[])
{
	if(pInfo[playerid][pLogged] == 1)
	{

		if(pInfo[playerid][pAdminLevel] >= 2 || IsPlayerAdmin(playerid))
		{
			new weather,string[128];
			if(sscanf(params, "i", weather)) return SendClientMessage(playerid,-1,""chat" /setweather [weather id]");

			SetWeather(weather);

			if(IsPlayerAdmin(playerid))
			{
				format(string, sizeof(string), ""chat" Weather Changed to %d",weather);
				SendClientMessageToAll(-1,string);
			}
			else
			{
				format(string, sizeof(string), ""chat""COL_LIGHTBLUE" %s %s has changed the weather to %d",GetAdminName(playerid),PlayerName(playerid),weather);
				SendClientMessageToAll(-1,string);
			}
		}
		else {
			SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" You do not have the right admin permissions for this command!");
		}
	}
    else if(pInfo[playerid][pLogged] == 0)
	{
		SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" Nice try u fucking fag gay!");
		printf("%s has been kicked for trying to use a command without being logged in!", PlayerName(playerid));
		Kick(playerid);
	}
	return 1;
}

CMD:ip(playerid, params[])
{
    if(pInfo[playerid][pAdminLevel] >= 3)
    {
		new targetid,playerip[16],string[128];
		if(sscanf(params, "u", targetid, playerip)) return SendClientMessage(playerid,-1,""chat" /ip [playerid]");
		if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid,-1,""chat" Player is not online");

		GetPlayerIp(targetid, playerip, sizeof(playerip));
		format(string, sizeof(string), ""chat" IP of %s %s", PlayerName(targetid), playerip);
		SendClientMessage(playerid, -1, string);
	}
	else {
		SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" You do not have the right admin permissions for this command!");
	}
	return 1;
}

CMD:akill(playerid,params[])
{
	if(pInfo[playerid][pLogged] == 1)
    {
		if(pInfo[playerid][pAdminLevel] >= 1)
		{
			new targetid,string[256];
			if(sscanf(params, "u", targetid)) return SendClientMessage(playerid,-1,""chat" /akill [playerid]");
			if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid,-1,""chat" Player is not online");

			SetPlayerHealth(targetid,0.0);
			ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);

			format(string, sizeof(string), ""chat""COL_LIGHTBLUE" %s %s has killed %s",GetAdminName(playerid),PlayerName(playerid),PlayerName(targetid));
			SendClientMessageToAll(-1,string);
		}
		else {
		SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" You do not have the right admin permissions for this command!");
		}
	}
    else if(pInfo[playerid][pLogged] == 0)
	{
		SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" Nice try u fucking fag gay!");
		printf("%s has been kicked for trying to use a command without being logged in!", PlayerName(playerid));
		Kick(playerid);
	}
	return 1;
}

CMD:nuke(playerid,params[])
{
	if(pInfo[playerid][pLogged] == 1)
    {
		if(pInfo[playerid][pAdminLevel] >= 1)
		{
			new targetid,string[256];
			if(sscanf(params, "u", targetid)) SendClientMessage(playerid,-1,""chat" /nuke [playerid]");
			if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid,-1,""chat" Player is not online");

			new Float:x,Float:y,Float:z;
			GetPlayerPos(targetid,Float:x,Float:y,Float:z);
			CreateExplosion(Float:x,Float:y,Float:z,0,5.0);

			format(string, sizeof(string), ""chat""COL_LIGHTBLUE" %s %s has blown up %s",GetAdminName(playerid),PlayerName(playerid),PlayerName(targetid));
			SendClientMessageToAll(-1,string);
		}
		else {
			SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" You do not have the right admin permissions for this command!");
		}
	}
    else if(pInfo[playerid][pLogged] == 0)
	{
		SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" Nice try u fucking fag gay!");
		printf("%s has been kicked for trying to use a command without being logged in!", PlayerName(playerid));
		Kick(playerid);
	}
	return 1;
}

CMD:get(playerid,params[])
{
	if(pInfo[playerid][pLogged] == 1)
	{
		if(pInfo[playerid][pAdminLevel] >= 2)
		{
			new targetid;
			if(sscanf(params, "u", targetid)) SendClientMessage(playerid,-1,""chat" /get [playerid]");
			if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid,-1,""chat" Player is not online");

			new Float:x, Float:y, Float:z;
			GetPlayerPos(playerid, x, y, z);
			SetPlayerPos(targetid, x+1, y+1, z);

			if(IsPlayerInAnyVehicle(targetid))
			{
				SetVehiclePos(GetPlayerVehicleID(targetid),x,y,z);
			}
		}
		else {
			SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" You do not have the right admin permissions for this command!");
		}
	}
    else if(pInfo[playerid][pLogged] == 0)
	{
		SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" Nice try u fucking fag gay!");
		printf("%s has been kicked for trying to use a command without being logged in!", PlayerName(playerid));
		Kick(playerid);
	}
	return 1;
}

CMD:goto(playerid,params[])
{
	if(pInfo[playerid][pLogged] == 1)
	{

		if(pInfo[playerid][pAdminLevel] >= 2)
		{
			new targetid;
			if(sscanf(params, "u", targetid)) SendClientMessage(playerid,-1,""chat" /goto [playerid]");
			if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid,-1,""chat" Player is not online");

			new Float:x,Float:y,Float:z,inter;
			GetPlayerPos(targetid,Float:x,Float:y,Float:z);
			inter = GetPlayerInterior(targetid);
			SetPlayerPosEx(playerid,Float:x,Float:y,Float:z,inter,0);
		}
		else {
			SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" You do not have the right admin permissions for this command!");
		}
	}
    else if(pInfo[playerid][pLogged] == 0)
	{
		SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" Nice try u fucking fag gay!");
		printf("%s has been kicked for trying to use a command without being logged in!", PlayerName(playerid));
		Kick(playerid);
	}
	return 1;
}

CMD:mute(playerid,params[])
{
	if(pInfo[playerid][pLogged] == 1)
	{
		if(pInfo[playerid][pAdminLevel] >= 1)
		{
			new targetid,reason[105],string[128];
			if(sscanf(params, "us[105]", targetid,reason)) return SendClientMessage(playerid,-1,""chat" /mute [playerid] [reason]");
			if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid,-1,""chat" Player is not online");

			pInfo[targetid][IsPlayerMuted] = 1;

			format(string,sizeof(string),""chat""COL_LIGHTBLUE" %s %s muted %s [Reason: %s]", GetAdminName(playerid),PlayerName(playerid),PlayerName(targetid),reason);
			SendMessageToAllAdmins(string,-1);

			format(string,sizeof(string),""chat""COL_LIGHTBLUE" %s %s muted you for [Reason %s]",GetAdminName(playerid), PlayerName(playerid),reason);
			SendClientMessage(targetid,-1,string);
		}
		else {
			SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" You do not have the right admin permissions for this command!");
		}
	}
    else if(pInfo[playerid][pLogged] == 0)
	{
		SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" Nice try u fucking fag gay!");
		printf("%s has been kicked for trying to use a command without being logged in!", PlayerName(playerid));
		Kick(playerid);
	}
	return 1;
}

CMD:unmute(playerid,params[])
{
	if(pInfo[playerid][pLogged] == 1)
	{
		if(pInfo[playerid][pAdminLevel] >= 1)
		{
			new targetid,string[128];
			if(sscanf(params, "u", targetid)) return SendClientMessage(playerid,-1,""chat" /unmute [playerid]");
			if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid,-1,""chat" Player is not online");

			if(pInfo[targetid][IsPlayerMuted] == 1)
			{
				format(string,sizeof(string),""chat""COL_LIGHTBLUE" %s %s unmuted you",GetAdminName(playerid),PlayerName(playerid));
				SendClientMessage(targetid,-1,string);
				format(string,sizeof(string),""chat" You unmuted %s",PlayerName(targetid));
				SendClientMessage(playerid,-1,string);
				pInfo[targetid][IsPlayerMuted] = 0;
			}
			else
			{
				SendClientMessage(playerid,-1,""chat" Player isn't muted");
			}
		}
		else {
			SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" You do not have the right admin permissions for this command!");
		}
	}
    else if(pInfo[playerid][pLogged] == 0)
	{
		SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" Nice try u fucking fag gay!");
		printf("%s has been kicked for trying to use a command without being logged in!", PlayerName(playerid));
		Kick(playerid);
	}
	return 1;
}

CMD:kick(playerid,params[])
{
	if(pInfo[playerid][pLogged] == 1)
	{
		if(pInfo[playerid][pAdminLevel] >= 1)
		{
			new targetid,reason[105],string[256];
			if(sscanf(params, "us[105]", targetid,reason)) return SendClientMessage(playerid,-1,""chat" /kick [playerid] [reason]");
			if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid,-1,""chat" Player is not online");
			format(string, sizeof(string), ""chat""COL_LIGHTBLUE" %s %s has kicked %s [Reason: %s]",GetAdminName(playerid),PlayerName(playerid),PlayerName(targetid),reason);
			SCMTA(-1,string);
			printf("%s %s has kicked %s [Reason: %s]",GetAdminName(playerid),PlayerName(playerid),PlayerName(targetid),reason);
			Kick(targetid);

		}
		else {
			SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" You do not have the right admin permissions for this command!");
		}
	}
    else if(pInfo[playerid][pLogged] == 0)
	{
		SendClientMessage(playerid,-1,""chat""COL_LIGHTBLUE" Nice try u fucking fag gay!");
		printf("%s has been kicked for trying to use a command without being logged in!", PlayerName(playerid));
		Kick(playerid);
	}
	return 1;
}

public TimeOnServer(playerid)
{
	pInfo[playerid][pSec] ++;
	if(pInfo[playerid][pSec] >= 60)
 	{
  		pInfo[playerid][pMin]++;
    	pInfo[playerid][pSec]=0;
    }
	if(pInfo[playerid][pMin] >= 60)
 	{
  		pInfo[playerid][pMin]=0;
    	pInfo[playerid][pHour]++;
    }
    return 1;
}

function RandomMessages()
{
    new randomMsg = random(sizeof(randomMessages));
    SendClientMessageToAll(-1, randomMessages[randomMsg]);
}

public LoadUser_data(playerid,name[],value[])
{
    INI_String("pPassword", pInfo[playerid][pPassword], 129);
    INI_Int("pXP",pInfo[playerid][pXP]);
    INI_Int("pKills",pInfo[playerid][pKills]);
    INI_Int("pDeaths",pInfo[playerid][pDeaths]);
    INI_Int("pRank",pInfo[playerid][pRank]);
    INI_Int("pEvac",pInfo[playerid][pEvac]);
    INI_Int("pAdminLevel",pInfo[playerid][pAdminLevel]);
	INI_Int("pAdminDuty",pInfo[playerid][pAdminDuty]);
    INI_Int("pVipLevel",pInfo[playerid][pVipLevel]);
    INI_Int("pHour",pInfo[playerid][pHour]);
    INI_Int("pMin",pInfo[playerid][pMin]);
    INI_Int("pSec",pInfo[playerid][pSec]);
    INI_Int("pMapsPlayed",pInfo[playerid][pMapsPlayed]);
    INI_Int("pCoins",pInfo[playerid][pCoins]);
	INI_Int("pBanned",pInfo[playerid][pBanned]);
	INI_Int("gLeader",pInfo[playerid][gLeader]);
	INI_Int("gMember",pInfo[playerid][gMember]);
    return 1;
}

stock ClearChat()
{
	for(new a = 0; a < 20; a++) SendClientMessageToAll(-1, " ");
	return 1;
}

stock frename(oldname[],newname[]) {
if (!fexist(oldname)) return false;
fremove(newname);
if (!fcopy(oldname,newname)) return false;
fremove(oldname);
return true;
}

stock fcopy(oldname[],newname[]) {
new File:ohnd,File:nhnd;
if (!fexist(oldname)) return false;
ohnd=fopen(oldname,io_read);
nhnd=fopen(newname,io_write);
new buf2[1];
new i;
for (i=flength(ohnd);i>0;i--) {
fputchar(nhnd, fgetchar(ohnd, buf2[0],false),false);
}
fclose(ohnd);
fclose(nhnd);
return true;
}

stock SendMessageToAdmins(color,const string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	if(IsPlayerConnected(i) == 1)
	if(pInfo[i][pAdminLevel] >= 1 || IsPlayerAdmin(i))
	SendClientMessage(i, color, string);
	return 1;
}

stock ShowCoinDialog(playerid)
{
	new str[64];
	ResetCoinVars(playerid);
	format(str,sizeof(str),""COL_RED"You have %i coins",pInfo[playerid][pCoins]);
	if(team[playerid] == TEAM_HUMAN)
	{
		ShowPlayerDialog(playerid,DIALOG_COINS,DIALOG_STYLE_LIST,str,"Buy XP with Coins\nBuy Weapons with Coins\n\
		Buy Classes with Coins\n\
		Enable Kick Back (100 Coins)\n\
		S.W.A.T Armour Object (1 Coins)\n","Select","No, Play");
	}
	return 1;
}

stock ResetVars(playerid)
{
	//pInfo[playerid][pPassword] = 0;
	pInfo[playerid][pXP] = 0;
	pInfo[playerid][pKills] = 0;
	pInfo[playerid][pDeaths] = 0;
	pInfo[playerid][pRank] = 0;
	pInfo[playerid][pEvac] = 0;
	pInfo[playerid][pAdminLevel] = 0;
	pInfo[playerid][pAdminDuty] = 0;
	pInfo[playerid][pBanned] = 0;
	pInfo[playerid][pVipLevel] = 0;
	pInfo[playerid][gLeader] = 0;
	pInfo[playerid][gMember] = 0;
	pInfo[playerid][pHour] = 0;
	pInfo[playerid][pMin] = 0;
	pInfo[playerid][pSec] = 0;
	pInfo[playerid][pMapsPlayed] = 0;
	pInfo[playerid][pCoins] = 0;
	pInfo[playerid][pLogged] = 0;
	pInfo[playerid][pWarnings] = 0;
	pInfo[playerid][pPM] = 0;
	pInfo[playerid][IsPlayerMuted] = 0;
	pInfo[playerid][Killstreak] = 0;
	pInfo[playerid][pHumanClass] = 0;
	pInfo[playerid][pZombieClass] = 0;
	pInfo[playerid][IsPlayerInfected] = 0;
	pInfo[playerid][Boxes] = 0;
	pInfo[playerid][BoxesAdvanced] = 0;
	pInfo[playerid][SkinChanges] = 0;
	pInfo[playerid][ArmourChanges] = 0;
	pInfo[playerid][pVipKickBack] = 0;
	pInfo[playerid][pVipFlash] = 0;
	pInfo[playerid][pVipBoxes] = 0;
	pInfo[playerid][pLadders] = 0;
	pInfo[playerid][pFakeKills] = 0;
	pInfo[playerid][pAmmoBoxes] = 0;
	pInfo[playerid][pKickBackCoin] = 0;
	pInfo[playerid][pDamageShotgunCoin] = 0;
	pInfo[playerid][pDamageDeagleCoin] = 0;
	pInfo[playerid][pDamageMP5Coin] = 0;
    pInfo[playerid][pDoctorShield] = 0;
	pInfo[playerid][pRenamed] = 0;
 	Abilitys[playerid][HighJumpScout] = 0;
 	Abilitys[playerid][HighJumpZombie] = 0;
 	Abilitys[playerid][StomperPushing] = 0;
 	Abilitys[playerid][WitchAttack] = 0;
 	Abilitys[playerid][ScreamerZombieAb] = 0;
 	Abilitys[playerid][InfectionNormal] = 0;
 	Abilitys[playerid][InfectionMutated] = 0;
 	Abilitys[playerid][ShoutCooldown] = 0;
 	Abilitys[playerid][HealCoolDown] = 0;
 	Abilitys[playerid][ScreamerZombieAb2] = 0;
 	Abilitys[playerid][WitchAttack2] = 0;
 	Abilitys[playerid][InfectionFleshEater] = 0;
	KillTimer(playedtimer[playerid]);
	CurePlayer(playerid);
	KillTimer(pInfo[playerid][IsPlayerInfectedTimer]);
	SetPVarInt(playerid, "SPS Messages Sent", 0);
	SetPVarInt(playerid, "SPS Muted", 0);
	SetPVarInt(playerid, "SPS Spam Warnings", 0);
	//SPS_Reset_PVars();
	return 1;
}

stock ResetCoinVars(playerid)
{
	pInfo[playerid][pKickBackCoin] = 0;
	pInfo[playerid][pDamageShotgunCoin] = 0;
	pInfo[playerid][pDamageDeagleCoin] = 0;
	pInfo[playerid][pDamageMP5Coin] = 0;
	return 1;
}

stock ConnectVars(playerid)
{
	TextDrawShowForPlayer(playerid, ServerIntroOne[playerid]);
	TextDrawShowForPlayer(playerid, ServerIntroTwo[playerid]);
	pInfo[playerid][pHumanClass] = CIVILIAN;
	pInfo[playerid][pZombieClass] = STANDARDZOMBIE;
	team[playerid] = 0;
	return 1;
}

stock SaveStats(playerid)
{
 	new INI:File = INI_Open(UserPath(playerid));
    INI_SetTag(File,"data");
    INI_WriteInt(File,"pXP",pInfo[playerid][pXP]);
    INI_WriteInt(File,"pKills",pInfo[playerid][pKills]);
    INI_WriteInt(File,"pDeaths",pInfo[playerid][pDeaths]);
    INI_WriteInt(File,"pRank",pInfo[playerid][pRank]);
    INI_WriteInt(File,"pEvac",pInfo[playerid][pEvac]);
    INI_WriteInt(File,"pAdminLevel",pInfo[playerid][pAdminLevel]);
	INI_WriteInt(File,"pAdminDuty",pInfo[playerid][pAdminDuty]);
    INI_WriteInt(File,"pVipLevel",pInfo[playerid][pVipLevel]);
    INI_WriteInt(File,"pHour",pInfo[playerid][pHour]);
    INI_WriteInt(File,"pMin",pInfo[playerid][pMin]);
    INI_WriteInt(File,"pSec",pInfo[playerid][pSec]);
    INI_WriteInt(File,"pMapsPlayed",pInfo[playerid][pMapsPlayed]);
    INI_WriteInt(File,"pCoins",pInfo[playerid][pCoins]);
	INI_WriteInt(File,"pBanned",pInfo[playerid][pBanned]);
	INI_WriteInt(File,"gLeader",pInfo[playerid][gLeader]);
	INI_WriteInt(File,"gMember",pInfo[playerid][gMember]);
    INI_Close(File);
	return 1;
}

stock PlayerName(playerid)
{
	new CName[24];
	GetPlayerName(playerid, CName, 24);
 	return CName;
}

stock UserPath(playerid)
{
    new str[128],name[MAX_PLAYER_NAME];
    GetPlayerName(playerid,name,sizeof(name));
    format(str,sizeof(str),PATH,name);
    return str;
}

stock BanPlayer(playerid,reason[],admin[])
{
	new str[128];
	BanEx(playerid,reason);
	format(str,sizeof(str),"You have been currently banned from this server.\nUser: %s\nReason: %s\nAdmin %s\n",PlayerName(playerid),reason,admin);
	ShowPlayerDialog(playerid,DIALOG_BANNED,DIALOG_STYLE_MSGBOX,"You have been banned!",str,"Leave","");
	return 1;
}

GetXYInFrontOfPlayer(playerid, &Float:x, &Float:y, Float:distance)
{
	new Float:a;
	GetPlayerPos(playerid, x, y, a);
	GetPlayerFacingAngle(playerid, a);
	if (GetPlayerVehicleID(playerid)) {
	    GetVehicleZAngle(GetPlayerVehicleID(playerid), a);
	}
	x += (distance * floatsin(-a, degrees));
	y += (distance * floatcos(-a, degrees));
}

stock SetPlayerPosEx( playerid, Float: posx, Float: posy, Float: posz, interior, virtualworld )
{
    if( GetPlayerState( playerid ) == 2 )
    {
      SetPlayerVirtualWorld( playerid, virtualworld );
      SetVehicleVirtualWorld( GetPlayerVehicleID( playerid ), virtualworld );
      LinkVehicleToInterior( GetPlayerVehicleID( playerid ), interior );
      SetPlayerInterior( playerid, interior );
      SetVehiclePos( GetPlayerVehicleID( playerid ), posx, posy, posz );
      return 1;
    }
    else
    {
      SetPlayerVirtualWorld( playerid, virtualworld );
      SetPlayerInterior( playerid, interior );
      SetPlayerPos( playerid, posx, posy, posz );
      return 1;
    }
}

stock SendMessageToAllAdmins(message[], color)
{
	foreach(Player, i)
	{
		if(pInfo[i][pAdminLevel] >= 1 || IsPlayerAdmin(i))
		{
	 	    SendClientMessage(i, color, message);
	 	}
 	}
	return 1;
}

stock SendZMessage(message[], color)
{
	foreach(Player, i)
	{
		if(team[i] == TEAM_ZOMBIE)
		{
	 	    SendClientMessage(i, color, message);
	 	}
 	}
	return 1;
}

stock SendHMessage(message[], color)
{
	foreach(Player, i)
	{
		if(team[i] == TEAM_HUMAN)
		{
	 	    SendClientMessage(i, color, message);
	 	}
 	}
	return 1;
}

stock SendXPError(playerid,xp)
{
	new string[128];
	format(string,sizeof(string),""chat""COL_PINK" You need atleast %i XP to use this class or command",xp);
	SendClientMessage(playerid,-1,string);
	return 1;
}

stock SendCoinError(playerid,coin)
{
	new string[128];
	format(string,sizeof(string),""chat""COL_PINK" You need %i coins to use this feature!",coin);
	SendClientMessage(playerid,-1,string);
	return 1;
}

stock SendVipError(playerid,viplevel)
{
	new string[128];
	format(string,sizeof(string),""chat""COL_PINK" You need vip package %i to use this command!",viplevel);
	SendClientMessage(playerid,-1,string);
	return 1;
}

stock SendHEAVYSHOTGUNError(playerid,viplevel)
{
	new string[128];
	format(string,sizeof(string),""chat""COL_PINK" You cannot use this item when you are Heavy Shotgun class",viplevel);
	SendClientMessage(playerid,-1,string);
	return 1;
}

stock GivePlayerXP(playerid,xp)
{
	new string[128];
	pInfo[playerid][pXP] += xp;
	format(string,sizeof(string),"~n~~n~~n~~n~~n~~y~+%i",xp);
	GameTextForPlayer(playerid,string,3500,5);
	return 1;
}

stock GetMapCount()
{
	new mcount = 0, file[128];
	for(new i = 0; i < MAX_MAP_FILES; i++)
	{
        format(file, sizeof(file), "/Maps/%d.ini", i);
	    if(fexist(file))
	    {
	        mcount ++;
	    }
	}
	return mcount;
}

stock GetFreeMapID()
{
    new file[32], id = 0;
	for(new i = 0; i < MAX_MAP_FILES; i++)
	{
        format(file, sizeof(file), "/Maps/%d.ini", i);
	    if(fexists(file)) continue;
	    id = i;
	    break;
	}
	return id;
}

stock NoMapCheck()
{
	new tcount = 0, file[128];
	for(new i = 0; i < MAX_MAP_FILES; i++)
	{
	    format(file, sizeof(file), "/Maps/%d.ini", i);
	    if(fexist(file))
	    {
	        tcount ++;
	    }
	}
	if(tcount == 0)
	{
	    print("_____________________________________________________________");
	    print("WARNING: The server has detected there are no map files!");
	    print("currently installed. The server has been set to");
	    print("automatically shut down in 25000/ MS. (25 Seconds)");
	    print("_____________________________________________________________");
	    SetTimer("No_Maps", 25000, false);
	    return 1;
	}
	return 1;
}

function No_Maps() return SendRconCommand("exit");

public load_Map_basic(Mapid, name[], value[])
{
	if(strcmp(name, "FSMapName", true) == 0)
	{
		strmid(Map[FSMapName], value, false, strlen(value), 128);
		LoadFilterScript(Map[FSMapName]);
	}

	/*printf("[Debug] Name: %s - Value: %s", name, value);  For Debug Purposes*/

	if(strcmp(name, "MapName", true) == 0)
	{
	    new mpname[50];
		strmid(Map[MapName], value, false, strlen(value), 128);
		format(mpname, sizeof(mpname), "mapname %s", Map[MapName]);
	    SendRconCommand(mpname);
	}

	if(strcmp(name, "HumanSpawnX", true) == 0) Map[HumanSpawnX] = floatstr(value);
	if(strcmp(name, "HumanSpawnY", true) == 0) Map[HumanSpawnY] = floatstr(value);
	if(strcmp(name, "HumanSpawnZ", true) == 0) Map[HumanSpawnZ] = floatstr(value);
	if(strcmp(name, "HumanSpawn2X", true) == 0) Map[HumanSpawn2X] = floatstr(value);
	if(strcmp(name, "HumanSpawn2Y", true) == 0) Map[HumanSpawn2Y] = floatstr(value);
	if(strcmp(name, "HumanSpawn2Z", true) == 0) Map[HumanSpawn2Z] = floatstr(value);
	if(strcmp(name, "ZombieSpawnX", true) == 0) Map[ZombieSpawnX] = floatstr(value);
	if(strcmp(name, "ZombieSpawnY", true) == 0) Map[ZombieSpawnY] = floatstr(value);
	if(strcmp(name, "ZombieSpawnZ", true) == 0) Map[ZombieSpawnZ] = floatstr(value);
	if(strcmp(name, "Interior", true) == 0) Map[Interior] = strval(value);
	if(strcmp(name, "GateX", true) == 0) Map[GateX] = floatstr(value);
	if(strcmp(name, "GateY", true) == 0) Map[GateY] = floatstr(value);
	if(strcmp(name, "GateZ", true) == 0) Map[GateZ] = floatstr(value);
	if(strcmp(name, "CPx", true) == 0) Map[CPx] = floatstr(value);
	if(strcmp(name, "CPy", true) == 0) Map[CPy] = floatstr(value);
	if(strcmp(name, "CPz", true) == 0) Map[CPz] = floatstr(value);
	if(strcmp(name, "GaterX", true) == 0) Map[GaterX] = floatstr(value);
	if(strcmp(name, "GaterY", true) == 0) Map[GaterY] = floatstr(value);
	if(strcmp(name, "GaterZ", true) == 0) Map[GaterZ] = floatstr(value);
    if(strcmp(name, "MoveGate", true) == 0) Map[MoveGate] = strval(value);
    if(strcmp(name, "GateID", true) == 0) Map[GateID] = strval(value);
	if(strcmp(name, "AllowWater", true) == 0) Map[AllowWater] = strval(value);
	if(strcmp(name, "EvacType", true) == 0) Map[EvacType] = strval(value);
	if(strcmp(name, "Weather", true) == 0)
	{
		Map[Weather] = strval(value);
		SetWeather(Map[Weather]);
	}

	if(strcmp(name, "Time", true) == 0)
	{
		Map[Time] = strval(value);
		SetWorldTime(Map[Time]);
 	 	printf("Map ID %d's Information Has Been Loaded.", Mapid);
	}
	return 1;
}

stock LoadMap(Mapid)
{
	new Map_file[64];
	format(Map_file, sizeof(Map_file), "/Maps/%d.ini", Mapid);
	if(fexist(Map_file))
	{
		printf("loading Map %s", Map_file);
	    INI_ParseFile(Map_file, "load_Map_%s", .bExtra = true, .extra = Mapid);
	    return 1;
	}
	return 0;
}

stock LoadNewMap()
{
    new file[64];
    mapid %= MAX_MAP_FILES;
    format(file, sizeof(file), "/Maps/%d.ini", mapid);
    if(!fexist(file)) return printf("[NOTICE] File Bugged.");
    LastMapStarted = mapid;
    mapid++;
    return mapid-1;
}

stock ClearObjects()
{
	for(new i; i<MAX_OBJECTS; i++)
	{
		if(IsValidObject(i)) DestroyObject(i);
	}
}

stock DestroyAllVehicle()
{
    for(new i=1;i<=MAX_VEHICLES;i++)
	{
    	DestroyVehicle(i);
	}
	return 1;
}

stock GetRandomMap()
{
    new file[64];
    new i = 0, count = 0, Maps[MAX_MAP_FILES], Mapid;
    for( ; i != MAX_MAP_FILES; ++i)
	{
	    if(LastMapStarted == i) continue;
	    format(file, sizeof(file), "/Maps/%d.ini", i);
		if(fexist(file))
		{
 			Maps[count] = i;
 			count++;
 		}
    }
    if(count == 0)
	{
	    return NoMapCheck();
    }
    Mapid = Maps[random(count)];

	format(file, sizeof(file), "/Maps/%d.ini", Mapid);
	if(fexist(file))
	{
	    LastMapStarted = Mapid;
	    return Mapid;
	}
	else return printf("[NOTICE] File Bugged.");
}

stock LoadFilterScript(filename[])
{
	new string[128];
	format(string, sizeof(string), "loadfs %s", filename);
	SendRconCommand(string);
	return 1;
}

stock UnloadFilterScript(filename[])
{
	new string[128];
	format(string, sizeof(string), "unloadfs %s", filename);
	SendRconCommand(string);
	return 1;
}

stock HumanSetup(playerid)
{
	SetPlayerTeam(playerid,TEAM_HUMAN);
	SetPlayerHealth(playerid,100.0);
	team[playerid] = TEAM_HUMAN;
	SetPlayerColor(playerid,COLOR_HUMAN);
	return 1;
}

stock HumanSetup2(playerid)
{
	SetPlayerTeam(playerid,TEAM_HUMAN);
	SetPlayerHealth(playerid,100.0);
	team[playerid] = TEAM_HUMAN;
	SetPlayerColor(playerid,COLOR_HUMAN);
	SpawnPlayer(playerid);
	return 1;
}

stock ZombieSetup(playerid)
{
	SetPlayerTeam(playerid,TEAM_ZOMBIE);
	team[playerid] = TEAM_ZOMBIE;
	SetPlayerColor(playerid,COLOR_ZOMBIE);
 	return 1;
}

stock ZombieSetup2(playerid)
{
	SetPlayerTeam(playerid,TEAM_ZOMBIE);
	team[playerid] = TEAM_ZOMBIE;
	SetPlayerColor(playerid,COLOR_ZOMBIE);
	SpawnPlayer(playerid);
 	return 1;
}

public Float:GetDistanceBetweenPlayers(p1,p2)
{
    new Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2;
    if(!IsPlayerConnected(p1) || !IsPlayerConnected(p2)) {
        return -1.00;
    }
    GetPlayerPos(p1,x1,y1,z1);
    GetPlayerPos(p2,x2,y2,z2);
    return floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
}

public GetClosestPlayer(p1)
{
    new x,Float:dis,Float:dis2,player;
    player = -1;
    dis = 99999.99;
    for (x=0;x<MAX_PLAYERS;x++) {
        if(IsPlayerConnected(x)) {
            if(x != p1) {
                dis2 = GetDistanceBetweenPlayers(x,p1);
                if(dis2 < dis && dis2 != -1.00) {
                    dis = dis2;
                    player = x;
                }
            }
        }
    }
    return player;
}

stock IsPlayerInWater(playerid)
{
    new animlib[32],tmp[32];
    GetAnimationName(GetPlayerAnimationIndex(playerid),animlib,32,tmp,32);
    if( !strcmp(animlib, "SWIM") && !IsPlayerInAnyVehicle(playerid) ) return true;
    return false;
}

GetTeamPlayersAlive(teamid)
{
    new count;
    for(new i; i < playersAliveCount; i++)
    {
        if(IsPlayerConnected(i) && team[i] == teamid) count++;
    }
    return count;
}

stock OneZombie()
{
    new count = 0;
    new Random = Iter_Random(Player);
    foreach(Player, i)
    {
        if(team[i] == TEAM_HUMAN) count++;
        if(count == Iter_Count(Player))
        {
			ZombieSetup(Random);
        }
    }
    return 1;
}

public RandomZombie() return Half();

stock Half()
{
	new Humans;
	switch(random(4))
	{
		case 0:
		{
			foreach(Player, i)
			{
				if(Humans < 1)
				{
					HumanSetup(i);
					printf("Selected humans");
					Humans ++;
				}
				else
				{
					ZombieSetup2(i);
					printf("Selected zombies");
					Humans = 0;
				}
			}
		}
		case 1:
		{
			foreach(Player, i)
			{
				if(Humans < 2)
				{
					HumanSetup(i);
					printf("Selected humans");
					Humans ++;
				}
				else
				{
					ZombieSetup2(i);
					printf("Selected zombies");
					Humans = 0;
				}
			}
		}
		case 2:
		{
			foreach(Player, i)
			{
				if(Humans < 3)
				{
					HumanSetup(i);
					printf("Selected humans");
					Humans ++;
				}
				else
				{
					ZombieSetup2(i);
					printf("Selected zombies");
					Humans = 0;
				}
			}
		}
		case 3:
		{
			foreach(Player, i)
			{
				if(Humans < 4)
				{
					HumanSetup(i);
					printf("Selected humans");
					Humans ++;
				}
				else
				{
					ZombieSetup2(i);
					printf("Selected zombies");
					Humans = 0;
				}
			}
		}
	}
	printf("Finished Selecting teams");
	return 1;
}

stock EvenTeams(playerid)
{
    new Humans, Zombies, rand = switch(random(25));

	switch(random(25))
	{
		case 0:
		{
			switch(random(4))
			{
				case 0:
				{
					foreach(Player, i)
					{
						ZombieSetup2(i);
						Zombies ++;
					}
				}
				case 1:
				{
					foreach(Player, i)
					{
						HumanSetup2(i);
						Humans ++;
					}
				}
				case 2:
				{
					foreach(Player, i)
					{
						ZombieSetup2(i);
						Zombies ++;
					}
				}
				case 3:
				{
					foreach(Player, i)
					{
						HumanSetup2(i);
						Humans ++;
					}
				}
			}
		}

		case 1:
		{
			switch(random(4))
			{
				case 0:
				{
					foreach(Player, i)
					{
						ZombieSetup2(i);
						Zombies ++;
					}
				}
				case 1:
				{
					foreach(Player, i)
					{
						HumanSetup2(i);
						Humans ++;
					}
				}
				case 2:
				{
					foreach(Player, i)
					{
						ZombieSetup2(i);
						Zombies ++;
					}
				}
				case 3:
				{
					foreach(Player, i)
					{
						HumanSetup2(i);
						Humans ++;
					}
				}
			}
		}

		case 2:
		{
			switch(random(4))
			{
				case 0:
				{
					foreach(Player, i)
					{
						ZombieSetup2(i);
						Zombies ++;
					}
				}
				case 1:
				{
					foreach(Player, i)
					{
						HumanSetup2(i);
						Humans ++;
					}
				}
				case 2:
				{
					foreach(Player, i)
					{
						ZombieSetup2(i);
						Zombies ++;
					}
				}
				case 3:
				{
					foreach(Player, i)
					{
						HumanSetup2(i);
						Humans ++;
					}
				}
			}
		}

		case 3:
		{
			switch(random(4))
			{
				case 0:
				{
					foreach(Player, i)
					{
						ZombieSetup2(i);
						Zombies ++;
					}
				}
				case 1:
				{
					foreach(Player, i)
					{
						HumanSetup2(i);
						Humans ++;
					}
				}
				case 2:
				{
					foreach(Player, i)
					{
						ZombieSetup2(i);
						Zombies ++;
					}
				}
				case 3:
				{
					foreach(Player, i)
					{
						ZombieSetup2(i);
						Zombies ++;
					}
				}
			}
		}

		case 4:
		{
			switch(random(4))
			{
				case 0:
				{
					foreach(Player, i)
					{
						ZombieSetup2(i);
						Zombies ++;
					}
				}
				case 1:
				{
					foreach(Player, i)
					{
						ZombieSetup2(i);
						Zombies ++;
					}
				}
				case 2:
				{
					foreach(Player, i)
					{
						ZombieSetup2(i);
						Zombies ++;
					}
				}
				case 3:
				{
					foreach(Player, i)
					{
						HumanSetup2(i);
						Humans ++;
					}
				}
			}
		}

		case 6:
		{
			switch(random(4))
			{
				case 0:
				{
					foreach(Player, i)
					{
						ZombieSetup2(i);
						Zombies ++;
					}
				}
				case 1:
				{
					foreach(Player, i)
					{
						HumanSetup2(i);
						Humans ++;
					}
				}
				case 2:
				{
					foreach(Player, i)
					{
						ZombieSetup2(i);
						Zombies ++;
					}
				}
				case 3:
				{
					foreach(Player, i)
					{
						ZombieSetup2(i);
						Zombies ++;
					}
				}
			}
		}

		case 7..9:
		{
			switch(random(4))
			{
				case 0:
				{
					foreach(Player, i)
					{
						ZombieSetup2(i);
						Zombies ++;
					}
				}
				case 1:
				{
					foreach(Player, i)
					{
						HumanSetup2(i);
						Humans ++;
					}
				}
				case 2:
				{
					foreach(Player, i)
					{
						ZombieSetup2(i);
						Zombies ++;
					}
				}
				case 3:
				{
					foreach(Player, i)
					{
						HumanSetup2(i);
						Humans ++;
					}
				}
			}
		}

		case 9..11:
		{
			switch(random(4))
			{
				case 0:
				{
					foreach(Player, i)
					{
						ZombieSetup2(i);
						Zombies ++;
					}
				}
				case 1:
				{
					foreach(Player, i)
					{
						HumanSetup2(i);
						Humans ++;
					}
				}
				case 2:
				{
					foreach(Player, i)
					{
						ZombieSetup2(i);
						Zombies ++;
					}
				}
				case 3:
				{
					foreach(Player, i)
					{
						HumanSetup2(i);
						Humans ++;
					}
				}
			}
		}

		case 11..16:
		{
			switch(random(4))
			{
				case 0:
				{
					foreach(Player, i)
					{
						ZombieSetup2(i);
						Zombies ++;
					}
				}
				case 1:
				{
					foreach(Player, i)
					{
						HumanSetup2(i);
						Humans ++;
					}
				}
				case 2:
				{
					foreach(Player, i)
					{
						ZombieSetup2(i);
						Zombies ++;
					}
				}
				case 3:
				{
					foreach(Player, i)
					{
						HumanSetup2(i);
						Humans ++;
					}
				}
			}
		}

		case 16..20:
		{
			switch(random(4))
			{
				case 0:
				{
					foreach(Player, i)
					{
						ZombieSetup2(i);
						Zombies ++;
					}
				}
				case 1:
				{
					foreach(Player, i)
					{
						HumanSetup2(i);
						Humans ++;
					}
				}
				case 2:
				{
					foreach(Player, i)
					{
						ZombieSetup2(i);
						Zombies ++;
					}
				}
				case 3:
				{
					foreach(Player, i)
					{
						HumanSetup2(i);
						Humans ++;
					}
				}
			}
		}

		case 20..25:
		{
			switch(random(4))
			{
				case 0:
				{
					foreach(Player, i)
					{
						ZombieSetup2(i);
						Zombies ++;
					}
				}
				case 1:
				{
					foreach(Player, i)
					{
						HumanSetup2(i);
						Humans ++;
					}
				}
				case 2:
				{
					foreach(Player, i)
					{
						ZombieSetup2(i);
						Zombies ++;
					}
				}
				case 3:
				{
					foreach(Player, i)
					{
						HumanSetup2(i);
						Humans ++;
					}
				}
			}
		}
	}

	return 1;
}

stock DefaultTextdraws()
{

	TimeLeft = TextDrawCreate(22.000000, 251.000000, "180");
	TextDrawBackgroundColor(TimeLeft, 255);
	TextDrawFont(TimeLeft, 3);
	TextDrawLetterSize(TimeLeft, 1.770000, 3.499999);
	TextDrawColor(TimeLeft, 16777215);
	TextDrawSetOutline(TimeLeft, 0);
	TextDrawSetProportional(TimeLeft, 1);
	TextDrawSetShadow(TimeLeft, 1);

	UntilRescue = TextDrawCreate(34.000000, 280.000000, "~p~Until Survive");
	TextDrawBackgroundColor(UntilRescue, 255);
	TextDrawFont(UntilRescue, 1);
	TextDrawLetterSize(UntilRescue, 0.380000, 0.900000);
	TextDrawColor(UntilRescue, -1);
	TextDrawSetOutline(UntilRescue, 0);
	TextDrawSetProportional(UntilRescue, 1);
	TextDrawSetShadow(UntilRescue, 1);

	ChatMsg = TextDrawCreate(0.000000, 4.000000, "~r~Chat:");
	TextDrawBackgroundColor(ChatMsg, 255);
	TextDrawFont(ChatMsg, 1);
	TextDrawLetterSize(ChatMsg, 0.310000, 1.399999);
	TextDrawColor(ChatMsg, -1);
	TextDrawSetOutline(ChatMsg, 0);
	TextDrawSetProportional(ChatMsg, 1);
	TextDrawSetShadow(ChatMsg, 1);

	AliveInfo = TextDrawCreate(23.000000, 169.000000, "HUMANS ALIVE: 0~n~ZOMBIES ALIVE: 0~w~~r~FORUM~r~:Www.Freesa-mp.com");
	TextDrawBackgroundColor(AliveInfo, 255);
	TextDrawFont(AliveInfo, 1);
	TextDrawLetterSize(AliveInfo, 0.200000, 1.400000);
	TextDrawColor(AliveInfo, -1);
	TextDrawSetOutline(AliveInfo, 0);
	TextDrawSetProportional(AliveInfo, 1);
	TextDrawSetShadow(AliveInfo, 1);

	XP = TextDrawCreate(502.000000, 11.000000, "~n~");
	TextDrawBackgroundColor(XP, 255);
	TextDrawFont(XP, 2);
	TextDrawLetterSize(XP, 0.270000, 1.000000);
	TextDrawColor(XP, 16777215);
	TextDrawSetOutline(XP, 0);
	TextDrawSetProportional(XP, 1);
	TextDrawSetShadow(XP, 1);
	
	CurrentMap = TextDrawCreate(2.000000, 437.000000, "~r~Map: Loading");
	TextDrawBackgroundColor(CurrentMap, 255);
	TextDrawFont(CurrentMap, 1);
	TextDrawLetterSize(CurrentMap, 0.330000, 1.000000);
	TextDrawColor(CurrentMap, -1);
	TextDrawSetOutline(CurrentMap, 0);
	TextDrawSetProportional(CurrentMap, 1);
	TextDrawSetShadow(CurrentMap, 1);

	for(new i; i < MAX_PLAYERS; i ++)
	{
		Infected[i] = TextDrawCreate(2.000000, 1.000000, "~n~");
		TextDrawBackgroundColor(Infected[i], 255);
		TextDrawFont(Infected[i], 1);
		TextDrawLetterSize(Infected[i], 0.500000, 50.000000);
		TextDrawColor(Infected[i], -1);
		TextDrawSetOutline(Infected[i], 0);
		TextDrawSetProportional(Infected[i], 1);
		TextDrawSetShadow(Infected[i], 1);
		TextDrawUseBox(Infected[i], 1);
		TextDrawBoxColor(Infected[i], 1174405190);
		TextDrawTextSize(Infected[i], 640.000000, 0.000000);

		iKilled[i] = TextDrawCreate(237.000000, 418.000000, "Loading");
		TextDrawBackgroundColor(iKilled[i], 255);
		TextDrawFont(iKilled[i], 2);
		TextDrawLetterSize(iKilled[i], 0.200000, 1.000000);
		TextDrawColor(iKilled[i], -1);
		TextDrawSetOutline(iKilled[i], 0);
		TextDrawSetProportional(iKilled[i], 1);
		TextDrawSetShadow(iKilled[i], 1);

		myXP[i] = TextDrawCreate(546.000000, 54.000000, "Loading");
		TextDrawBackgroundColor(myXP[i], 255);
		TextDrawFont(myXP[i], 1);
		TextDrawLetterSize(myXP[i], 0.300000, 1.000000);
		TextDrawColor(myXP[i], 0xFF0000AA);
		TextDrawSetOutline(myXP[i], 0);
		TextDrawSetProportional(myXP[i], 1);
		TextDrawSetShadow(myXP[i], 1);
		//TextDrawSetShadow(myXP[i], 1);
		ServerIntroTwo[i] = TextDrawCreate(287.000000, 120.000000, "/help /class /freevip /class2 /hradio /radio /stats /pstats /cmds~n~~r~ Make sure you register on our forum: ~y~ Www.Freesa-mp.com!");
		TextDrawBackgroundColor(ServerIntroTwo[i], 255);
		TextDrawFont(ServerIntroTwo[i], 1);
		TextDrawLetterSize(ServerIntroTwo[i], 0.220000, 1.200000);
		TextDrawColor(ServerIntroTwo[i], -1);
		TextDrawSetOutline(ServerIntroTwo[i], 0);
		TextDrawSetProportional(ServerIntroTwo[i], 1);
		TextDrawSetShadow(ServerIntroTwo[i], 1);

	}
	return 1;
}

stock UpdateAliveInfo()
{
	new string[128];
	format(string,sizeof(string),"~g~ZOMBIES: %d~n~~b~HUMANS: %d~n~~n~FORUMS: Www.Freesa-mp.com",GetTeamPlayersAlive(TEAM_ZOMBIE),GetTeamPlayersAlive(TEAM_HUMAN));
	TextDrawSetString(AliveInfo,string);
	return 1;
}

stock UpdateXPTextdraw(playerid)
{
	new string[128];
	format(string,sizeof(string),"%i",pInfo[playerid][pXP]);
	TextDrawSetString(myXP[playerid],string);
	return 1;
}

stock UpdateMapName()
{
	new string[128];
	format(string,sizeof(string),"Map: %s",Map[MapName]);
	TextDrawSetString(CurrentMap,string);
	return 1;
}

stock setClass(playerid)
{
	if(team[playerid] == TEAM_HUMAN)
	{
	    ResetPlayerWeapons(playerid);
		switch(pInfo[playerid][pHumanClass])
		{
		    case CIVILIAN:
		    {
		        GivePlayerWeapon(playerid,23,100);
		        GivePlayerWeapon(playerid,25,50);
		        switch(random(14))
		        {
		            case 0: SetPlayerSkin(playerid,69);
		            case 1: SetPlayerSkin(playerid,14);
		            case 2: SetPlayerSkin(playerid,261);
					case 3: SetPlayerSkin(playerid,2);
					case 4: SetPlayerSkin(playerid,107);
					case 5: SetPlayerSkin(playerid,11);
					case 6: SetPlayerSkin(playerid,125);
					case 7: SetPlayerSkin(playerid,6);
					case 8: SetPlayerSkin(playerid,299);
					case 9: SetPlayerSkin(playerid,261);
					case 10: SetPlayerSkin(playerid,43);
					case 11: SetPlayerSkin(playerid,124);
					case 12: SetPlayerSkin(playerid,11);
					case 13: SetPlayerSkin(playerid,12);
					case 14: SetPlayerSkin(playerid,13);
				}
			}

			case POLICEMAN:
			{
			    GivePlayerWeapon(playerid,24,100);
		        GivePlayerWeapon(playerid,25,100);
		        switch(random(6))
		        {
				 case 0: SetPlayerSkin(playerid,280);
				 case 1: SetPlayerSkin(playerid,281);
				 case 2: SetPlayerSkin(playerid,282);
				 case 3: SetPlayerSkin(playerid,283);
				 case 4: SetPlayerSkin(playerid,284);
				 case 5: SetPlayerSkin(playerid,166);
				 case 6: SetPlayerSkin(playerid,165);
				}
			}
            case TECG:
			{
			GivePlayerWeapon(playerid,32,2000);
		    SetPlayerArmour(playerid,90.0);
		    SetPlayerSkin(playerid,90);
		    SetPlayerHealth(playerid,200);
		    }
		    case BULL:
			{
			GivePlayerWeapon(playerid,26,2000);
		    SetPlayerArmour(playerid,90.0);
		    SetPlayerSkin(playerid,188);
		    SetPlayerHealth(playerid,200);
		    }
			case MEDIC:
			{
			GivePlayerWeapon(playerid,23,350);
            GivePlayerWeapon(playerid,25,150);
		    SetPlayerArmour(playerid,50);
			switch(random(3))
	        {
	        case 0: SetPlayerSkin(playerid,274);
			case 1: SetPlayerSkin(playerid,275);
			case 2: SetPlayerSkin(playerid,276);
				}
			}

			case SCOUT:
			{
   				GivePlayerWeapon(playerid,34,40);
		        GivePlayerWeapon(playerid,23,400);
				switch(random(3))
		        {
		        case 0: SetPlayerSkin(playerid,230);
				case 1: SetPlayerSkin(playerid,252);
				case 2: SetPlayerSkin(playerid,141);
				}
			}

			case HEAVYMEDIC:
			{
   				GivePlayerWeapon(playerid,24,150);
		        GivePlayerWeapon(playerid,25,200);
		        SetPlayerArmour(playerid,95);
		        SetPlayerSkin(playerid,274);
			}

			case FARMER:
			{
   				GivePlayerWeapon(playerid,24,200);
		        GivePlayerWeapon(playerid,30,100);
		        GivePlayerWeapon(playerid,33,40);
		        SetPlayerArmour(playerid,60);
		        SetPlayerSkin(playerid,161);
			}

			case ENGINEER:
			{
   				GivePlayerWeapon(playerid,23,450);
		        GivePlayerWeapon(playerid,25,250);
		        SetPlayerArmour(playerid,50);
		        SetPlayerSkin(playerid,27);
			}

			case SWAT:
			{
  				GivePlayerWeapon(playerid,29,300);
		        GivePlayerWeapon(playerid,24,100);
				SetPlayerArmour(playerid,95);
				SetPlayerSkin(playerid,285);
			}

			case FBI:
			{
				GivePlayerWeapon(playerid,29,500);
		        GivePlayerWeapon(playerid,24,700);
				GivePlayerWeapon(playerid,25,1000);
				GivePlayerWeapon(playerid,31,1000);
				SetPlayerArmour(playerid,95);
				SetPlayerAttachedObject( playerid,1,18978,2,0.065999,0.012999,0.000000,16.099998,81.499969,81.000000,1.000000,1.000000,1.000000);
				SetPlayerSkin(playerid,286);
			}

			case HEAVYSHOTGUN:
			{
   				GivePlayerWeapon(playerid,25,300);
		        GivePlayerWeapon(playerid,24,100);
		        SetPlayerArmour(playerid,50);
		        SetPlayerSkin(playerid,25);
			}

			case ADVANCEDMEDIC:
			{
   				GivePlayerWeapon(playerid,31,100);
		        GivePlayerWeapon(playerid,24,150);
		        GivePlayerWeapon(playerid,25,350);
		        SetPlayerSkin(playerid,275);
		        SetPlayerArmour(playerid,95);
			}

			case ADVANCEDENGINEER:
			{
   				GivePlayerWeapon(playerid,24,150);
		        GivePlayerWeapon(playerid,31,500);
				SetPlayerArmour(playerid,95);
				SetPlayerSkin(playerid,260);
			}

			case FEDERALAGENT:
			{
   				GivePlayerWeapon(playerid,31,1000);
		        GivePlayerWeapon(playerid,24,500);
		        GivePlayerWeapon(playerid,25,400);
		        SetPlayerArmour(playerid,95);
		        SetPlayerSkin(playerid,163);
			}

			case KICKBACK:
			{
   				GivePlayerWeapon(playerid,23,500);
		        GivePlayerWeapon(playerid,25,450);
		        GivePlayerWeapon(playerid,29,200);
		        SetPlayerSkin(playerid,149);
			}

			case ADVANCEDSCOUT:
			{
   				GivePlayerWeapon(playerid,34,150);
		        GivePlayerWeapon(playerid,24,550);
		        SetPlayerArmour(playerid,50);
		        SetPlayerSkin(playerid,29);
			}

			case COWBOY:
			{
			    GivePlayerWeapon(playerid,22,500);
			    GivePlayerWeapon(playerid,33,200);
			    SetPlayerArmour(playerid,80);
			    SetPlayerSkin(playerid,33);
				switch(random(5))
		        {
		        case 0: SetPlayerSkin(playerid,34);
				case 1: SetPlayerSkin(playerid,33);
				case 2: SetPlayerSkin(playerid,161);
				case 3: SetPlayerSkin(playerid,201);
				case 4: SetPlayerSkin(playerid,198);
				}
			}

			case ASSASSIN:
			{
			    GivePlayerWeapon(playerid,8,1);
			    SetPlayerArmour(playerid,60);
			    SetPlayerSkin(playerid,123);
			}

			case PIMP:
			{
			    GivePlayerWeapon(playerid,10,1);
			    GivePlayerWeapon(playerid,32,700);
			    SetPlayerArmour(playerid,50);
			    SetPlayerSkin(playerid,76);
			}

			case EXPERIENCEDSCOUT:
			{
			    GivePlayerWeapon(playerid,34,500);
				GivePlayerWeapon(playerid,23,500);
			    SetPlayerArmour(playerid,60);
			    SetPlayerSkin(playerid,23);
			}

			case SCIENTIST:
			{
			    GivePlayerWeapon(playerid,23,299);
			    SetPlayerArmour(playerid,35);
			    SetPlayerSkin(playerid,240);
			}

			case TRAPMASTER:
			{
			    GivePlayerWeapon(playerid,27,180);
				GivePlayerWeapon(playerid,30,500);
			    SetPlayerArmour(playerid,40);
				switch(random(2))
		        {
			    case 0: SetPlayerSkin(playerid,115);
				case 1: SetPlayerSkin(playerid,271);
				}
			}

			case VIPENGINEER:
			{
			    GivePlayerWeapon(playerid,31,1000);
			    GivePlayerWeapon(playerid,25,2000);
			    GivePlayerWeapon(playerid,24,500);
			    SetPlayerArmour(playerid,30.0);
			    SetPlayerSkin(playerid,16);
			}

			case VIPMEDIC:
			{
			    GivePlayerWeapon(playerid,31,1000);
			    GivePlayerWeapon(playerid,24,500);
			    SetPlayerArmour(playerid,70.0);
			    SetPlayerSkin(playerid,71);
			}

			case VIPSCOUT:
			{
			    GivePlayerWeapon(playerid,34,130);
			    GivePlayerWeapon(playerid,24,500);
			    SetPlayerArmour(playerid,30.0);
			    SetPlayerSkin(playerid,294);
			}
			case HITMAN:
			{
			    GivePlayerWeapon(playerid,30,1000);
			    GivePlayerWeapon(playerid,33,1000);
			    SetPlayerArmour(playerid,90.0);
			    SetPlayerSkin(playerid,249);
			}

			case E_ENGINEER:
			{
   				GivePlayerWeapon(playerid,24,200);
			    GivePlayerWeapon(playerid,25,100);
			    SetPlayerArmour(playerid,80.0);
			    SetPlayerSkin(playerid,260);
			}

			case SOLDIER:
			{
				GivePlayerWeapon(playerid,30,300);
			    GivePlayerWeapon(playerid,24,80);
			    SetPlayerArmour(playerid,70.0);
			    SetPlayerSkin(playerid,287);
			}

			case DOCTOR:
			{
				GivePlayerWeapon(playerid,23,150);
			    SetPlayerArmour(playerid,60.0);
			    SetPlayerSkin(playerid,70);
			}
			case WEAPONSDEALER:
			{
			    GivePlayerWeapon(playerid,24,250);
			    GivePlayerWeapon(playerid,29,500);
			    SetPlayerArmour(playerid,50.0);
			    SetPlayerSkin(playerid,28);
			}
			case SHOTGUNSPECIAL:
			{
			    GivePlayerWeapon(playerid,25,500);
			    SetPlayerArmour(playerid,50.0);
			    SetPlayerSkin(playerid,67);
            }
            case BUDDY:
            {
            GivePlayerWeapon(playerid,14,1);
            GivePlayerWeapon(playerid,22,100);
            SetPlayerArmour(playerid,90.0);
            SetPlayerSkin(playerid,141);
            }
            case AKICK:
            {
            GivePlayerWeapon(playerid,27,2000);
            SetPlayerArmour(playerid,90.00);
            SetPlayerSkin(playerid,121);
            SetPlayerHealth(playerid,200);
            }
            case BOXER:
            {
                GivePlayerWeapon(playerid,5,1);
                SetPlayerArmour(playerid,50.00);
                SetPlayerAttachedObject( playerid,1,18978,2,0.065999,0.012999,0.000000,16.099998,81.499969,81.000000,1.000000,1.000000,1.000000);
                SetPlayerSkin(playerid,81);
			}
			case GHOST:
			{
                GivePlayerWeapon(playerid,25,500);
			    GivePlayerWeapon(playerid,24,4000);
			    SetPlayerArmour(playerid,90.00);
			    ///PutPlayerInVehicle(playerid, vehicleid, 520);
			    SetPlayerAttachedObject( playerid, 0, 18693, 5, 1.983503, 1.558882, -0.129482, 86.705787, 308.978118, 268.198822, 1.500000, 1.500000, 1.500000 );
                SetPlayerAttachedObject( playerid, 1, 18693, 6, 1.983503, 1.558882, -0.129482, 86.705787, 308.978118, 268.198822, 1.500000, 1.500000, 1.500000 );
                SetPlayerAttachedObject( playerid, 2, 18703, 6, 1.983503, 1.558882, -0.129482, 86.705787, 308.978118, 268.198822, 1.500000, 1.500000, 1.500000 );
                SetPlayerAttachedObject( playerid, 3, 18703, 5, 1.983503, 1.558882, -0.129482, 86.705787, 308.978118, 268.198822, 1.500000, 1.500000, 1.500000 );
                SetPlayerAttachedObject( playerid,1,18978,2,0.065999,0.012999,0.000000,16.099998,81.499969,81.000000,1.000000,1.000000,1.000000);
			    SetPlayerSkin(playerid,17);
			}
			case BOMBER:
			{
				GivePlayerWeapon(playerid,35,4);
				GivePlayerWeapon(playerid,31,1000);
				GivePlayerWeapon(playerid,24,4000);
				SetPlayerArmour(playerid,50.00);
				SetPlayerSkin(playerid,122);
			}
			case MASTER:
			{
			    GivePlayerWeapon(playerid,29,1000);
				SetPlayerArmour(playerid,90.00);
				SetPlayerSkin(playerid,47);
			}
			case SMOKEUP:
			{
			    GivePlayerWeapon(playerid,24,250);
				GivePlayerWeapon(playerid,37,500);
				GivePlayerWeapon(playerid,29,1000);
				GivePlayerWeapon(playerid,31,1000);
			    SetPlayerArmour(playerid,95.00);
			    SetPlayerAttachedObject( playerid, 0, 18693, 5, 1.983503, 1.558882, -0.129482, 86.705787, 308.978118, 268.198822, 1.500000, 1.500000, 1.500000 );
                SetPlayerAttachedObject( playerid, 1, 18693, 6, 1.983503, 1.558882, -0.129482, 86.705787, 308.978118, 268.198822, 1.500000, 1.500000, 1.500000 );
                SetPlayerAttachedObject( playerid, 2, 18703, 6, 1.983503, 1.558882, -0.129482, 86.705787, 308.978118, 268.198822, 1.500000, 1.500000, 1.500000 );
                SetPlayerAttachedObject( playerid, 3, 18703, 5, 1.983503, 1.558882, -0.129482, 86.705787, 308.978118, 268.198822, 1.500000, 1.500000, 1.500000 );
                SetPlayerAttachedObject( playerid,1,18978,2,0.065999,0.012999,0.000000,16.099998,81.499969,81.000000,1.000000,1.000000,1.000000);
			    SetPlayerSkin(playerid,170);
			}
		}
	}

	if(team[playerid] == TEAM_ZOMBIE)
	{
	    ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid,9,1);
		SetPlayerArmour(playerid,0);
	    switch(pInfo[playerid][pZombieClass])
	    {
	        case STANDARDZOMBIE: SetPlayerSkin(playerid,181);
	        case MUTATEDZOMBIE: SetPlayerSkin(playerid,1);
	        case FASTZOMBIE:
			{
			SetPlayerSkin(playerid,162);
	        SetPlayerAttachedObject(playerid, 0, 1549, 1, 0.0199, -0.1169, -0.1920, 0.0000, 94.1000, 0.0000, 1.0000, 1.0000, 1.0000, 0, 0); // "FASTZOMBIE" by Fahad. (Skin:3)
			SetPlayerAttachedObject(playerid, 1, 1549, 1, 0.0239, -0.1239, 0.1379, 0.0000, 79.5000, 0.0000, 1.0000, 1.0000, 1.0000, 0, 0); // "FASTZOMBIE" by Fahad. (Skin:3)
			SetPlayerAttachedObject(playerid, 2, 2404, 1, 0.3019, -0.0670, 1.3139, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 0, 0); // "FASTZOMBIE" by Fahad. (Skin:3)
			SetPlayerAttachedObject(playerid, 3, 2404, 1, 0.3109, -0.0750, -1.3500, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 0, 0); // "FASTZOMBIE" by Fahad. (Skin:3)
			SetPlayerAttachedObject(playerid, 4, 2061, 5, 0.3469, 0.0140, -0.0769, 0.0000, 105.2997, 3.9000, 0.3439, 1.0000, 2.2309, 0, 0); // "FASTZOMBIE" by Fahad. (Skin:3)
			}
			case REAPERZOMBIE: SetPlayerSkin(playerid,157);
	        case WITCHZOMBIE: SetPlayerSkin(playerid,196);
	        case BOOMERZOMBIE: SetPlayerSkin(playerid,264),SetPlayerHealth(playerid,15);
	        case STOMPERZOMBIE: SetPlayerSkin(playerid,239);
	        case SCREAMERZOMBIE: SetPlayerSkin(playerid,212);
			case FIREBREATHER:
			{
			switch(random(10))
				{
					case 0: SetPlayerSkin(playerid,152);
					case 1: SetPlayerSkin(playerid,178);
					case 2: SetPlayerSkin(playerid,237);
					case 3: SetPlayerSkin(playerid,238);
					case 4: SetPlayerSkin(playerid,246);
					case 5: SetPlayerSkin(playerid,256);
					case 6: SetPlayerSkin(playerid,257);
					case 7: SetPlayerSkin(playerid,64);
					case 8: SetPlayerSkin(playerid,63);
					case 9: SetPlayerSkin(playerid,87);

				}
			SetPlayerAttachedObject(playerid, 0, 6865, 2, 0.0559, -0.0299, 0.0069, 0.4999, 82.9999, -132.0999, 0.1350, 0.1270, 0.0849, 0, 0); // "FIREBREATHER" by Fahad. (Skin:257)
			SetPlayerAttachedObject(playerid, 1, 1610, 6, -0.1350, 0.0019, -0.0480, -4.6999, 69.9000, -0.6999, 0.4299, 0.4239, 2.3980, 0, 0); // "FIREBREATHER" by Fahad. (Skin:257)
			SetPlayerAttachedObject(playerid, 2, 2041, 5, 0.1759, -0.0789, -0.0339, 129.7997, 0.0000, 98.1000, 1.0000, 1.0000, 1.0000, 0, 0); // "FIREBREATHER" by Fahad. (Skin:257)
			SetPlayerAttachedObject(playerid, 3, 3884, 1, -0.4959, 0.0069, 0.0070, -88.8999, 89.8999, 83.1999, 0.5329, 0.5809, 0.3529, 0, 0); // "FIREBREATHER" by Fahad. (Skin:257)
			SetPlayerAttachedObject(playerid, 4, 2901, 9, 0.0000, -0.0070, 0.0000, 0.0000, 0.0000, 0.0000, 0.4079, 0.8639, 0.6269, 0, 0); // "FIREBREATHER" by Fahad. (Skin:257)
			SetPlayerAttachedObject(playerid, 5, 2901, 10, 0.0000, 0.0339, 0.0000, 0.0000, 0.0000, 0.0000, 0.3849, 0.6760, 0.6759, 0, 0); // "FIREBREATHER" by Fahad. (Skin:257)
			SetPlayerAttachedObject(playerid, 6, 2060, 1, -0.2379, 0.0000, 0.0000, 95.5000, -2.4999, 0.0000, 1.0909, 0.9480, 1.0000, 0, 0); // "FIREBREATHER" by Fahad. (Skin:257)

			}
	        case ADVANCEDMUTATED: SetPlayerSkin(playerid,15);
	        case HEAVYSCREAMER: SetPlayerSkin(playerid,134);
			case FLESHEATER: SetPlayerSkin(playerid,213);
			case ADVANCEDWITCH:
			{
			SetPlayerSkin(playerid,198);
			SetPlayerAttachedObject(playerid, 0, 1254, 2, 0.0789, -0.0359, 0.0149, 0.0000, 87.5000, -2.0999, 1.3489, 1.3969, 1.2609, 0, 0); // 
			SetPlayerAttachedObject(playerid, 1, 3092, 1, 0.0000, -0.2249, 0.0000, 5.7999, 85.2000, 167.7000, 1.0000, 1.0000, 1.0000, 0, 0); // 
			SetPlayerAttachedObject(playerid, 2, 1319, 9, -0.2219, 0.0000, 0.0000, 0.0000, 88.0000, 0.1999, 1.8190, 2.3880, 0.7570, 0, 0); // 
			SetPlayerAttachedObject(playerid, 3, 1319, 10, -0.2509, 0.0359, 0.0000, 0.0000, 88.3000, -3.5999, 1.7950, 2.4869, 0.7079, 0, 0); // 
			SetPlayerAttachedObject(playerid, 4, 2238, 6, 0.3359, 0.0000, 0.0230, 0.0000, 86.7999, 0.0000, 1.0000, 1.0000, 1.0000, 0, 0); //
			SetPlayerAttachedObject(playerid, 5, 2901, 1, 0.0749, 0.0000, 0.0429, 0.0000, 0.0000, 0.0000, 0.4650, 1.0000, 1.0559, 0, 0); //
			}
			case ADVANCEDBOOMER:
			{
			SetPlayerSkin(playerid,259);
			SetPlayerAttachedObject(playerid, 0, 3379, 1, 0.0000, -0.7129, -0.1800, -76.0999, 2.1999, 88.4999, 1.0000, 1.0000, 1.0000, 0, 0); // 
			SetPlayerAttachedObject(playerid, 1, 1636, 5, 0.2059, 0.0260, 0.0000, 0.0000, 3.5999, -83.9999, 1.0000, 1.0000, 1.0000, 0, 0); // 
			SetPlayerAttachedObject(playerid, 2, 1214, 1, 0.2189, 0.0469, 0.0000, 0.0000, 86.6000, -2.2999, 0.8099, 0.8249, 0.3369, 0, 0); // 
			SetPlayerAttachedObject(playerid, 3, 1636, 6, 0.1659, 0.0000, 0.0559, 0.0000, -19.1000, -95.5000, 1.0000, 1.0000, 1.0000, 0, 0); // 
			SetPlayerAttachedObject(playerid, 4, 2429, 1, 0.4629, 0.2370, 0.2269, 0.0000, -93.3999, 0.6000, 1.0000, 1.0000, 1.0000, 0, 0); //
			SetPlayerAttachedObject(playerid, 5, 1211, 9, -0.1699, -0.0020, 0.0000, -75.7000, 93.0000, -3.5999, 2.1409, 1.0000, 0.8489, 0, 0); //
			SetPlayerAttachedObject(playerid, 6, 1211, 10, -0.1979, 0.0000, 0.0000, 0.0000, 87.0000, 73.2999, 1.6749, 1.0000, 0.9079, 0, 0); //
			}
			case NEMESIS:
			{
			SetPlayerSkin(playerid,241);
			SetPlayerAttachedObject(playerid, 0, 19314, 2, 0.1089, 0.0000, 0.0000, -5.4999, -8.3000, -2.8999, 1.0000, 1.0000, 1.0000, 0, 0);
			SetPlayerAttachedObject(playerid, 1, 19515, 1, 0.0740, 0.0509, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 0, 0);
			SetPlayerAttachedObject(playerid, 2, 19514, 2, 0.1000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 0, 0);
			SetPlayerAttachedObject(playerid, 3, 2041, 6, 0.1790, 0.0000, 0.0819, 4.2999, -0.8999, 82.6000, 1.0000, 1.0000, 1.0000, 0, 0);
			SetPlayerAttachedObject(playerid, 4, 2041, 5, 0.2440, 0.0179, -0.0419, 134.5999, 0.0000, 84.9000, 1.0000, 1.0000, 1.0000, 0, 0);
			SetPlayerAttachedObject(playerid, 5, 2590, 1, -0.5350, -0.1229, -0.1779, 0.0000, -107.1999, 3.4999, 1.0000, 1.0000, 1.0000, 0, 0);
			SetPlayerAttachedObject(playerid, 6, 2589, 1, -4.7890, -0.0979, 0.3429, 0.0000, -86.7000, 0.0000, 1.0000, 1.0000, 1.0000, 0, 0);
			SetPlayerHealth(playerid,200);
			}
			case HZOMBIE:
			{
			SetPlayerSkin(playerid,32);
			}
			case SLENDER:
			{
            SetPlayerSkin(playerid,100);
            SetPlayerHealth(playerid,200);
            }
            case DSNIPE:
            {
            SetPlayerSkin(playerid,210);
            GivePlayerWeapon(playerid,34,100);
			}
            case KZOM:
            {
            SetPlayerSkin(playerid,142);
            }
            case GZOM:
            {
            SetPlayerSkin(playerid,33);
            SetPlayerColor(playerid,0xFFFFFF00);
			}
			case ADVSTOMPER:
			{
			SetPlayerSkin(playerid,239);
			}
			case ADVSCREAMER:
			{
			SetPlayerSkin(playerid,132);
			}
		}
	}
	return 1;
}

function ScreamerClearAnim(i) return ClearAnimations(i);

stock InfectPlayerStandard(playerid)
{
	if(team[playerid] == TEAM_HUMAN)
	{
		if(pInfo[playerid][IsPlayerInfected] == 0)
		{
	        pInfo[playerid][IsPlayerInfectedTimer] = SetTimerEx("StandardInfection",2000,1,"i",playerid);
			SetPlayerColor(playerid,COLOR_PINK);
			TextDrawShowForPlayer(playerid,Infected[playerid]);
			pInfo[playerid][IsPlayerInfected] = 1;
		}
	}
	return 1;
}

stock InfectPlayerMutated(playerid)
{
	if(team[playerid] == TEAM_HUMAN)
	{
		if(pInfo[playerid][IsPlayerInfected] == 0)
		{
	        pInfo[playerid][IsPlayerInfectedTimer] = SetTimerEx("MutatedInfection",1500,1,"i",playerid);
			SetPlayerColor(playerid,COLOR_PINK);
			TextDrawShowForPlayer(playerid,Infected[playerid]);
			pInfo[playerid][IsPlayerInfected] = 1;
		}
	}
	return 1;
}

stock InfectPlayerFleshEater(playerid)
{
	if(team[playerid] == TEAM_HUMAN)
	{
		if(pInfo[playerid][IsPlayerInfected] == 0)
		{
	        pInfo[playerid][IsPlayerInfectedTimer] = SetTimerEx("FleshEaterInfection",1500,1,"i",playerid);
			SetPlayerColor(playerid,COLOR_PINK);
			TextDrawShowForPlayer(playerid,Infected[playerid]);
			pInfo[playerid][IsPlayerInfected] = 1;
		}
	}
	return 1;
}

stock CurePlayer(playerid)
{
	if(pInfo[playerid][IsPlayerInfected] == 1)
	{
	    KillTimer(pInfo[playerid][IsPlayerInfectedTimer]);
	    pInfo[playerid][IsPlayerInfected] = 0;
	    SetPlayerColor(playerid,COLOR_HUMAN);
		ApplyAnimation(playerid,"MEDIC","CPR",4.1,0,1,1,1,1);
		SetPlayerDrunkLevel(playerid,0);
		TextDrawHideForPlayer(playerid,Infected[playerid]);
	}
	return 1;
}

function StandardInfection(playerid)
{
	GameTextForPlayer(playerid,"~n~~n~~n~~n~~r~Infected",1000,5);
	new Float:health;
	GetPlayerHealth(playerid, health);
	SetPlayerHealth(playerid, health - 2.5);
}

function MutatedInfection(playerid)
{
    SetPlayerDrunkLevel(playerid,6000);
   	GameTextForPlayer(playerid,"~n~~n~~n~~n~~r~Infected",1000,5);
	new Float:health;
	GetPlayerHealth(playerid, health);
	SetPlayerHealth(playerid, health - 4.5);
	return 1;
}

function FleshEaterInfection(playerid)
{
    SetPlayerDrunkLevel(playerid,7500);
   	GameTextForPlayer(playerid,"~n~~n~~n~~n~~r~Flesh Eater Infection",1000,5);
	new Float:health;
	GetPlayerHealth(playerid, health);
	SetPlayerHealth(playerid, health - 10.0);
	return 1;
}

stock CheckToStartMap()
{
	if(Map[IsStarted] == 0)
	{
		LoadMap(LoadNewMap());
		StartMap();
		Map[IsStarted] = 1;
	}
	return 1;
}

stock ChangeCameraView(playerid)
{
	new Float:px,Float:py,Float:pz,Float:pa;
	GetPlayerPos(playerid, px, py, pz);
	GetPlayerFacingAngle(playerid, pa);
	SetPlayerCameraPos(playerid, px, py, pz+6.0);
	SetPlayerCameraLookAt(playerid, px, py, pz);

	return 1;
}

stock SendPlayerMaxAmmo( playerid )
{
    new slot, weap, ammo;

    for ( slot = 0; slot < 14; slot++ ) {
        GetPlayerWeaponData( playerid, slot, weap, ammo );
        if ( IsValidWeapon( weap ) ) {
            GivePlayerWeapon( playerid, weap, 99999 );
        }
    }
    return 1;
}

stock IsValidWeapon( weaponid )
{
    if ( weaponid > 0 && weaponid < 19 || weaponid > 21 && weaponid < 47 ) return 1;
    return 0;
}

stock GetXPName()
{
	new str[64];
	switch(Map[XPType])
	{
		case 1: str = "~y~Normal ~w~XP";
		case 2: str = "~g~Double ~w~XP";
		case 3: str = "~b~Triple ~w~XP";
		case 4: str = "~r~Super ~w~XP";
	}
	return str;
}

stock NeedXP(playerid,xprequires)
{
	if(pInfo[playerid][pXP] == xprequires) return 1;
	return 1;
}

stock NeedKills(playerid,killrequires)
{
	if(pInfo[playerid][pKills] == killrequires) return 1;
	return 1;
}

stock CheckToLevelOrRankUp(killerid)
{
	new str[256];

	if(pInfo[killerid][pKills] == 10) { pInfo[killerid][pRank] = 1,format(str,sizeof(str),""chat""COL_PINK" %s has ranked up to rank Private 1",PlayerName(killerid)),SendClientMessageToAll(-1,str); }
    if(pInfo[killerid][pKills] == 50) { pInfo[killerid][pRank] = 2,format(str,sizeof(str),""chat""COL_PINK" %s has ranked up to rank Private I 2",PlayerName(killerid)),SendClientMessageToAll(-1,str); }
    if(pInfo[killerid][pKills] == 100) { pInfo[killerid][pRank] = 3,format(str,sizeof(str),""chat""COL_PINK" %s has ranked up to rank Private II 3",PlayerName(killerid)),SendClientMessageToAll(-1,str); }
    if(pInfo[killerid][pKills] == 150) { pInfo[killerid][pRank] = 4,format(str,sizeof(str),""chat""COL_PINK" %s has ranked up to rank Specialist 4",PlayerName(killerid)),SendClientMessageToAll(-1,str); }
    if(pInfo[killerid][pKills] == 200) { pInfo[killerid][pRank] = 5,format(str,sizeof(str),""chat""COL_PINK" %s has ranked up to rank Corporal 5",PlayerName(killerid)),SendClientMessageToAll(-1,str); }
    if(pInfo[killerid][pKills] == 250) { pInfo[killerid][pRank] = 6,format(str,sizeof(str),""chat""COL_PINK" %s has ranked up to rank Corporal I 6",PlayerName(killerid)),SendClientMessageToAll(-1,str); }
    if(pInfo[killerid][pKills] == 300) { pInfo[killerid][pRank] = 7,format(str,sizeof(str),""chat""COL_PINK" %s has ranked up to rank Corporal II 7",PlayerName(killerid)),SendClientMessageToAll(-1,str); }
    if(pInfo[killerid][pKills] == 350) { pInfo[killerid][pRank] = 8,format(str,sizeof(str),""chat""COL_PINK" %s has ranked up to rank Sergeant 8",PlayerName(killerid)),SendClientMessageToAll(-1,str); }
    if(pInfo[killerid][pKills] == 400) { pInfo[killerid][pRank] = 9,format(str,sizeof(str),""chat""COL_PINK" %s has ranked up to rank Sergeant I 9",PlayerName(killerid)),SendClientMessageToAll(-1,str); }
    if(pInfo[killerid][pKills] == 450) { pInfo[killerid][pRank] = 10,format(str,sizeof(str),""chat""COL_PINK" %s has ranked up to rank Sergeant II 10",PlayerName(killerid)),SendClientMessageToAll(-1,str); }
    if(pInfo[killerid][pKills] == 500) { pInfo[killerid][pRank] = 11,format(str,sizeof(str),""chat""COL_PINK" %s has ranked up to rank Commander 1 1",PlayerName(killerid)),SendClientMessageToAll(-1,str); }
    if(pInfo[killerid][pKills] == 550) { pInfo[killerid][pRank] = 12,format(str,sizeof(str),""chat""COL_PINK" %s has ranked up to rank Commander I 12",PlayerName(killerid)),SendClientMessageToAll(-1,str); }
    if(pInfo[killerid][pKills] == 600) { pInfo[killerid][pRank] = 13,format(str,sizeof(str),""chat""COL_PINK" %s has ranked up to rank Commander II 13",PlayerName(killerid)),SendClientMessageToAll(-1,str); }
    if(pInfo[killerid][pKills] == 650) { pInfo[killerid][pRank] = 14,format(str,sizeof(str),""chat""COL_PINK" %s has ranked up to rank Killer 14",PlayerName(killerid)),SendClientMessageToAll(-1,str); }
    if(pInfo[killerid][pKills] == 700) { pInfo[killerid][pRank] = 15,format(str,sizeof(str),""chat""COL_PINK" %s has ranked up to rank Killer I 15",PlayerName(killerid)),SendClientMessageToAll(-1,str); }
    if(pInfo[killerid][pKills] == 750) { pInfo[killerid][pRank] = 16,format(str,sizeof(str),""chat""COL_PINK" %s has ranked up to rank Killer II 16",PlayerName(killerid)),SendClientMessageToAll(-1,str); }
    if(pInfo[killerid][pKills] == 800) { pInfo[killerid][pRank] = 17,format(str,sizeof(str),""chat""COL_PINK" %s has ranked up to rank Major 1 7",PlayerName(killerid)),SendClientMessageToAll(-1,str); }
    if(pInfo[killerid][pKills] == 850) { pInfo[killerid][pRank] = 18,format(str,sizeof(str),""chat""COL_PINK" %s has ranked up to rank Major I 18",PlayerName(killerid)),SendClientMessageToAll(-1,str); }
    if(pInfo[killerid][pKills] == 900) { pInfo[killerid][pRank] = 19,format(str,sizeof(str),""chat""COL_PINK" %s has ranked up to rank Major II 19",PlayerName(killerid)),SendClientMessageToAll(-1,str); }
    if(pInfo[killerid][pKills] == 950) { pInfo[killerid][pRank] = 20,format(str,sizeof(str),""chat""COL_PINK" %s has ranked up to rank Doctor 20",PlayerName(killerid)),SendClientMessageToAll(-1,str); }
    if(pInfo[killerid][pKills] == 1000) { pInfo[killerid][pRank] = 21,format(str,sizeof(str),""chat""COL_PINK" %s has ranked up to rank Doctor I 21",PlayerName(killerid)),SendClientMessageToAll(-1,str); }
    if(pInfo[killerid][pKills] == 1500) { pInfo[killerid][pRank] = 22,format(str,sizeof(str),""chat""COL_PINK" %s has ranked up to rank Doctor II 22",PlayerName(killerid)),SendClientMessageToAll(-1,str); }
    if(pInfo[killerid][pKills] == 2000) { pInfo[killerid][pRank] = 23,format(str,sizeof(str),""chat""COL_PINK" %s has ranked up to rank Colonel 23",PlayerName(killerid)),SendClientMessageToAll(-1,str); }
    if(pInfo[killerid][pKills] == 2500) { pInfo[killerid][pRank] = 24,format(str,sizeof(str),""chat""COL_PINK" %s has ranked up to rank Colonel I 24",PlayerName(killerid)),SendClientMessageToAll(-1,str); }
    if(pInfo[killerid][pKills] == 3000) { pInfo[killerid][pRank] = 25,format(str,sizeof(str),""chat""COL_PINK" %s has ranked up to rank Colonel II 25",PlayerName(killerid)),SendClientMessageToAll(-1,str); }
    if(pInfo[killerid][pKills] == 3500) { pInfo[killerid][pRank] = 26,format(str,sizeof(str),""chat""COL_PINK" %s has ranked up to rank Sniper 26",PlayerName(killerid)),SendClientMessageToAll(-1,str); }
    if(pInfo[killerid][pKills] == 4000) { pInfo[killerid][pRank] = 27,format(str,sizeof(str),""chat""COL_PINK" %s has ranked up to rank Sniper I 27",PlayerName(killerid)),SendClientMessageToAll(-1,str); }
    if(pInfo[killerid][pKills] == 4500) { pInfo[killerid][pRank] = 28,format(str,sizeof(str),""chat""COL_PINK" %s has ranked up to rank Sniper II 28",PlayerName(killerid)),SendClientMessageToAll(-1,str); }
    if(pInfo[killerid][pKills] == 5000) { pInfo[killerid][pRank] = 29,format(str,sizeof(str),""chat""COL_PINK" %s has ranked up to rank Survivor 29",PlayerName(killerid)),SendClientMessageToAll(-1,str); }
    if(pInfo[killerid][pKills] == 5500) { pInfo[killerid][pRank] = 30,format(str,sizeof(str),""chat""COL_PINK" %s has ranked up to rank Survivor I 30",PlayerName(killerid)),SendClientMessageToAll(-1,str); }
	if(pInfo[killerid][pKills] == 6000) { pInfo[killerid][pRank] = 31,format(str,sizeof(str),""chat""COL_PINK" %s has ranked up to rank Survivor II 31",PlayerName(killerid)),SendClientMessageToAll(-1,str); }
    if(pInfo[killerid][pKills] == 6500) { pInfo[killerid][pRank] = 32,format(str,sizeof(str),""chat""COL_PINK" %s has hit the max rank Final-list 32",PlayerName(killerid)),SendClientMessageToAll(-1,str); }
	return 1;
}

function HideiKilled(playerid)
{
    TextDrawHideForPlayer(playerid, iKilled[playerid]);
    return 1;
}

function C4Explode(playerid)
{
   	new Float:X,Float:Y,Float:Z;
	new Float:hp;
	GetObjectPos(c4Obj[playerid],X,Y,Z);
	foreach(Player,i)
	{
	    if(IsPlayerInRangeOfPoint(i, 3.5,X,Y,Z))
		{
	        if(team[i] == TEAM_ZOMBIE)
			{
				GetPlayerHealth(i,hp);
				SetPlayerHealth(i,hp-35);
			}
		}
	}
	CreateExplosion(X,Y,Z,1,10.0);
	DestroyObject(c4Obj[playerid]);
	return 1;
}

function NemesisSmoke(playerid)
{
    RemovePlayerAttachedObject(playerid,7);
	return 1;
}

stock CreateEvacMaps()
{
	if(Map[EvacType] == 1)
	{
		CreateObject(19257,-1429.09,-981.20,193.10,3.28,0.00,5.47);
		CreateObject(19257,-1395.39,-948.29,197.89,5.46,357.79,30.09);
		CreateObject(19257,-1486.69,-954.70,191.69,13.12,1.12,280.79);
		CreateObject(790,-1490.30,-948.90,188.10,0.00,0.00,41.56);
		CreateObject(790,-1396.19,-955.59,197.00,0.00,0.00,196.38);
		CreateObject(790,-1435.79,-984.19,189.60,0.00,0.00,127.25);
		CreateObject(2060,-1433.19,-985.50,192.80,0.00,0.00,0.00);
		CreateObject(2060,-1432.19,-985.40,192.69,0.00,0.00,0.00);
		CreateObject(2060,-1431.09,-985.20,192.60,0.00,0.00,0.00);
		CreateObject(2060,-1430.19,-984.90,192.50,0.00,0.00,0.00);
		CreateObject(2060,-1429.19,-984.79,192.50,0.00,0.00,0.00);
		CreateObject(2060,-1428.09,-984.70,192.50,0.00,0.00,0.00);
		CreateObject(2060,-1427.09,-984.59,192.50,0.00,0.00,0.00);
		CreateObject(2060,-1426.09,-984.50,192.39,0.00,0.00,0.00);
		CreateObject(2060,-1425.00,-984.40,192.39,0.00,0.00,0.00);
		CreateObject(2060,-1424.09,-984.29,192.39,0.00,0.00,0.00);
		CreateObject(2060,-1424.30,-984.29,192.69,0.00,0.00,0.00);
		CreateObject(2060,-1425.50,-984.50,192.69,0.00,0.00,0.00);
		CreateObject(2060,-1426.50,-984.59,192.69,0.00,0.00,0.00);
		CreateObject(2060,-1427.50,-984.59,192.69,0.00,0.00,0.00);
		CreateObject(2060,-1428.40,-984.90,192.80,0.00,0.00,0.00);
		CreateObject(2060,-1429.40,-985.00,192.80,0.00,0.00,0.00);
		CreateObject(2060,-1430.50,-985.00,192.80,0.00,0.00,0.00);
		CreateObject(2060,-1431.50,-985.29,192.89,0.00,0.00,0.00);
		CreateObject(2060,-1432.50,-985.59,193.00,0.00,0.00,0.00);
		CreateObject(2060,-1433.19,-985.29,193.10,0.00,0.00,0.00);
		CreateObject(2060,-1431.90,-985.40,193.30,0.00,0.00,0.00);
		CreateObject(2060,-1431.80,-985.00,193.19,0.00,0.00,0.00);
		CreateObject(2060,-1430.90,-984.90,193.19,0.00,0.00,0.00);
		CreateObject(2060,-1429.90,-984.79,193.19,0.00,0.00,0.00);
		CreateObject(2060,-1428.90,-984.70,193.19,0.00,0.00,0.00);
		CreateObject(2060,-1427.90,-984.59,193.19,0.00,0.00,0.00);
		CreateObject(2060,-1427.00,-984.59,193.10,0.00,0.00,0.00);
		CreateObject(2060,-1425.90,-984.50,193.10,0.00,0.00,0.00);
		CreateObject(2060,-1424.80,-984.40,193.00,0.00,0.00,0.00);
		CreateObject(2060,-1424.09,-984.29,193.00,0.00,0.00,0.00);
		CreateObject(2060,-1433.09,-984.70,193.19,0.00,0.00,0.00);
		CreateObject(2060,-1431.90,-984.40,193.19,0.00,0.00,0.00);
		CreateObject(2060,-1430.69,-984.29,193.10,0.00,0.00,0.00);
		CreateObject(2060,-1429.50,-984.50,193.50,0.00,0.00,0.00);
		CreateObject(2060,-1428.50,-984.09,193.10,0.00,0.00,0.00);
		CreateObject(2060,-1427.00,-984.40,193.39,0.00,0.00,0.00);
		CreateObject(2060,-1425.80,-984.00,193.19,0.00,0.00,0.00);
		CreateObject(2060,-1424.59,-983.79,193.19,0.00,0.00,0.00);
		CreateObject(2060,-1427.19,-983.70,193.19,0.00,0.00,0.00);
		CreateObject(2060,-1425.69,-983.09,193.30,0.00,0.00,0.00);
		CreateObject(2060,-1424.50,-983.09,193.30,0.00,0.00,0.00);
		CreateObject(2060,-1425.69,-983.59,193.19,0.00,0.00,0.00);
		CreateObject(2060,-1432.09,-983.79,193.30,0.00,0.00,0.00);
		CreateObject(2060,-1430.50,-983.79,193.30,0.00,0.00,0.00);
		CreateObject(2060,-1429.30,-983.90,193.19,0.00,0.00,0.00);
		CreateObject(2060,-1429.00,-983.50,194.39,0.00,0.00,5.47);
		CreateObject(2060,-1394.30,-950.09,199.00,0.00,0.00,211.35);
		CreateObject(2060,-1489.59,-953.09,191.89,0.00,0.00,284.11);
		CreateObject(2060,-1489.40,-954.20,191.80,0.00,0.00,284.11);
		CreateObject(2060,-1489.19,-955.20,191.80,0.00,0.00,284.11);
		CreateObject(2060,-1489.00,-956.00,191.80,0.00,0.00,284.11);
		CreateObject(2060,-1488.80,-957.09,191.80,0.00,0.00,284.11);
		CreateObject(2060,-1489.80,-952.59,192.19,0.00,0.00,284.11);
		CreateObject(2060,-1489.50,-953.59,192.19,0.00,0.00,284.11);
		CreateObject(2060,-1489.30,-954.59,192.10,0.00,0.00,284.11);
		CreateObject(2060,-1489.09,-955.70,192.10,0.00,0.00,284.11);
		CreateObject(2060,-1488.90,-956.79,192.10,0.00,0.00,284.11);
		CreateObject(2060,-1489.09,-955.09,192.60,0.00,0.00,284.11);
		CreateObject(3884,-1395.19,-948.40,201.60,0.00,1.09,212.76);
		CreateObject(3095,-1455.59,-922.40,200.50,0.00,358.90,269.99);
		CreateObject(3885,-1454.69,-923.29,202.19,0.00,0.00,0.00);
		CreateObject(3885,-1429.19,-981.40,197.00,4.37,0.00,0.00);
		CreateObject(3885,-1487.19,-954.79,195.10,0.00,353.43,358.90);
		CreateObject(3885,-1395.30,-948.40,201.80,5.47,1.09,359.89);
		CreateObject(3884,-1454.30,-923.29,202.10,0.00,0.00,359.25);
		CreateObject(3884,-1429.30,-981.29,196.80,0.00,0.00,182.98);
		CreateObject(3884,-1487.00,-954.90,195.10,352.33,1.10,98.38);
		CreateObject(3279,-1480.50,-961.20,192.30,358.90,356.71,92.34);
		CreateObject(3279,-1382.09,-941.19,198.00,0.00,0.00,213.32);
		CreateObject(3279,-1416.29,-975.59,194.19,358.90,356.70,92.41);
		CreateObject(987,-1444.29,-983.50,192.50,0.00,0.00,0.00);
		CreateObject(987,-1456.19,-983.59,192.50,0.00,0.00,0.00);
		CreateObject(987,-1468.19,-983.59,192.60,0.00,0.00,0.00);
		CreateObject(987,-1479.39,-979.59,192.60,0.00,0.00,340.25);
		CreateObject(987,-1483.90,-968.40,191.10,0.00,0.00,293.06);
		CreateObject(987,-1487.09,-958.19,191.10,0.00,0.00,288.67);
		CreateObject(987,-1489.90,-939.79,191.69,0.00,0.00,277.72);
		CreateObject(987,-1491.50,-928.09,191.69,0.00,0.00,277.71);
		CreateObject(987,-1483.59,-918.69,194.50,1.08,6.56,230.32);
		CreateObject(987,-1473.50,-913.50,197.69,1.08,6.56,208.31);
		CreateObject(987,-1462.30,-912.20,200.60,359.99,359.99,187.59);
		CreateObject(987,-1473.50,-913.50,200.60,1.08,6.56,208.31);
		CreateObject(987,-1483.90,-919.09,199.19,1.08,6.56,230.32);
		CreateObject(987,-1491.50,-928.09,198.00,0.00,0.00,277.71);
		CreateObject(987,-1489.90,-939.79,198.00,0.00,0.00,277.72);
		CreateObject(987,-1487.09,-958.20,196.80,0.00,0.00,288.67);
		CreateObject(987,-1483.90,-968.40,196.69,0.00,0.00,293.06);
		CreateObject(987,-1479.40,-979.59,196.69,0.00,0.00,340.25);
		CreateObject(987,-1468.19,-983.59,196.60,0.00,0.00,0.00);
		CreateObject(987,-1456.19,-983.59,196.60,0.00,0.00,0.00);
		CreateObject(987,-1444.30,-983.50,196.60,0.00,0.00,0.00);
		CreateObject(987,-1450.50,-910.59,200.60,359.98,359.98,187.59);
		CreateObject(987,-1438.69,-909.09,200.39,359.98,359.98,187.59);
		CreateObject(987,-1427.30,-909.20,196.39,359.98,359.98,180.42);
		CreateObject(987,-1427.30,-909.20,200.10,359.98,359.98,180.41);
		CreateObject(987,-1415.69,-909.20,194.50,359.98,359.98,180.41);
		CreateObject(987,-1415.50,-909.09,200.10,359.98,359.98,180.41);
		CreateObject(987,-1404.00,-909.09,190.69,359.98,359.98,180.41);
		CreateObject(987,-1404.00,-909.09,195.89,359.98,359.98,180.41);
		CreateObject(987,-1404.00,-909.09,200.10,359.98,359.98,180.41);
		CreateObject(987,-1392.30,-909.00,189.00,359.98,359.98,180.41);
		CreateObject(987,-1392.30,-909.00,194.00,359.98,359.98,180.41);
		CreateObject(987,-1392.30,-909.00,200.00,359.98,359.98,180.41);
		CreateObject(987,-1380.30,-908.90,186.10,359.98,359.98,180.41);
		CreateObject(987,-1380.30,-908.90,192.39,359.98,359.98,180.41);
		CreateObject(987,-1380.30,-908.90,197.10,359.98,359.98,180.41);
		CreateObject(987,-1380.30,-908.90,200.00,359.98,359.98,180.41);
		CreateObject(987,-1373.40,-918.40,186.10,359.98,359.98,125.45);
		CreateObject(987,-1373.40,-918.40,191.19,359.97,359.97,125.44);
		CreateObject(987,-1373.40,-918.40,196.39,359.97,359.97,125.44);
		CreateObject(987,-1373.40,-918.40,200.00,359.97,359.97,125.44);
		CreateObject(987,-1374.80,-930.09,190.50,359.97,5.45,83.73);
		CreateObject(987,-1374.90,-929.70,195.00,359.97,2.16,83.73);
		CreateObject(987,-1374.90,-929.70,200.50,359.97,2.16,83.72);
		CreateObject(987,-1376.00,-941.59,194.19,359.97,5.44,83.73);
		CreateObject(987,-1376.09,-941.20,199.10,359.97,3.25,83.73);
		CreateObject(987,-1376.09,-941.20,201.19,359.97,3.25,83.72);
		CreateObject(987,-1380.09,-952.20,197.39,357.78,358.87,69.37);
		CreateObject(987,-1380.09,-952.20,201.00,357.78,358.87,69.37);
		CreateObject(987,-1391.09,-979.00,191.80,357.78,358.87,37.37);
		CreateObject(987,-1426.09,-981.50,192.50,0.00,0.00,0.00);
		CreateObject(987,-1414.09,-981.50,192.00,0.00,0.00,0.00);
		CreateObject(987,-1402.80,-981.40,192.00,0.00,0.00,12.04);
		CreateObject(987,-1426.09,-981.50,196.39,0.00,0.00,0.00);
		CreateObject(987,-1414.09,-981.50,196.39,0.00,0.00,0.00);
		CreateObject(987,-1402.80,-981.40,196.39,0.00,0.00,12.04);
		CreateObject(987,-1391.09,-979.00,196.39,357.78,358.86,37.37);
		CreateObject(11488,-1437.40,-952.59,200.10,0.00,0.00,346.86);
		CreateObject(2745,-1394.59,-949.70,198.39,0.00,0.00,29.67);
		CreateObject(3265,-1380.19,-962.79,196.39,0.00,0.00,85.73);
		CreateObject(3265,-1489.50,-958.20,193.60,0.00,0.00,277.62);
		CreateObject(3265,-1423.89,-983.19,193.10,0.00,0.00,1.12);
		CreateObject(2745,-1429.09,-982.90,193.69,0.00,0.00,14.33);
		CreateObject(2745,-1488.80,-955.00,192.00,0.00,0.00,280.90);
		CreateObject(2892,-1381.50,-966.59,196.10,4.36,4.39,359.66);
		CreateObject(987,-1381.69,-962.00,196.60,357.78,358.87,80.32);
		CreateObject(18850,-1425.80,-925.59,195.10,0.00,0.00,0.00);
		AddStaticVehicleEx(432,-1434.40,-947.09,201.10,262.15,-1,-1,50);
		AddStaticVehicleEx(433,-1445.09,-963.79,202.00,0.00,-1,-1,50);
		AddStaticVehicleEx(433,-1450.69,-963.09,202.69,0.00,-1,-1,50);
		CreateObject(2985,-1394.40,-950.09,198.30,0.00,0.00,305.03);
		CreateObject(2985,-1488.80,-955.00,191.80,358.94,16.42,193.21);
		CreateObject(2985,-1429.09,-983.19,193.60,358.94,16.42,276.75);
		AddStaticVehicleEx(471,-1467.09,-944.40,203.69,262.10,-1,-1,50);
		AddStaticVehicleEx(470,-1435.00,-958.70,201.10,270.90,-1,-1,50);
		AddStaticVehicleEx(470,-1435.19,-953.40,201.10,270.90,-1,-1,50);
		CreateObject(1596,-1425.40,-968.20,205.19,0.00,0.00,3.43);
		CreateObject(1596,-1459.30,-926.59,203.00,0.00,0.00,329.33);
		CreateObject(1596,-1437.00,-967.00,205.19,0.00,0.00,271.08);
		AddStaticVehicleEx(548,-1427.90,-925.59,210.30,269.81,-1,-1,50);
		CreateObject(3030,-1414.09,-937.09,207.39,0.00,0.00,0.00);
		CreateObject(3030,-1427.19,-978.40,194.60,358.91,353.35,229.40);
		CreateObject(3030,-1484.79,-951.69,193.39,0.00,0.00,52.66);
		CreateObject(3030,-1395.29,-945.59,199.19,19.70,0.00,172.40);
		CreateObject(3030,-1429.30,-966.70,202.69,358.91,353.35,284.36);
		CreateObject(3763,-1471.90,-919.29,233.80,0.00,0.00,0.00);
		CreateObject(3932,-1467.80,-945.09,204.69,0.00,0.00,353.43);
		CreateObject(3932,-1460.00,-939.59,203.39,357.81,357.80,267.61);
		CreateObject(3066,-1433.00,-963.59,200.89,358.83,1.09,269.87);
		CreateObject(3046,-1424.69,-967.40,200.19,0.00,0.00,0.00);
		CreateObject(3046,-1425.90,-967.40,200.19,0.00,0.00,0.00);
		CreateObject(3046,-1427.00,-967.29,200.19,0.00,0.00,0.00);
		CreateObject(3046,-1428.00,-967.29,200.30,0.00,0.00,0.00);
		CreateObject(2973,-1436.09,-967.00,200.00,0.00,0.00,0.00);
		CreateObject(2973,-1432.30,-966.79,200.00,0.00,0.00,0.00);
		CreateObject(2973,-1429.30,-967.00,199.89,0.00,0.00,0.00);
		CreateObject(930,-1470.00,-947.29,203.50,0.00,0.00,0.00);
		CreateObject(930,-1468.69,-947.40,203.60,0.00,0.00,356.71);
		CreateObject(2669,-1430.09,-932.59,201.80,0.00,0.00,0.00);
		CreateObject(2068,-1433.59,-931.90,201.39,273.24,0.00,59.27);
		CreateObject(2068,-1429.40,-927.59,201.39,273.24,0.00,4.26);
		CreateObject(2068,-1423.69,-929.00,201.00,273.24,0.00,329.12);
		CreateObject(2068,-1419.50,-932.29,201.00,273.24,0.00,320.35);
		CreateObject(2068,-1431.40,-928.59,201.39,273.24,0.00,33.97);
		CreateObject(16782,-1430.09,-930.29,201.89,0.00,0.00,268.82);
		CreateObject(3877,-1399.00,-947.20,203.10,0.00,0.00,0.00);
		CreateObject(3877,-1451.80,-926.09,202.80,0.00,0.00,0.00);
		CreateObject(3877,-1484.09,-956.79,197.30,0.00,0.00,0.00);
		CreateObject(3877,-1431.90,-978.70,198.30,0.00,0.00,0.00);
		CreateObject(790,-1470.50,-976.50,191.60,0.00,0.00,127.25);
		CreateObject(790,-1467.19,-981.79,191.60,0.00,0.00,127.25);
		CreateObject(790,-1470.30,-956.09,190.69,0.00,0.00,231.63);
		CreateObject(790,-1471.40,-936.59,190.69,0.00,0.00,269.00);
		CreateObject(790,-1381.09,-922.90,192.50,0.00,358.90,272.22);
		CreateObject(790,-1389.50,-933.00,192.50,0.00,358.90,206.26);
		CreateObject(1554,-1466.09,-947.79,203.10,0.00,0.00,0.00);
		CreateObject(1554,-1467.09,-947.59,203.19,0.00,0.00,0.00);
		CreateObject(1554,-1467.80,-947.20,203.19,0.00,0.00,0.00);
		CreateObject(1213,-1381.40,-963.59,196.60,0.00,0.00,0.00);
		CreateObject(1213,-1381.50,-966.50,196.19,0.00,0.00,0.00);
		CreateObject(1213,-1381.50,-968.29,196.00,0.00,0.00,0.00);
		CreateObject(1213,-1381.50,-969.90,196.00,0.00,0.00,0.00);
		CreateObject(5821,-1443.80,-928.59,203.19,0.00,0.00,358.90);
		CreateObject(967,-1381.59,-971.00,195.60,0.00,0.00,0.00);
		CreateObject(2985,-1381.19,-971.00,195.89,0.00,6.56,1.09);
		CreateObject(2745,-1381.40,-971.00,196.19,0.00,0.00,94.52);
		CreateObject(1250,-1381.90,-962.59,197.50,0.00,0.00,0.00);
		CreateObject(1374,-1382.00,-963.29,197.89,0.00,0.00,182.48);
		CreateObject(18762,-1382.09,-962.50,195.00,0.00,0.00,0.00);
		CreateObject(17055,-1463.19,-961.59,202.60,13.13,1.12,330.07);
		CreateObject(16662,-1418.09,-928.79,201.30,0.00,0.00,288.25);
		CreateObject(18765,-1418.19,-929.29,198.69,270.11,180.00,133.86);
		CreateObject(18765,-1425.30,-925.09,198.69,270.11,179.99,165.61);
		CreateObject(18765,-1431.19,-923.40,198.69,270.00,175.62,160.18);
		CreateObject(3807,-1424.90,-933.70,200.10,359.61,290.76,8.75);
		CreateObject(3791,-1458.69,-937.70,202.30,0.00,8.75,0.00);
		CreateObject(3791,-1458.80,-939.29,202.30,0.00,8.75,0.00);
		CreateObject(3791,-1458.90,-940.90,202.30,0.00,8.75,0.00);
		CreateObject(3795,-1461.59,-939.90,202.80,0.00,0.00,85.73);
		CreateObject(18765,-1435.40,-926.90,198.69,270.11,179.99,246.85);
		//Objects:209,Vehicles:7
	}

	if(Map[EvacType] == 2)
	{
		Map[AllowWater] = 1;
		CreateObject(10794,3051.59,494.00,4.50,0.00,0.00,44.98);
		CreateObject(10793,2999.39,441.50,29.60,0.00,0.00,44.99);
		CreateObject(10795,3050.50,492.89,14.50,0.00,0.00,44.99);
		CreateObject(1691,3018.39,504.29,0.69,0.00,274.30,330.28);
		CreateObject(18762,3028.80,497.20,0.60,0.00,91.17,354.48);
		CreateObject(18762,3030.00,499.60,0.60,0.00,91.16,310.61);
		CreateObject(18762,3026.80,503.00,0.69,0.00,91.16,316.08);
		CreateObject(18762,3024.19,497.79,0.60,0.00,88.97,351.49);
		CreateObject(18762,3023.39,505.79,0.80,0.00,91.15,324.84);
		CreateObject(18762,3019.69,498.89,0.60,0.00,91.17,339.45);
		CreateObject(18762,3017.89,501.70,0.69,0.00,91.17,245.05);
		CreateObject(18762,3020.00,505.79,0.80,0.00,91.17,240.16);
		CreateObject(18765,3023.80,502.20,-4.69,0.01,88.98,56.17);
		CreateObject(18762,3024.60,498.20,-0.30,0.00,91.17,341.64);
		CreateObject(18762,3022.00,499.70,-0.20,0.00,91.17,326.14);
		CreateObject(18762,3020.30,500.79,-0.20,0.00,91.17,326.14);
		CreateObject(18762,3019.89,500.10,-0.20,0.00,91.17,326.14);
		CreateObject(18762,3019.69,499.79,-0.20,0.00,91.17,340.37);
		CreateObject(18762,3029.80,498.89,-0.20,0.00,91.17,314.10);
		CreateObject(18762,3029.19,498.60,-0.20,0.00,91.17,314.09);
		CreateObject(18762,3029.10,497.70,-0.20,0.00,91.17,345.85);
		CreateObject(18762,3029.30,498.10,-0.20,0.00,91.17,339.28);
		CreateObject(18762,3033.10,496.00,0.50,0.00,91.16,310.61);
		CreateObject(18762,3033.30,496.70,0.50,0.00,91.17,354.47);
		CreateObject(18762,3020.60,499.79,-0.20,0.00,91.17,326.14);
		CreateObject(11245,3019.89,507.79,2.90,0.00,312.80,147.30);
		CreateObject(2983,3022.19,504.10,0.80,318.43,2.92,229.23);
		CreateObject(3350,3022.80,504.79,-0.40,0.00,0.00,47.22);
		CreateObject(2985,3031.19,497.39,0.40,0.00,355.62,327.07);
		CreateObject(2207,3021.89,503.10,0.30,0.00,0.00,46.13);
		CreateObject(2985,3020.60,498.60,0.40,0.00,355.61,260.07);
		CreateObject(2985,3025.19,504.60,0.50,0.00,355.61,48.50);
		CreateObject(9831,3016.69,505.70,0.30,43.79,0.00,63.68);
		CreateObject(18762,3031.30,502.00,0.60,0.00,91.16,46.12);
		CreateObject(18762,3032.00,501.29,0.60,0.00,91.15,46.12);
		CreateObject(18762,3032.69,500.70,0.60,0.00,91.15,46.12);
		CreateObject(18850,3023.39,466.29,7.19,0.00,0.00,314.92);
		AddStaticVehicleEx(548,3023.89,466.20,22.39,224.77,-1,-1,50);
		CreateObject(3884,3103.10,546.00,20.39,0.00,0.00,25.75);
		CreateObject(3277,3055.39,479.00,13.80,0.00,0.00,0.00);
		CreateObject(3277,3103.60,546.40,20.50,0.00,0.00,156.13);
		CreateObject(3884,3055.50,479.29,13.60,0.00,0.00,181.88);
		CreateObject(3877,2999.10,463.89,28.79,0.00,0.00,45.03);
		CreateObject(3877,3021.59,441.09,28.79,0.00,0.00,45.03);
		CreateObject(3877,3098.39,547.90,20.50,0.00,0.00,45.03);
		CreateObject(3877,3060.19,479.39,15.39,0.00,0.00,45.03);
		CreateObject(3066,3080.19,500.29,14.80,0.00,0.00,314.96);
		CreateObject(3066,3089.30,509.50,14.80,0.00,0.00,314.96);
		CreateObject(3066,3097.80,517.79,14.80,0.00,0.00,314.96);
		AddStaticVehicleEx(470,3041.89,496.00,14.89,43.94,-1,-1,50);
		AddStaticVehicleEx(470,3049.60,488.39,14.89,43.93,-1,-1,50);
		CreateObject(13489,3029.69,491.60,15.69,0.00,0.00,314.96);
		CreateObject(8885,3114.60,539.90,17.20,0.00,0.00,57.22);
		CreateObject(11237,3082.39,524.79,20.39,0.00,0.00,46.20);
		CreateObject(3791,3044.30,465.50,14.19,0.00,0.00,0.00);
		CreateObject(3791,3047.80,467.60,14.19,0.00,0.00,45.14);
		CreateObject(3791,3046.50,468.79,14.19,0.00,0.00,45.14);
		CreateObject(3791,3050.80,471.10,14.19,0.00,0.00,45.14);
		CreateObject(3791,3049.50,472.10,14.19,0.00,0.00,45.14);
		CreateObject(3791,3045.39,470.20,14.19,0.00,0.00,45.14);
		CreateObject(3791,3048.19,473.29,14.19,0.00,0.00,45.14);
		AddStaticVehicleEx(595,3003.89,494.09,0.00,174.11,-1,-1,50);
		CreateObject(7981,3111.10,552.09,18.79,0.00,0.00,46.20);
		CreateObject(3877,3105.19,541.50,20.60,0.00,0.00,45.03);
		CreateObject(1682,3115.60,556.40,30.29,0.00,0.00,317.07);
		CreateObject(2061,3108.00,562.70,14.10,0.00,0.00,0.00);
		CreateObject(2061,3108.30,562.50,14.10,0.00,0.00,0.00);
		CreateObject(2061,3108.50,562.29,14.10,0.00,0.00,0.00);
		CreateObject(2061,3108.60,562.09,14.10,0.00,0.00,0.00);
		CreateObject(2061,3108.89,562.00,14.10,0.00,0.00,0.00);
		CreateObject(2061,3109.00,561.79,14.10,0.00,0.00,0.00);
		CreateObject(2061,3109.19,561.59,14.10,0.00,0.00,0.00);
		CreateObject(2061,3109.39,561.50,14.10,0.00,0.00,0.00);
		CreateObject(2061,3109.50,561.29,14.10,0.00,0.00,0.00);
		CreateObject(2061,3107.89,562.29,14.10,0.00,0.00,0.00);
		CreateObject(2061,3108.10,562.09,14.10,0.00,0.00,0.00);
		CreateObject(2061,3108.19,561.90,14.10,0.00,0.00,0.00);
		CreateObject(2061,3108.50,561.79,14.10,0.00,0.00,0.00);
		CreateObject(2061,3108.69,561.50,14.10,0.00,0.00,0.00);
		CreateObject(2061,3108.89,561.29,14.10,0.00,0.00,0.00);
		CreateObject(2061,3109.10,561.09,14.10,0.00,0.00,0.00);
		CreateObject(1213,3017.10,500.00,0.89,0.00,0.00,0.00);
		CreateObject(1691,3139.89,580.90,26.00,0.00,277.58,223.67);
		CreateObject(3258,3115.80,561.29,21.89,0.00,82.33,42.81);
		CreateObject(3258,3118.50,558.50,21.89,0.00,82.33,42.80);
		CreateObject(16782,3011.60,452.79,23.50,0.00,0.00,47.33);
		CreateObject(18683,3141.00,580.20,26.20,0.00,0.00,0.00);
		CreateObject(18683,3138.80,583.00,26.20,0.00,0.00,0.00);
		//Objects:84,Vehicles:4

	}

	if(Map[EvacType] == 3)
	{
  		CreateObject(14548,257.00,2510.10,123.50,13.13,0.00,270.90);
		CreateObject(16782,227.10,2512.80,123.09,0.00,0.00,0.00);
		CreateObject(5156,252.30,2507.39,118.80,8.75,1.10,92.13);
		CreateObject(3256,246.30,2488.30,117.59,0.00,281.89,0.00);
		CreateObject(3256,247.89,2466.10,118.00,0.00,282.98,0.00);
		CreateObject(3256,247.69,2442.50,118.00,0.00,282.98,0.00);
		CreateObject(3256,245.10,2531.30,116.90,359.99,284.08,0.00);
		CreateObject(3256,243.39,2554.39,116.90,0.00,281.89,0.00);
		CreateObject(3256,241.50,2573.80,116.90,0.00,280.79,0.00);
		CreateObject(2117,231.69,2514.00,121.40,0.00,0.00,0.00);
		CreateObject(2117,233.69,2514.00,121.40,0.00,0.00,0.00);
		CreateObject(1753,239.69,2513.89,121.50,0.00,0.00,0.00);
		CreateObject(1753,242.89,2512.50,121.50,0.00,1.09,269.85);
		CreateObject(15037,241.00,2506.50,121.90,0.00,0.00,94.52);
		CreateObject(2063,261.20,2505.69,122.40,0.00,0.00,180.83);
		CreateObject(2063,264.89,2505.80,122.40,0.00,0.00,180.82);
		CreateObject(2063,268.70,2505.89,122.40,0.00,0.00,180.82);
		CreateObject(2606,234.19,2514.39,122.40,0.00,0.00,0.00);
		CreateObject(2616,227.19,2506.60,122.50,0.00,0.00,91.06);
		CreateObject(2611,229.10,2514.30,122.69,6.56,358.89,0.12);
		CreateObject(2053,231.39,2513.69,122.30,0.00,0.00,0.00);
		CreateObject(2053,231.39,2514.10,122.30,0.00,0.00,0.00);
		CreateObject(2053,231.60,2514.19,122.30,0.00,0.00,0.00);
		CreateObject(2053,231.60,2514.00,122.30,0.00,0.00,0.00);
		CreateObject(2053,231.60,2513.69,122.30,0.00,0.00,0.00);
		CreateObject(2053,231.80,2513.69,122.30,0.00,0.00,0.00);
		CreateObject(2053,231.80,2514.19,122.30,0.00,0.00,0.00);
		CreateObject(2053,231.89,2514.00,122.30,0.00,0.00,0.00);
		CreateObject(2202,229.80,2513.80,121.40,0.00,0.00,0.00);
		CreateObject(1714,234.30,2512.80,121.40,0.00,0.00,225.90);
		CreateObject(1714,237.10,2506.89,121.40,0.00,0.00,60.58);
		CreateObject(2763,240.60,2511.89,121.90,0.00,0.00,0.00);
		CreateObject(3383,232.50,2505.60,121.40,0.00,0.00,0.00);
		CreateObject(11631,237.80,2506.10,122.69,0.00,0.00,180.90);
		CreateObject(3111,233.60,2505.69,122.50,0.00,0.00,0.00);
		CreateObject(3031,228.39,2505.60,123.00,0.00,0.00,47.22);
		CreateObject(3017,230.80,2505.89,122.59,0.00,0.00,269.02);
		CreateObject(2919,257.79,2506.19,122.19,0.00,0.00,0.00);
		CreateObject(1808,236.30,2514.19,121.40,0.00,0.00,0.00);
		CreateObject(2827,240.50,2512.10,122.30,0.00,0.00,0.00);
		CreateObject(2683,240.89,2511.89,122.40,0.00,0.00,0.00);
		CreateObject(2683,240.80,2511.60,122.40,0.00,0.00,0.00);
		CreateObject(2683,240.39,2511.69,122.40,0.00,0.00,0.00);
		CreateObject(3791,254.19,2506.39,122.00,0.00,0.00,0.00);
		CreateObject(3791,250.89,2506.30,121.90,0.00,0.00,0.00);
		CreateObject(3791,254.10,2507.80,122.00,0.00,0.00,0.00);
		CreateObject(3791,271.89,2506.30,122.00,0.00,0.00,0.00);
		CreateObject(2886,226.69,2510.89,123.09,0.00,0.00,0.00);
		AddStaticVehicleEx(470,274.50,2513.50,122.59,272.98,-1,-1,50);
		AddStaticVehicleEx(470,267.00,2513.10,122.59,270.79,-1,-1,50);
		CreateObject(3066,252.50,2513.50,122.50,0.00,0.00,272.11);
		CreateObject(3046,259.39,2513.89,121.90,0.00,0.00,0.00);
		CreateObject(3046,260.39,2513.80,121.90,0.00,0.00,0.00);
		CreateObject(3046,261.29,2513.80,121.90,0.00,0.00,0.00);
		CreateObject(3046,262.20,2513.80,121.90,0.00,0.00,0.00);
		CreateObject(3046,263.00,2514.00,121.90,0.00,0.00,0.00);
		CreateObject(3013,260.60,2505.80,123.40,0.00,0.00,0.00);
		CreateObject(3013,261.39,2505.69,123.30,0.00,0.00,0.00);
		CreateObject(3013,262.00,2505.80,123.30,0.00,0.00,0.00);
		CreateObject(3013,265.39,2506.00,123.00,0.00,0.00,0.00);
		CreateObject(3013,264.50,2505.89,122.59,0.00,0.00,0.00);
		CreateObject(3013,265.60,2505.89,122.19,0.00,0.00,0.00);
		CreateObject(3013,269.10,2506.10,123.00,0.00,0.00,0.00);
		CreateObject(3013,268.10,2505.89,123.30,0.00,0.00,0.00);
		CreateObject(3013,268.00,2506.00,122.50,0.00,0.00,0.00);
		CreateObject(2973,247.50,2506.10,121.50,0.00,0.00,0.00);
		CreateObject(964,274.60,2506.19,121.50,0.00,0.00,0.00);
		CreateObject(964,246.50,2513.89,121.50,0.00,0.00,0.00);
		CreateObject(964,244.50,2513.89,121.50,0.00,0.00,0.00);
		CreateObject(964,237.89,2513.69,121.50,0.00,0.00,0.00);
		CreateObject(964,235.50,2505.69,121.40,0.00,0.00,0.00);
		CreateObject(2041,262.10,2505.80,122.50,0.00,0.00,178.64);
		CreateObject(1242,269.70,2506.00,122.00,0.00,0.00,0.00);
		CreateObject(1242,268.89,2505.89,122.00,0.00,0.00,0.00);
		CreateObject(1242,267.89,2505.89,122.00,0.00,0.00,0.00);
		CreateObject(2035,269.10,2506.00,122.40,1.09,3.28,359.93);
		CreateObject(2035,265.39,2505.80,122.40,1.08,1.09,359.97);
		CreateObject(2035,260.60,2505.80,122.40,1.08,359.53,0.00);
		CreateObject(2036,264.70,2505.89,123.30,0.00,0.00,0.00);
		CreateObject(2044,264.79,2506.00,122.90,0.00,0.00,0.00);
		CreateObject(2045,261.60,2505.80,122.80,0.00,0.00,269.88);
		//

	}
	return 1;
}

stock SpawnVars(playerid)
{
	TextDrawHideForPlayer(playerid, ServerIntroOne[playerid]);
	TextDrawHideForPlayer(playerid, ServerIntroTwo[playerid]);
	ShowTextdrawsAfterConnect(playerid);

	return 1;
}

stock sendClassMessage(playerid)
{
	new string[128];
	if(team[playerid] == TEAM_HUMAN) format(string,sizeof(string),""chat""COL_YELLOW" You spawned as %s type /class or /class2 to change your class",GetClassName(playerid));
    if(team[playerid] == TEAM_ZOMBIE) format(string,sizeof(string),""chat""COL_YELLOW" You spawned as %s type /class or /class2 to change your class",GetClassName(playerid));
    SendClientMessage(playerid,-1,string);
    return 1;
}

stock ShowTextdrawsAfterConnect(playerid)
{
	TextDrawShowForPlayer(playerid, TimeLeft);
	TextDrawShowForPlayer(playerid, UntilRescue);
	TextDrawShowForPlayer(playerid, AliveInfo);
	TextDrawShowForPlayer(playerid, remadeText);
	TextDrawShowForPlayer(playerid, remadeText2);
	TextDrawShowForPlayer(playerid, CurrentMap);
	TextDrawShowForPlayer(playerid, XP);
	TextDrawShowForPlayer(playerid, myXP[playerid]);
	TextDrawShowForPlayer(playerid, EventText);
	TextDrawShowForPlayer(playerid, ChatMsg);
	return 1;
}

stock hideTextdrawsAfterConnect(playerid)
{
	TextDrawHideForPlayer(playerid, TimeLeft);
	TextDrawHideForPlayer(playerid, UntilRescue);
	TextDrawHideForPlayer(playerid, AliveInfo);
	TextDrawHideForPlayer(playerid, remadeText);
	TextDrawHideForPlayer(playerid, remadeText2);
	TextDrawHideForPlayer(playerid, CurrentMap);
	TextDrawHideForPlayer(playerid, XP);
	TextDrawHideForPlayer(playerid, myXP[playerid]);
	TextDrawHideForPlayer(playerid, EventText);
	TextDrawHideForPlayer(playerid, ChatMsg);
	return 1;
}

stock GetClassName(playerid)
{
	new classname[64];
	if(team[playerid] == TEAM_HUMAN)
	{
	    switch(pInfo[playerid][pHumanClass])
		{
		    case CIVILIAN: classname = "Civilian";
		    case POLICEMAN: classname = "Police man";
		    case MEDIC: classname = "Medic";
		    case SCOUT: classname = "Scout";
		    case HEAVYMEDIC: classname = "Heavy Medic";
		    case FARMER: classname = "Farmer";
		    case ENGINEER: classname = "Engineer";
		    case SWAT: classname = "S.W.A.T";
		    case HEAVYSHOTGUN: classname = "Heavy Shoutgun";
		    case ADVANCEDMEDIC: classname = "Advanced Medic";
		    case ADVANCEDENGINEER: classname = "Advanced Engineer";
		    case FEDERALAGENT: classname = "Federal Agent";
		    case KICKBACK: classname = "Kick Back";
		    case ADVANCEDSCOUT: classname = "Advanced Scout";
			case COWBOY: classname = "Cowboy";
			case ASSASSIN: classname = "Assassin";
			case PIMP: classname = "Pimp";
			case EXPERIENCEDSCOUT: classname = "Experienced Scout";
			case SCIENTIST: classname = "Scientist";
			case TRAPMASTER: classname = "Trap Master";
		    case VIPENGINEER: classname = "V.I.P Engineer";
		    case VIPMEDIC: classname = "V.I.P Medic";
		    case VIPSCOUT: classname = "V.I.P Scout";
		    case E_ENGINEER: classname = "Experienced Engineer";
		    case DOCTOR: classname = "Doctor";
			case FBI: classname = "FBI";
			case WEAPONSDEALER: classname = "Heavy Soldier";
			case SMOKEUP: classname = "Smoke Up";
			case BOXER: classname = "Boxer";
			case BOMBER: classname = "BomberMan";
			case MASTER: classname = "Mp5 Master";
			case GHOST: classname = "Ghost Rider";
			case SHOTGUNSPECIAL: classname = "Shotgun Specialist";
			case BUDDY: classname = "Hey Buddy";
			case AKICK: classname = "Advanced KickBack";
			case TECG: classname = "Tec Girl";
			case BULL: classname = "Bulls Eye";
			case HITMAN: classname = "HitMan";

		}
	}

	if(team[playerid] == TEAM_ZOMBIE)
	{
	    switch(pInfo[playerid][pZombieClass])
	    {
	        case STANDARDZOMBIE: classname = "Standard Zombie";
	        case MUTATEDZOMBIE: classname = "Mutated Zombie";
	        case FASTZOMBIE: classname = "Fast Zombie";
	        case REAPERZOMBIE: classname = "Reaper Zombie";
	        case WITCHZOMBIE: classname = "Witch Zombie";
	        case BOOMERZOMBIE: classname = "Boomer Zombie";
	        case STOMPERZOMBIE: classname = "Stomper Zombie";
	        case SCREAMERZOMBIE: classname = "Screamer Zombie";
			case FIREBREATHER: classname = "Fire Breather";
	        case ADVANCEDMUTATED: classname = "Advanced Mutated";
	        case HEAVYSCREAMER: classname = "Heavy Screamer";
            case FLESHEATER: classname = "Flesh Eater";
            case ADVANCEDWITCH: classname = "Advanced Witch";
            case ADVSCREAMER: classname = "Advanced Screamer";
            case ADVANCEDBOOMER: classname = "Advanced Boomer";
			case NEMESIS: classname = "Nemesis";
			case HZOMBIE: classname = "Zombie Medic";
			case SLENDER: classname = "SlenderMan";
			case KZOM: classname = "Killer Zombie";
			case GZOM: classname = "Ghost Zombie";
			case DSNIPE: classname = "Dark Sniper";
		}
	}
	return classname;
}

stock GetAdminName(playerid)
{
	new adminname[128];
	switch(pInfo[playerid][pAdminLevel])
	{
		case 0: adminname = "Newbie/Regular";
		case 1: adminname = "Trial Moderator";
		case 2: adminname = "Moderator";
		case 3: adminname = "Sr.Moderator";
		case 4: adminname = "Management";
		case 5: adminname = "Head Admin";
		case 6: adminname = "Server Mapper";
		case 7: adminname = "Manager";
		case 8: adminname = "Owner";
		case 9: adminname = "Sr.Manager";
		case 10: adminname = "Founder";
	}
	return adminname;
}

function SPS_Reset_PVars()
{
	for(new i=0; i < MAX_PLAYERS; i++)
	{
	    if(GetPVarType(i, "SPS Muted") != PLAYER_VARTYPE_NONE) {
			SetPVarInt(i, "SPS Muted", 0);
		}
		if(GetPVarType(i, "SPS Messages Sent") != PLAYER_VARTYPE_NONE) {
	    	SetPVarInt(i, "SPS Messages Sent", 0);
	    }
	    if(GetPVarType(i, "SPS Spam Warnings") != PLAYER_VARTYPE_NONE) {
	    	SetPVarInt(i, "SPS Spam Warnings", 0);
	    }
	}
	return 1;
}

function SPS_Remove_Messages_Limit(playerid)
{
	if(GetPVarInt(playerid, "SPS Spam Warnings") == 1)
	{
	    new string[128], pName[MAX_PLAYER_NAME];
		GetPlayerName(playerid, pName, sizeof(pName));

		format(string, sizeof(string), ""chat""COL_LIGHTBLUE" Player %s has been muted for %i minutes because of flooding the chat.", pName, PLAYER_MUTE_TIME_MINUTES);
		for(new i=0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && i != playerid) SendClientMessage(i, -1, string);

		format(string, sizeof(string), ""chat""COL_LIGHTBLUE" You have been muted for %i minutes because of flooding the chat.", PLAYER_MUTE_TIME_MINUTES);
	    SendClientMessage(playerid, -1, string);

		SetTimerEx("SPS_Unmute_Player", (PLAYER_MUTE_TIME_MINUTES * 60000), 0, "i", playerid);
		SetPVarInt(playerid, "SPS Muted", 1);

		CallRemoteFunction("OnPlayerGetMuted", "i", playerid);
	}
	SetPVarInt(playerid, "SPS Messages Sent", 0);
	SetPVarInt(playerid, "SPS Spam Warnings", 0);
	return 1;
}
function SPS_Unmute_Player(playerid)
{
	SendClientMessage(playerid, -1, ""chat""COL_LIGHTBLUE" You have been automatically unmuted.");
	SetPVarInt(playerid, "SPS Muted", 0);
	return 1;
}
stock DoctorShield()
{
	new Float:X,Float:Y,Float:Z,Float:hp,str[128];
	GetObjectPos(DocShield,X,Y,Z);
	foreach(Player,i)
	{
	    if(IsPlayerInRangeOfPoint(i,4.5,X,Y,Z))
		{
	        if(team[i] == TEAM_HUMAN)
			{
	            GetPlayerHealth(i,hp);
	            if(hp < 80)
				{
	                SetPlayerHealth(i,hp+3.5);
	                format(str,sizeof(str),"~n~~n~~n~~n~~g~GETTING HEALED BY DOCTOR SHIELD~w~ (NEW HP: %.2f HP)",hp);
	                GameTextForPlayer(i,str,1000,5);
	            }
	            else
				{
	                GameTextForPlayer(i,"~n~~n~~n~~n~~r~YOU HAVE ENOUGH HP TO SURVIVE",1000,5);
	            }
	        }
	    }
	}
	return 1;
}

stock TrapMasterTrap()
{
	new Float:X,Float:Y,Float:Z;
	GetObjectPos(Trap,X,Y,Z);
	foreach(Player,i)
	{
	    if(IsPlayerInRangeOfPoint(i,2.5,X,Y,Z))
		{
			if(team[i] == TEAM_ZOMBIE)
			{
				CreateExplosion(X,Y,Z,3,40.0);
				DestroyObject(Trap);
			}
	    }
	}
	return 1;
}

stock LoadStaticObjectsFromFile(filename[])
{
    new File:file_ptr, line[256], modelid, Float:SpawnX, Float:SpawnY, Float:SpawnZ, Float:SpawnRotX, Float:SpawnRotY, Float:SpawnRotZ, objects_loaded;
    file_ptr = fopen(filename, io_read);
    if(!file_ptr) return printf("ERROR! Failed To Load Objects From The File %s (File Doesn't Exist In Scriptfiles Directory)!", filename);
    while(fread(file_ptr, line) > 0)
    {
        sscanf(line, "dffffff", modelid, SpawnX, SpawnY, SpawnZ, SpawnRotX, SpawnRotY, SpawnRotZ);
        CreateObject(modelid, SpawnX, SpawnY, SpawnZ, SpawnRotX, SpawnRotY, SpawnRotZ);
        objects_loaded++;
    }
    fclose(file_ptr);
    printf("Loaded %d objects from: %s", objects_loaded, filename);
    return objects_loaded;
}

stock LoadStaticVehiclesFromFile(const filename[])
{
	new File:file_ptr;
	new line[256];
	new var_from_line[64];
	new vehicletype;
	new Float:SpawnX;
	new Float:SpawnY;
	new Float:SpawnZ;
	new Float:SpawnRot;
	new Color1, Color2;
	new index;
	new vehicles_loaded;

	file_ptr = fopen(filename,filemode:io_read);
	if(!file_ptr) return 0;

	vehicles_loaded = 0;

	while(fread(file_ptr,line,256) > 0)
	{
		index = 0;
		index = token_by_delim(line,var_from_line,',',index);
		if(index == (-1)) continue;
		vehicletype = strval(var_from_line);
		if(vehicletype < 400 || vehicletype > 611) continue;
		index = token_by_delim(line,var_from_line,',',index+1);
		if(index == (-1)) continue;
		SpawnX = floatstr(var_from_line);

		index = token_by_delim(line,var_from_line,',',index+1);
		if(index == (-1)) continue;
		SpawnY = floatstr(var_from_line);

		index = token_by_delim(line,var_from_line,',',index+1);
		if(index == (-1)) continue;
		SpawnZ = floatstr(var_from_line);

		index = token_by_delim(line,var_from_line,',',index+1);
		if(index == (-1)) continue;
		SpawnRot = floatstr(var_from_line);
		index = token_by_delim(line,var_from_line,',',index+1);
		if(index == (-1)) continue;
		Color1 = strval(var_from_line);

		index = token_by_delim(line,var_from_line,';',index+1);
		Color2 = strval(var_from_line);

		CreateVehicle(vehicletype,SpawnX,SpawnY,SpawnZ+1,SpawnRot,Color1,Color2,15);

	//	AddStaticVehicle(vehicletype,SpawnX,SpawnY,SpawnZ+1,SpawnRot,Color1,Color2);
		vehicles_loaded++;
	}
	fclose(file_ptr);
	printf("Loaded %d vehicles from: %s",vehicles_loaded,filename);
	return vehicles_loaded;
}

stock token_by_delim(const string[], return_str[], delim, start_index)
{
    new x=0;
    while(string[start_index] != EOS && string[start_index] != delim) {
      return_str[x] = string[start_index];
      x++;
      start_index++;
    }
    return_str[x] = EOS;
    if(string[start_index] == EOS) start_index = (-1);
    return start_index;
}

stock udb_hash(buf[])
{
    new length=strlen(buf);
    new s1 = 1;
    new s2 = 0;
    new n;
    for (n=0; n<length; n++)
    {
       s1 = (s1 + buf[n]) % 65521;
       s2 = (s2 + s1)     % 65521;
    }
    return (s2 << 16) + s1;
}
